// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sequence_and_updates.proto

package dialog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/types"
import empty "github.com/golang/protobuf/ptypes/empty"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Sequence update
type UpdateSeqUpdate struct {
	Seq                  int32    `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	State                []byte   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	UpdateHeader         int32    `protobuf:"varint,3,opt,name=update_header,json=updateHeader" json:"update_header,omitempty"`
	Update               []byte   `protobuf:"bytes,4,opt,name=update,proto3" json:"update,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateSeqUpdate) Reset()         { *m = UpdateSeqUpdate{} }
func (m *UpdateSeqUpdate) String() string { return proto.CompactTextString(m) }
func (*UpdateSeqUpdate) ProtoMessage()    {}
func (*UpdateSeqUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{0}
}
func (m *UpdateSeqUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSeqUpdate.Unmarshal(m, b)
}
func (m *UpdateSeqUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSeqUpdate.Marshal(b, m, deterministic)
}
func (dst *UpdateSeqUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSeqUpdate.Merge(dst, src)
}
func (m *UpdateSeqUpdate) XXX_Size() int {
	return xxx_messageInfo_UpdateSeqUpdate.Size(m)
}
func (m *UpdateSeqUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSeqUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSeqUpdate proto.InternalMessageInfo

func (m *UpdateSeqUpdate) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *UpdateSeqUpdate) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *UpdateSeqUpdate) GetUpdateHeader() int32 {
	if m != nil {
		return m.UpdateHeader
	}
	return 0
}

func (m *UpdateSeqUpdate) GetUpdate() []byte {
	if m != nil {
		return m.Update
	}
	return nil
}

// Fat sequence update with additional data
type UpdateFatSeqUpdate struct {
	Seq                  int32    `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	State                []byte   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	UpdateHeader         int32    `protobuf:"varint,3,opt,name=update_header,json=updateHeader" json:"update_header,omitempty"`
	Update               []byte   `protobuf:"bytes,4,opt,name=update,proto3" json:"update,omitempty"`
	Users                []*User  `protobuf:"bytes,5,rep,name=users" json:"users,omitempty"`
	Groups               []*Group `protobuf:"bytes,6,rep,name=groups" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateFatSeqUpdate) Reset()         { *m = UpdateFatSeqUpdate{} }
func (m *UpdateFatSeqUpdate) String() string { return proto.CompactTextString(m) }
func (*UpdateFatSeqUpdate) ProtoMessage()    {}
func (*UpdateFatSeqUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{1}
}
func (m *UpdateFatSeqUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFatSeqUpdate.Unmarshal(m, b)
}
func (m *UpdateFatSeqUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFatSeqUpdate.Marshal(b, m, deterministic)
}
func (dst *UpdateFatSeqUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFatSeqUpdate.Merge(dst, src)
}
func (m *UpdateFatSeqUpdate) XXX_Size() int {
	return xxx_messageInfo_UpdateFatSeqUpdate.Size(m)
}
func (m *UpdateFatSeqUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFatSeqUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFatSeqUpdate proto.InternalMessageInfo

func (m *UpdateFatSeqUpdate) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *UpdateFatSeqUpdate) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *UpdateFatSeqUpdate) GetUpdateHeader() int32 {
	if m != nil {
		return m.UpdateHeader
	}
	return 0
}

func (m *UpdateFatSeqUpdate) GetUpdate() []byte {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *UpdateFatSeqUpdate) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *UpdateFatSeqUpdate) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

// Out of sequence update (for typing and online statuses)
type UpdateWeakUpdate struct {
	Date                 int64    `protobuf:"varint,1,opt,name=date" json:"date,omitempty"`
	UpdateHeader         int32    `protobuf:"varint,2,opt,name=update_header,json=updateHeader" json:"update_header,omitempty"`
	Update               []byte   `protobuf:"bytes,3,opt,name=update,proto3" json:"update,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateWeakUpdate) Reset()         { *m = UpdateWeakUpdate{} }
func (m *UpdateWeakUpdate) String() string { return proto.CompactTextString(m) }
func (*UpdateWeakUpdate) ProtoMessage()    {}
func (*UpdateWeakUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{2}
}
func (m *UpdateWeakUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWeakUpdate.Unmarshal(m, b)
}
func (m *UpdateWeakUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWeakUpdate.Marshal(b, m, deterministic)
}
func (dst *UpdateWeakUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWeakUpdate.Merge(dst, src)
}
func (m *UpdateWeakUpdate) XXX_Size() int {
	return xxx_messageInfo_UpdateWeakUpdate.Size(m)
}
func (m *UpdateWeakUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWeakUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWeakUpdate proto.InternalMessageInfo

func (m *UpdateWeakUpdate) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *UpdateWeakUpdate) GetUpdateHeader() int32 {
	if m != nil {
		return m.UpdateHeader
	}
	return 0
}

func (m *UpdateWeakUpdate) GetUpdate() []byte {
	if m != nil {
		return m.Update
	}
	return nil
}

// Fat Weak Update
type UpdateWeakFatUpdate struct {
	Date                 int64    `protobuf:"varint,1,opt,name=date" json:"date,omitempty"`
	UpdateHeader         int32    `protobuf:"varint,2,opt,name=update_header,json=updateHeader" json:"update_header,omitempty"`
	Update               []byte   `protobuf:"bytes,3,opt,name=update,proto3" json:"update,omitempty"`
	Users                []*User  `protobuf:"bytes,4,rep,name=users" json:"users,omitempty"`
	Groups               []*Group `protobuf:"bytes,5,rep,name=groups" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateWeakFatUpdate) Reset()         { *m = UpdateWeakFatUpdate{} }
func (m *UpdateWeakFatUpdate) String() string { return proto.CompactTextString(m) }
func (*UpdateWeakFatUpdate) ProtoMessage()    {}
func (*UpdateWeakFatUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{3}
}
func (m *UpdateWeakFatUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWeakFatUpdate.Unmarshal(m, b)
}
func (m *UpdateWeakFatUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWeakFatUpdate.Marshal(b, m, deterministic)
}
func (dst *UpdateWeakFatUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWeakFatUpdate.Merge(dst, src)
}
func (m *UpdateWeakFatUpdate) XXX_Size() int {
	return xxx_messageInfo_UpdateWeakFatUpdate.Size(m)
}
func (m *UpdateWeakFatUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWeakFatUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWeakFatUpdate proto.InternalMessageInfo

func (m *UpdateWeakFatUpdate) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *UpdateWeakFatUpdate) GetUpdateHeader() int32 {
	if m != nil {
		return m.UpdateHeader
	}
	return 0
}

func (m *UpdateWeakFatUpdate) GetUpdate() []byte {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *UpdateWeakFatUpdate) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *UpdateWeakFatUpdate) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

// Notification about requiring performing manual GetDifference
type UpdateSeqUpdateTooLong struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateSeqUpdateTooLong) Reset()         { *m = UpdateSeqUpdateTooLong{} }
func (m *UpdateSeqUpdateTooLong) String() string { return proto.CompactTextString(m) }
func (*UpdateSeqUpdateTooLong) ProtoMessage()    {}
func (*UpdateSeqUpdateTooLong) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{4}
}
func (m *UpdateSeqUpdateTooLong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSeqUpdateTooLong.Unmarshal(m, b)
}
func (m *UpdateSeqUpdateTooLong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSeqUpdateTooLong.Marshal(b, m, deterministic)
}
func (dst *UpdateSeqUpdateTooLong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSeqUpdateTooLong.Merge(dst, src)
}
func (m *UpdateSeqUpdateTooLong) XXX_Size() int {
	return xxx_messageInfo_UpdateSeqUpdateTooLong.Size(m)
}
func (m *UpdateSeqUpdateTooLong) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSeqUpdateTooLong.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSeqUpdateTooLong proto.InternalMessageInfo

// Update container
// updateHeader Header of update
// update The updatre
type UpdateContainer struct {
	UpdateHeader         int32    `protobuf:"varint,1,opt,name=update_header,json=updateHeader" json:"update_header,omitempty"`
	Update               []byte   `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateContainer) Reset()         { *m = UpdateContainer{} }
func (m *UpdateContainer) String() string { return proto.CompactTextString(m) }
func (*UpdateContainer) ProtoMessage()    {}
func (*UpdateContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{5}
}
func (m *UpdateContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateContainer.Unmarshal(m, b)
}
func (m *UpdateContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateContainer.Marshal(b, m, deterministic)
}
func (dst *UpdateContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateContainer.Merge(dst, src)
}
func (m *UpdateContainer) XXX_Size() int {
	return xxx_messageInfo_UpdateContainer.Size(m)
}
func (m *UpdateContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateContainer.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateContainer proto.InternalMessageInfo

func (m *UpdateContainer) GetUpdateHeader() int32 {
	if m != nil {
		return m.UpdateHeader
	}
	return 0
}

func (m *UpdateContainer) GetUpdate() []byte {
	if m != nil {
		return m.Update
	}
	return nil
}

// Combined update
type UpdateCombinedUpdate struct {
	SeqStart             int32              `protobuf:"varint,1,opt,name=seq_start,json=seqStart" json:"seq_start,omitempty"`
	SeqEnd               int32              `protobuf:"varint,2,opt,name=seq_end,json=seqEnd" json:"seq_end,omitempty"`
	State                []byte             `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Users                []*User            `protobuf:"bytes,4,rep,name=users" json:"users,omitempty"`
	Groups               []*Group           `protobuf:"bytes,5,rep,name=groups" json:"groups,omitempty"`
	Updates              []*UpdateContainer `protobuf:"bytes,6,rep,name=updates" json:"updates,omitempty"`
	Messages             []*HistoryMessage  `protobuf:"bytes,7,rep,name=messages" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateCombinedUpdate) Reset()         { *m = UpdateCombinedUpdate{} }
func (m *UpdateCombinedUpdate) String() string { return proto.CompactTextString(m) }
func (*UpdateCombinedUpdate) ProtoMessage()    {}
func (*UpdateCombinedUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{6}
}
func (m *UpdateCombinedUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCombinedUpdate.Unmarshal(m, b)
}
func (m *UpdateCombinedUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCombinedUpdate.Marshal(b, m, deterministic)
}
func (dst *UpdateCombinedUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCombinedUpdate.Merge(dst, src)
}
func (m *UpdateCombinedUpdate) XXX_Size() int {
	return xxx_messageInfo_UpdateCombinedUpdate.Size(m)
}
func (m *UpdateCombinedUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCombinedUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCombinedUpdate proto.InternalMessageInfo

func (m *UpdateCombinedUpdate) GetSeqStart() int32 {
	if m != nil {
		return m.SeqStart
	}
	return 0
}

func (m *UpdateCombinedUpdate) GetSeqEnd() int32 {
	if m != nil {
		return m.SeqEnd
	}
	return 0
}

func (m *UpdateCombinedUpdate) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *UpdateCombinedUpdate) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *UpdateCombinedUpdate) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *UpdateCombinedUpdate) GetUpdates() []*UpdateContainer {
	if m != nil {
		return m.Updates
	}
	return nil
}

func (m *UpdateCombinedUpdate) GetMessages() []*HistoryMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

// Get main sequence state
type RequestGetState struct {
	Optimizations        []UpdateOptimization `protobuf:"varint,1,rep,packed,name=optimizations,enum=dialog.UpdateOptimization" json:"optimizations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RequestGetState) Reset()         { *m = RequestGetState{} }
func (m *RequestGetState) String() string { return proto.CompactTextString(m) }
func (*RequestGetState) ProtoMessage()    {}
func (*RequestGetState) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{7}
}
func (m *RequestGetState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGetState.Unmarshal(m, b)
}
func (m *RequestGetState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGetState.Marshal(b, m, deterministic)
}
func (dst *RequestGetState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGetState.Merge(dst, src)
}
func (m *RequestGetState) XXX_Size() int {
	return xxx_messageInfo_RequestGetState.Size(m)
}
func (m *RequestGetState) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGetState.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGetState proto.InternalMessageInfo

func (m *RequestGetState) GetOptimizations() []UpdateOptimization {
	if m != nil {
		return m.Optimizations
	}
	return nil
}

// Getting difference of sequence
type RequestGetDifference struct {
	Seq                  int32                `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	State                []byte               `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Optimizations        []UpdateOptimization `protobuf:"varint,3,rep,packed,name=optimizations,enum=dialog.UpdateOptimization" json:"optimizations,omitempty"`
	ConfigHash           *wrappers.Int64Value `protobuf:"bytes,4,opt,name=config_hash,json=configHash" json:"config_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RequestGetDifference) Reset()         { *m = RequestGetDifference{} }
func (m *RequestGetDifference) String() string { return proto.CompactTextString(m) }
func (*RequestGetDifference) ProtoMessage()    {}
func (*RequestGetDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{8}
}
func (m *RequestGetDifference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGetDifference.Unmarshal(m, b)
}
func (m *RequestGetDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGetDifference.Marshal(b, m, deterministic)
}
func (dst *RequestGetDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGetDifference.Merge(dst, src)
}
func (m *RequestGetDifference) XXX_Size() int {
	return xxx_messageInfo_RequestGetDifference.Size(m)
}
func (m *RequestGetDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGetDifference.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGetDifference proto.InternalMessageInfo

func (m *RequestGetDifference) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *RequestGetDifference) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *RequestGetDifference) GetOptimizations() []UpdateOptimization {
	if m != nil {
		return m.Optimizations
	}
	return nil
}

func (m *RequestGetDifference) GetConfigHash() *wrappers.Int64Value {
	if m != nil {
		return m.ConfigHash
	}
	return nil
}

type ResponseGetDifference struct {
	Seq                  int32                `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	State                []byte               `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Users                []*User              `protobuf:"bytes,3,rep,name=users" json:"users,omitempty"`
	Groups               []*Group             `protobuf:"bytes,6,rep,name=groups" json:"groups,omitempty"`
	Updates              []*UpdateContainer   `protobuf:"bytes,4,rep,name=updates" json:"updates,omitempty"`
	Messages             []*HistoryMessage    `protobuf:"bytes,7,rep,name=messages" json:"messages,omitempty"`
	NeedMore             bool                 `protobuf:"varint,5,opt,name=need_more,json=needMore" json:"need_more,omitempty"`
	UsersRefs            []*UserOutPeer       `protobuf:"bytes,8,rep,name=users_refs,json=usersRefs" json:"users_refs,omitempty"`
	GroupsRefs           []*GroupOutPeer      `protobuf:"bytes,9,rep,name=groups_refs,json=groupsRefs" json:"groups_refs,omitempty"`
	Config               *Config              `protobuf:"bytes,10,opt,name=config" json:"config,omitempty"`
	ConfigHash           *wrappers.Int64Value `protobuf:"bytes,11,opt,name=config_hash,json=configHash" json:"config_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ResponseGetDifference) Reset()         { *m = ResponseGetDifference{} }
func (m *ResponseGetDifference) String() string { return proto.CompactTextString(m) }
func (*ResponseGetDifference) ProtoMessage()    {}
func (*ResponseGetDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{9}
}
func (m *ResponseGetDifference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseGetDifference.Unmarshal(m, b)
}
func (m *ResponseGetDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseGetDifference.Marshal(b, m, deterministic)
}
func (dst *ResponseGetDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseGetDifference.Merge(dst, src)
}
func (m *ResponseGetDifference) XXX_Size() int {
	return xxx_messageInfo_ResponseGetDifference.Size(m)
}
func (m *ResponseGetDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseGetDifference.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseGetDifference proto.InternalMessageInfo

func (m *ResponseGetDifference) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *ResponseGetDifference) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ResponseGetDifference) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ResponseGetDifference) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *ResponseGetDifference) GetUpdates() []*UpdateContainer {
	if m != nil {
		return m.Updates
	}
	return nil
}

func (m *ResponseGetDifference) GetMessages() []*HistoryMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *ResponseGetDifference) GetNeedMore() bool {
	if m != nil {
		return m.NeedMore
	}
	return false
}

func (m *ResponseGetDifference) GetUsersRefs() []*UserOutPeer {
	if m != nil {
		return m.UsersRefs
	}
	return nil
}

func (m *ResponseGetDifference) GetGroupsRefs() []*GroupOutPeer {
	if m != nil {
		return m.GroupsRefs
	}
	return nil
}

func (m *ResponseGetDifference) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *ResponseGetDifference) GetConfigHash() *wrappers.Int64Value {
	if m != nil {
		return m.ConfigHash
	}
	return nil
}

// Getting difference of dialogs
type RequestGetDialogsDifference struct {
	Clock                int64    `protobuf:"varint,1,opt,name=clock" json:"clock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestGetDialogsDifference) Reset()         { *m = RequestGetDialogsDifference{} }
func (m *RequestGetDialogsDifference) String() string { return proto.CompactTextString(m) }
func (*RequestGetDialogsDifference) ProtoMessage()    {}
func (*RequestGetDialogsDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{10}
}
func (m *RequestGetDialogsDifference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGetDialogsDifference.Unmarshal(m, b)
}
func (m *RequestGetDialogsDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGetDialogsDifference.Marshal(b, m, deterministic)
}
func (dst *RequestGetDialogsDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGetDialogsDifference.Merge(dst, src)
}
func (m *RequestGetDialogsDifference) XXX_Size() int {
	return xxx_messageInfo_RequestGetDialogsDifference.Size(m)
}
func (m *RequestGetDialogsDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGetDialogsDifference.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGetDialogsDifference proto.InternalMessageInfo

func (m *RequestGetDialogsDifference) GetClock() int64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

type ResponseGetDialogsDifference struct {
	Dialogs              []*Dialog       `protobuf:"bytes,1,rep,name=dialogs" json:"dialogs,omitempty"`
	GroupPeers           []*GroupOutPeer `protobuf:"bytes,2,rep,name=group_peers,json=groupPeers" json:"group_peers,omitempty"`
	UserPeers            []*UserOutPeer  `protobuf:"bytes,3,rep,name=user_peers,json=userPeers" json:"user_peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ResponseGetDialogsDifference) Reset()         { *m = ResponseGetDialogsDifference{} }
func (m *ResponseGetDialogsDifference) String() string { return proto.CompactTextString(m) }
func (*ResponseGetDialogsDifference) ProtoMessage()    {}
func (*ResponseGetDialogsDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{11}
}
func (m *ResponseGetDialogsDifference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseGetDialogsDifference.Unmarshal(m, b)
}
func (m *ResponseGetDialogsDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseGetDialogsDifference.Marshal(b, m, deterministic)
}
func (dst *ResponseGetDialogsDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseGetDialogsDifference.Merge(dst, src)
}
func (m *ResponseGetDialogsDifference) XXX_Size() int {
	return xxx_messageInfo_ResponseGetDialogsDifference.Size(m)
}
func (m *ResponseGetDialogsDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseGetDialogsDifference.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseGetDialogsDifference proto.InternalMessageInfo

func (m *ResponseGetDialogsDifference) GetDialogs() []*Dialog {
	if m != nil {
		return m.Dialogs
	}
	return nil
}

func (m *ResponseGetDialogsDifference) GetGroupPeers() []*GroupOutPeer {
	if m != nil {
		return m.GroupPeers
	}
	return nil
}

func (m *ResponseGetDialogsDifference) GetUserPeers() []*UserOutPeer {
	if m != nil {
		return m.UserPeers
	}
	return nil
}

// Represents subset of group members
// groupPeer group out peer
// memberIds group member ids
type GroupMembersSubset struct {
	GroupPeer            *GroupOutPeer `protobuf:"bytes,1,opt,name=group_peer,json=groupPeer" json:"group_peer,omitempty"`
	MemberIds            []int32       `protobuf:"varint,2,rep,packed,name=member_ids,json=memberIds" json:"member_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GroupMembersSubset) Reset()         { *m = GroupMembersSubset{} }
func (m *GroupMembersSubset) String() string { return proto.CompactTextString(m) }
func (*GroupMembersSubset) ProtoMessage()    {}
func (*GroupMembersSubset) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{12}
}
func (m *GroupMembersSubset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupMembersSubset.Unmarshal(m, b)
}
func (m *GroupMembersSubset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupMembersSubset.Marshal(b, m, deterministic)
}
func (dst *GroupMembersSubset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupMembersSubset.Merge(dst, src)
}
func (m *GroupMembersSubset) XXX_Size() int {
	return xxx_messageInfo_GroupMembersSubset.Size(m)
}
func (m *GroupMembersSubset) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupMembersSubset.DiscardUnknown(m)
}

var xxx_messageInfo_GroupMembersSubset proto.InternalMessageInfo

func (m *GroupMembersSubset) GetGroupPeer() *GroupOutPeer {
	if m != nil {
		return m.GroupPeer
	}
	return nil
}

func (m *GroupMembersSubset) GetMemberIds() []int32 {
	if m != nil {
		return m.MemberIds
	}
	return nil
}

// Loading referenced entities
type RequestGetReferencedEntitites struct {
	Users                []*UserOutPeer        `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	Mids                 []*UUIDValue          `protobuf:"bytes,3,rep,name=mids" json:"mids,omitempty"`
	GroupMembers         []*GroupMembersSubset `protobuf:"bytes,4,rep,name=group_members,json=groupMembers" json:"group_members,omitempty"`
	Groups               []*GroupOutPeer       `protobuf:"bytes,5,rep,name=groups" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RequestGetReferencedEntitites) Reset()         { *m = RequestGetReferencedEntitites{} }
func (m *RequestGetReferencedEntitites) String() string { return proto.CompactTextString(m) }
func (*RequestGetReferencedEntitites) ProtoMessage()    {}
func (*RequestGetReferencedEntitites) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{13}
}
func (m *RequestGetReferencedEntitites) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGetReferencedEntitites.Unmarshal(m, b)
}
func (m *RequestGetReferencedEntitites) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGetReferencedEntitites.Marshal(b, m, deterministic)
}
func (dst *RequestGetReferencedEntitites) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGetReferencedEntitites.Merge(dst, src)
}
func (m *RequestGetReferencedEntitites) XXX_Size() int {
	return xxx_messageInfo_RequestGetReferencedEntitites.Size(m)
}
func (m *RequestGetReferencedEntitites) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGetReferencedEntitites.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGetReferencedEntitites proto.InternalMessageInfo

func (m *RequestGetReferencedEntitites) GetUsers() []*UserOutPeer {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *RequestGetReferencedEntitites) GetMids() []*UUIDValue {
	if m != nil {
		return m.Mids
	}
	return nil
}

func (m *RequestGetReferencedEntitites) GetGroupMembers() []*GroupMembersSubset {
	if m != nil {
		return m.GroupMembers
	}
	return nil
}

func (m *RequestGetReferencedEntitites) GetGroups() []*GroupOutPeer {
	if m != nil {
		return m.Groups
	}
	return nil
}

type ResponseGetReferencedEntitites struct {
	Users                []*User           `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	Groups               []*Group          `protobuf:"bytes,2,rep,name=groups" json:"groups,omitempty"`
	Messages             []*HistoryMessage `protobuf:"bytes,3,rep,name=messages" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResponseGetReferencedEntitites) Reset()         { *m = ResponseGetReferencedEntitites{} }
func (m *ResponseGetReferencedEntitites) String() string { return proto.CompactTextString(m) }
func (*ResponseGetReferencedEntitites) ProtoMessage()    {}
func (*ResponseGetReferencedEntitites) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{14}
}
func (m *ResponseGetReferencedEntitites) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseGetReferencedEntitites.Unmarshal(m, b)
}
func (m *ResponseGetReferencedEntitites) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseGetReferencedEntitites.Marshal(b, m, deterministic)
}
func (dst *ResponseGetReferencedEntitites) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseGetReferencedEntitites.Merge(dst, src)
}
func (m *ResponseGetReferencedEntitites) XXX_Size() int {
	return xxx_messageInfo_ResponseGetReferencedEntitites.Size(m)
}
func (m *ResponseGetReferencedEntitites) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseGetReferencedEntitites.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseGetReferencedEntitites proto.InternalMessageInfo

func (m *ResponseGetReferencedEntitites) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ResponseGetReferencedEntitites) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *ResponseGetReferencedEntitites) GetMessages() []*HistoryMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

// Custom Raw Update
type UpdateRawUpdate struct {
	Type                 *wrappers.StringValue `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Bytes                []byte                `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateRawUpdate) Reset()         { *m = UpdateRawUpdate{} }
func (m *UpdateRawUpdate) String() string { return proto.CompactTextString(m) }
func (*UpdateRawUpdate) ProtoMessage()    {}
func (*UpdateRawUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{15}
}
func (m *UpdateRawUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRawUpdate.Unmarshal(m, b)
}
func (m *UpdateRawUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRawUpdate.Marshal(b, m, deterministic)
}
func (dst *UpdateRawUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRawUpdate.Merge(dst, src)
}
func (m *UpdateRawUpdate) XXX_Size() int {
	return xxx_messageInfo_UpdateRawUpdate.Size(m)
}
func (m *UpdateRawUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRawUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRawUpdate proto.InternalMessageInfo

func (m *UpdateRawUpdate) GetType() *wrappers.StringValue {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *UpdateRawUpdate) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

// Empty update
type UpdateEmptyUpdate struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateEmptyUpdate) Reset()         { *m = UpdateEmptyUpdate{} }
func (m *UpdateEmptyUpdate) String() string { return proto.CompactTextString(m) }
func (*UpdateEmptyUpdate) ProtoMessage()    {}
func (*UpdateEmptyUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{16}
}
func (m *UpdateEmptyUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEmptyUpdate.Unmarshal(m, b)
}
func (m *UpdateEmptyUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEmptyUpdate.Marshal(b, m, deterministic)
}
func (dst *UpdateEmptyUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEmptyUpdate.Merge(dst, src)
}
func (m *UpdateEmptyUpdate) XXX_Size() int {
	return xxx_messageInfo_UpdateEmptyUpdate.Size(m)
}
func (m *UpdateEmptyUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEmptyUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEmptyUpdate proto.InternalMessageInfo

// Subscribing for users online
type RequestSubscribeToOnline struct {
	Users                []*UserOutPeer `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RequestSubscribeToOnline) Reset()         { *m = RequestSubscribeToOnline{} }
func (m *RequestSubscribeToOnline) String() string { return proto.CompactTextString(m) }
func (*RequestSubscribeToOnline) ProtoMessage()    {}
func (*RequestSubscribeToOnline) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{17}
}
func (m *RequestSubscribeToOnline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestSubscribeToOnline.Unmarshal(m, b)
}
func (m *RequestSubscribeToOnline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestSubscribeToOnline.Marshal(b, m, deterministic)
}
func (dst *RequestSubscribeToOnline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestSubscribeToOnline.Merge(dst, src)
}
func (m *RequestSubscribeToOnline) XXX_Size() int {
	return xxx_messageInfo_RequestSubscribeToOnline.Size(m)
}
func (m *RequestSubscribeToOnline) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestSubscribeToOnline.DiscardUnknown(m)
}

var xxx_messageInfo_RequestSubscribeToOnline proto.InternalMessageInfo

func (m *RequestSubscribeToOnline) GetUsers() []*UserOutPeer {
	if m != nil {
		return m.Users
	}
	return nil
}

// Removing subscription for users online
type RequestSubscribeFromOnline struct {
	Users                []*UserOutPeer `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RequestSubscribeFromOnline) Reset()         { *m = RequestSubscribeFromOnline{} }
func (m *RequestSubscribeFromOnline) String() string { return proto.CompactTextString(m) }
func (*RequestSubscribeFromOnline) ProtoMessage()    {}
func (*RequestSubscribeFromOnline) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{18}
}
func (m *RequestSubscribeFromOnline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestSubscribeFromOnline.Unmarshal(m, b)
}
func (m *RequestSubscribeFromOnline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestSubscribeFromOnline.Marshal(b, m, deterministic)
}
func (dst *RequestSubscribeFromOnline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestSubscribeFromOnline.Merge(dst, src)
}
func (m *RequestSubscribeFromOnline) XXX_Size() int {
	return xxx_messageInfo_RequestSubscribeFromOnline.Size(m)
}
func (m *RequestSubscribeFromOnline) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestSubscribeFromOnline.DiscardUnknown(m)
}

var xxx_messageInfo_RequestSubscribeFromOnline proto.InternalMessageInfo

func (m *RequestSubscribeFromOnline) GetUsers() []*UserOutPeer {
	if m != nil {
		return m.Users
	}
	return nil
}

// Subscribing for groups online
type RequestSubscribeToGroupOnline struct {
	Groups               []*GroupOutPeer `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RequestSubscribeToGroupOnline) Reset()         { *m = RequestSubscribeToGroupOnline{} }
func (m *RequestSubscribeToGroupOnline) String() string { return proto.CompactTextString(m) }
func (*RequestSubscribeToGroupOnline) ProtoMessage()    {}
func (*RequestSubscribeToGroupOnline) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{19}
}
func (m *RequestSubscribeToGroupOnline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestSubscribeToGroupOnline.Unmarshal(m, b)
}
func (m *RequestSubscribeToGroupOnline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestSubscribeToGroupOnline.Marshal(b, m, deterministic)
}
func (dst *RequestSubscribeToGroupOnline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestSubscribeToGroupOnline.Merge(dst, src)
}
func (m *RequestSubscribeToGroupOnline) XXX_Size() int {
	return xxx_messageInfo_RequestSubscribeToGroupOnline.Size(m)
}
func (m *RequestSubscribeToGroupOnline) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestSubscribeToGroupOnline.DiscardUnknown(m)
}

var xxx_messageInfo_RequestSubscribeToGroupOnline proto.InternalMessageInfo

func (m *RequestSubscribeToGroupOnline) GetGroups() []*GroupOutPeer {
	if m != nil {
		return m.Groups
	}
	return nil
}

// Removing subscription for groups online
type RequestSubscribeFromGroupOnline struct {
	Groups               []*GroupOutPeer `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RequestSubscribeFromGroupOnline) Reset()         { *m = RequestSubscribeFromGroupOnline{} }
func (m *RequestSubscribeFromGroupOnline) String() string { return proto.CompactTextString(m) }
func (*RequestSubscribeFromGroupOnline) ProtoMessage()    {}
func (*RequestSubscribeFromGroupOnline) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{20}
}
func (m *RequestSubscribeFromGroupOnline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestSubscribeFromGroupOnline.Unmarshal(m, b)
}
func (m *RequestSubscribeFromGroupOnline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestSubscribeFromGroupOnline.Marshal(b, m, deterministic)
}
func (dst *RequestSubscribeFromGroupOnline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestSubscribeFromGroupOnline.Merge(dst, src)
}
func (m *RequestSubscribeFromGroupOnline) XXX_Size() int {
	return xxx_messageInfo_RequestSubscribeFromGroupOnline.Size(m)
}
func (m *RequestSubscribeFromGroupOnline) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestSubscribeFromGroupOnline.DiscardUnknown(m)
}

var xxx_messageInfo_RequestSubscribeFromGroupOnline proto.InternalMessageInfo

func (m *RequestSubscribeFromGroupOnline) GetGroups() []*GroupOutPeer {
	if m != nil {
		return m.Groups
	}
	return nil
}

type SeqUpdateBox struct {
	Seq                  int32                `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	State                []byte               `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Update               *wrappers.BytesValue `protobuf:"bytes,3,opt,name=update" json:"update,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SeqUpdateBox) Reset()         { *m = SeqUpdateBox{} }
func (m *SeqUpdateBox) String() string { return proto.CompactTextString(m) }
func (*SeqUpdateBox) ProtoMessage()    {}
func (*SeqUpdateBox) Descriptor() ([]byte, []int) {
	return fileDescriptor_sequence_and_updates_d37ffbd7904da90f, []int{21}
}
func (m *SeqUpdateBox) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeqUpdateBox.Unmarshal(m, b)
}
func (m *SeqUpdateBox) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeqUpdateBox.Marshal(b, m, deterministic)
}
func (dst *SeqUpdateBox) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeqUpdateBox.Merge(dst, src)
}
func (m *SeqUpdateBox) XXX_Size() int {
	return xxx_messageInfo_SeqUpdateBox.Size(m)
}
func (m *SeqUpdateBox) XXX_DiscardUnknown() {
	xxx_messageInfo_SeqUpdateBox.DiscardUnknown(m)
}

var xxx_messageInfo_SeqUpdateBox proto.InternalMessageInfo

func (m *SeqUpdateBox) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *SeqUpdateBox) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *SeqUpdateBox) GetUpdate() *wrappers.BytesValue {
	if m != nil {
		return m.Update
	}
	return nil
}

func init() {
	proto.RegisterType((*UpdateSeqUpdate)(nil), "dialog.UpdateSeqUpdate")
	proto.RegisterType((*UpdateFatSeqUpdate)(nil), "dialog.UpdateFatSeqUpdate")
	proto.RegisterType((*UpdateWeakUpdate)(nil), "dialog.UpdateWeakUpdate")
	proto.RegisterType((*UpdateWeakFatUpdate)(nil), "dialog.UpdateWeakFatUpdate")
	proto.RegisterType((*UpdateSeqUpdateTooLong)(nil), "dialog.UpdateSeqUpdateTooLong")
	proto.RegisterType((*UpdateContainer)(nil), "dialog.UpdateContainer")
	proto.RegisterType((*UpdateCombinedUpdate)(nil), "dialog.UpdateCombinedUpdate")
	proto.RegisterType((*RequestGetState)(nil), "dialog.RequestGetState")
	proto.RegisterType((*RequestGetDifference)(nil), "dialog.RequestGetDifference")
	proto.RegisterType((*ResponseGetDifference)(nil), "dialog.ResponseGetDifference")
	proto.RegisterType((*RequestGetDialogsDifference)(nil), "dialog.RequestGetDialogsDifference")
	proto.RegisterType((*ResponseGetDialogsDifference)(nil), "dialog.ResponseGetDialogsDifference")
	proto.RegisterType((*GroupMembersSubset)(nil), "dialog.GroupMembersSubset")
	proto.RegisterType((*RequestGetReferencedEntitites)(nil), "dialog.RequestGetReferencedEntitites")
	proto.RegisterType((*ResponseGetReferencedEntitites)(nil), "dialog.ResponseGetReferencedEntitites")
	proto.RegisterType((*UpdateRawUpdate)(nil), "dialog.UpdateRawUpdate")
	proto.RegisterType((*UpdateEmptyUpdate)(nil), "dialog.UpdateEmptyUpdate")
	proto.RegisterType((*RequestSubscribeToOnline)(nil), "dialog.RequestSubscribeToOnline")
	proto.RegisterType((*RequestSubscribeFromOnline)(nil), "dialog.RequestSubscribeFromOnline")
	proto.RegisterType((*RequestSubscribeToGroupOnline)(nil), "dialog.RequestSubscribeToGroupOnline")
	proto.RegisterType((*RequestSubscribeFromGroupOnline)(nil), "dialog.RequestSubscribeFromGroupOnline")
	proto.RegisterType((*SeqUpdateBox)(nil), "dialog.SeqUpdateBox")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SequenceAndUpdatesClient is the client API for SequenceAndUpdates service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SequenceAndUpdatesClient interface {
	GetState(ctx context.Context, in *RequestGetState, opts ...grpc.CallOption) (*ResponseSeq, error)
	GetDifference(ctx context.Context, in *RequestGetDifference, opts ...grpc.CallOption) (*ResponseGetDifference, error)
	GetDialogsDifference(ctx context.Context, in *RequestGetDialogsDifference, opts ...grpc.CallOption) (*ResponseGetDialogsDifference, error)
	GetReferencedEntitites(ctx context.Context, in *RequestGetReferencedEntitites, opts ...grpc.CallOption) (*ResponseGetReferencedEntitites, error)
	SubscribeToOnline(ctx context.Context, in *RequestSubscribeToOnline, opts ...grpc.CallOption) (*ResponseVoid, error)
	SubscribeFromOnline(ctx context.Context, in *RequestSubscribeFromOnline, opts ...grpc.CallOption) (*ResponseVoid, error)
	SubscribeToGroupOnline(ctx context.Context, in *RequestSubscribeToGroupOnline, opts ...grpc.CallOption) (*ResponseVoid, error)
	SubscribeFromGroupOnline(ctx context.Context, in *RequestSubscribeFromGroupOnline, opts ...grpc.CallOption) (*ResponseVoid, error)
	SeqUpdates(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SequenceAndUpdates_SeqUpdatesClient, error)
}

type sequenceAndUpdatesClient struct {
	cc *grpc.ClientConn
}

func NewSequenceAndUpdatesClient(cc *grpc.ClientConn) SequenceAndUpdatesClient {
	return &sequenceAndUpdatesClient{cc}
}

func (c *sequenceAndUpdatesClient) GetState(ctx context.Context, in *RequestGetState, opts ...grpc.CallOption) (*ResponseSeq, error) {
	out := new(ResponseSeq)
	err := c.cc.Invoke(ctx, "/dialog.SequenceAndUpdates/GetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sequenceAndUpdatesClient) GetDifference(ctx context.Context, in *RequestGetDifference, opts ...grpc.CallOption) (*ResponseGetDifference, error) {
	out := new(ResponseGetDifference)
	err := c.cc.Invoke(ctx, "/dialog.SequenceAndUpdates/GetDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sequenceAndUpdatesClient) GetDialogsDifference(ctx context.Context, in *RequestGetDialogsDifference, opts ...grpc.CallOption) (*ResponseGetDialogsDifference, error) {
	out := new(ResponseGetDialogsDifference)
	err := c.cc.Invoke(ctx, "/dialog.SequenceAndUpdates/GetDialogsDifference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sequenceAndUpdatesClient) GetReferencedEntitites(ctx context.Context, in *RequestGetReferencedEntitites, opts ...grpc.CallOption) (*ResponseGetReferencedEntitites, error) {
	out := new(ResponseGetReferencedEntitites)
	err := c.cc.Invoke(ctx, "/dialog.SequenceAndUpdates/GetReferencedEntitites", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sequenceAndUpdatesClient) SubscribeToOnline(ctx context.Context, in *RequestSubscribeToOnline, opts ...grpc.CallOption) (*ResponseVoid, error) {
	out := new(ResponseVoid)
	err := c.cc.Invoke(ctx, "/dialog.SequenceAndUpdates/SubscribeToOnline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sequenceAndUpdatesClient) SubscribeFromOnline(ctx context.Context, in *RequestSubscribeFromOnline, opts ...grpc.CallOption) (*ResponseVoid, error) {
	out := new(ResponseVoid)
	err := c.cc.Invoke(ctx, "/dialog.SequenceAndUpdates/SubscribeFromOnline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sequenceAndUpdatesClient) SubscribeToGroupOnline(ctx context.Context, in *RequestSubscribeToGroupOnline, opts ...grpc.CallOption) (*ResponseVoid, error) {
	out := new(ResponseVoid)
	err := c.cc.Invoke(ctx, "/dialog.SequenceAndUpdates/SubscribeToGroupOnline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sequenceAndUpdatesClient) SubscribeFromGroupOnline(ctx context.Context, in *RequestSubscribeFromGroupOnline, opts ...grpc.CallOption) (*ResponseVoid, error) {
	out := new(ResponseVoid)
	err := c.cc.Invoke(ctx, "/dialog.SequenceAndUpdates/SubscribeFromGroupOnline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sequenceAndUpdatesClient) SeqUpdates(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SequenceAndUpdates_SeqUpdatesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SequenceAndUpdates_serviceDesc.Streams[0], "/dialog.SequenceAndUpdates/SeqUpdates", opts...)
	if err != nil {
		return nil, err
	}
	x := &sequenceAndUpdatesSeqUpdatesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SequenceAndUpdates_SeqUpdatesClient interface {
	Recv() (*SeqUpdateBox, error)
	grpc.ClientStream
}

type sequenceAndUpdatesSeqUpdatesClient struct {
	grpc.ClientStream
}

func (x *sequenceAndUpdatesSeqUpdatesClient) Recv() (*SeqUpdateBox, error) {
	m := new(SeqUpdateBox)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SequenceAndUpdatesServer is the server API for SequenceAndUpdates service.
type SequenceAndUpdatesServer interface {
	GetState(context.Context, *RequestGetState) (*ResponseSeq, error)
	GetDifference(context.Context, *RequestGetDifference) (*ResponseGetDifference, error)
	GetDialogsDifference(context.Context, *RequestGetDialogsDifference) (*ResponseGetDialogsDifference, error)
	GetReferencedEntitites(context.Context, *RequestGetReferencedEntitites) (*ResponseGetReferencedEntitites, error)
	SubscribeToOnline(context.Context, *RequestSubscribeToOnline) (*ResponseVoid, error)
	SubscribeFromOnline(context.Context, *RequestSubscribeFromOnline) (*ResponseVoid, error)
	SubscribeToGroupOnline(context.Context, *RequestSubscribeToGroupOnline) (*ResponseVoid, error)
	SubscribeFromGroupOnline(context.Context, *RequestSubscribeFromGroupOnline) (*ResponseVoid, error)
	SeqUpdates(*empty.Empty, SequenceAndUpdates_SeqUpdatesServer) error
}

func RegisterSequenceAndUpdatesServer(s *grpc.Server, srv SequenceAndUpdatesServer) {
	s.RegisterService(&_SequenceAndUpdates_serviceDesc, srv)
}

func _SequenceAndUpdates_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetState)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SequenceAndUpdatesServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.SequenceAndUpdates/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SequenceAndUpdatesServer).GetState(ctx, req.(*RequestGetState))
	}
	return interceptor(ctx, in, info, handler)
}

func _SequenceAndUpdates_GetDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetDifference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SequenceAndUpdatesServer).GetDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.SequenceAndUpdates/GetDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SequenceAndUpdatesServer).GetDifference(ctx, req.(*RequestGetDifference))
	}
	return interceptor(ctx, in, info, handler)
}

func _SequenceAndUpdates_GetDialogsDifference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetDialogsDifference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SequenceAndUpdatesServer).GetDialogsDifference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.SequenceAndUpdates/GetDialogsDifference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SequenceAndUpdatesServer).GetDialogsDifference(ctx, req.(*RequestGetDialogsDifference))
	}
	return interceptor(ctx, in, info, handler)
}

func _SequenceAndUpdates_GetReferencedEntitites_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetReferencedEntitites)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SequenceAndUpdatesServer).GetReferencedEntitites(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.SequenceAndUpdates/GetReferencedEntitites",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SequenceAndUpdatesServer).GetReferencedEntitites(ctx, req.(*RequestGetReferencedEntitites))
	}
	return interceptor(ctx, in, info, handler)
}

func _SequenceAndUpdates_SubscribeToOnline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSubscribeToOnline)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SequenceAndUpdatesServer).SubscribeToOnline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.SequenceAndUpdates/SubscribeToOnline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SequenceAndUpdatesServer).SubscribeToOnline(ctx, req.(*RequestSubscribeToOnline))
	}
	return interceptor(ctx, in, info, handler)
}

func _SequenceAndUpdates_SubscribeFromOnline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSubscribeFromOnline)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SequenceAndUpdatesServer).SubscribeFromOnline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.SequenceAndUpdates/SubscribeFromOnline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SequenceAndUpdatesServer).SubscribeFromOnline(ctx, req.(*RequestSubscribeFromOnline))
	}
	return interceptor(ctx, in, info, handler)
}

func _SequenceAndUpdates_SubscribeToGroupOnline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSubscribeToGroupOnline)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SequenceAndUpdatesServer).SubscribeToGroupOnline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.SequenceAndUpdates/SubscribeToGroupOnline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SequenceAndUpdatesServer).SubscribeToGroupOnline(ctx, req.(*RequestSubscribeToGroupOnline))
	}
	return interceptor(ctx, in, info, handler)
}

func _SequenceAndUpdates_SubscribeFromGroupOnline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSubscribeFromGroupOnline)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SequenceAndUpdatesServer).SubscribeFromGroupOnline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.SequenceAndUpdates/SubscribeFromGroupOnline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SequenceAndUpdatesServer).SubscribeFromGroupOnline(ctx, req.(*RequestSubscribeFromGroupOnline))
	}
	return interceptor(ctx, in, info, handler)
}

func _SequenceAndUpdates_SeqUpdates_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SequenceAndUpdatesServer).SeqUpdates(m, &sequenceAndUpdatesSeqUpdatesServer{stream})
}

type SequenceAndUpdates_SeqUpdatesServer interface {
	Send(*SeqUpdateBox) error
	grpc.ServerStream
}

type sequenceAndUpdatesSeqUpdatesServer struct {
	grpc.ServerStream
}

func (x *sequenceAndUpdatesSeqUpdatesServer) Send(m *SeqUpdateBox) error {
	return x.ServerStream.SendMsg(m)
}

var _SequenceAndUpdates_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dialog.SequenceAndUpdates",
	HandlerType: (*SequenceAndUpdatesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetState",
			Handler:    _SequenceAndUpdates_GetState_Handler,
		},
		{
			MethodName: "GetDifference",
			Handler:    _SequenceAndUpdates_GetDifference_Handler,
		},
		{
			MethodName: "GetDialogsDifference",
			Handler:    _SequenceAndUpdates_GetDialogsDifference_Handler,
		},
		{
			MethodName: "GetReferencedEntitites",
			Handler:    _SequenceAndUpdates_GetReferencedEntitites_Handler,
		},
		{
			MethodName: "SubscribeToOnline",
			Handler:    _SequenceAndUpdates_SubscribeToOnline_Handler,
		},
		{
			MethodName: "SubscribeFromOnline",
			Handler:    _SequenceAndUpdates_SubscribeFromOnline_Handler,
		},
		{
			MethodName: "SubscribeToGroupOnline",
			Handler:    _SequenceAndUpdates_SubscribeToGroupOnline_Handler,
		},
		{
			MethodName: "SubscribeFromGroupOnline",
			Handler:    _SequenceAndUpdates_SubscribeFromGroupOnline_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SeqUpdates",
			Handler:       _SequenceAndUpdates_SeqUpdates_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "sequence_and_updates.proto",
}

func init() {
	proto.RegisterFile("sequence_and_updates.proto", fileDescriptor_sequence_and_updates_d37ffbd7904da90f)
}

var fileDescriptor_sequence_and_updates_d37ffbd7904da90f = []byte{
	// 1501 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xdd, 0x6e, 0x1b, 0xc5,
	0x17, 0xd7, 0xda, 0xb1, 0x13, 0x9f, 0x24, 0x6d, 0xb3, 0x71, 0xd3, 0xad, 0x93, 0xb6, 0xf9, 0x4f,
	0x9b, 0xfc, 0xd3, 0x02, 0x76, 0xe3, 0xa6, 0x50, 0x52, 0x50, 0x68, 0xfa, 0x2d, 0x28, 0x41, 0x76,
	0x5b, 0x2e, 0xcd, 0xda, 0x3b, 0x76, 0x46, 0xb5, 0x77, 0xd6, 0x3b, 0xeb, 0x96, 0x54, 0x5c, 0xa0,
	0x4a, 0x20, 0x01, 0x37, 0x48, 0x70, 0x81, 0xb8, 0xe8, 0x25, 0x0f, 0xc0, 0x25, 0x17, 0x3c, 0x04,
	0xbc, 0x41, 0xc5, 0x15, 0xcf, 0x00, 0x08, 0xcd, 0xcc, 0xae, 0xf7, 0xd3, 0x5e, 0x97, 0x4f, 0x71,
	0x15, 0x7b, 0xce, 0x39, 0x73, 0x7e, 0xe7, 0x77, 0xbe, 0xc6, 0x81, 0x12, 0xc3, 0xfd, 0x01, 0x36,
	0x5b, 0xb8, 0xa1, 0x9b, 0x46, 0x63, 0x60, 0x19, 0xba, 0x83, 0x59, 0xd9, 0xb2, 0xa9, 0x43, 0xd5,
	0xbc, 0x41, 0xf4, 0x2e, 0xed, 0x94, 0x4e, 0x76, 0x28, 0xed, 0x74, 0x71, 0x45, 0x9c, 0x36, 0x07,
	0xed, 0xca, 0x23, 0x5b, 0xb7, 0x2c, 0x6c, 0xbb, 0x7a, 0xa5, 0xe5, 0xa8, 0x1c, 0xf7, 0x2c, 0xe7,
	0xc0, 0x15, 0xae, 0xb8, 0x42, 0xdd, 0x22, 0x15, 0xdd, 0x34, 0xa9, 0xa3, 0x3b, 0x84, 0x9a, 0x9e,
	0xe9, 0x82, 0x81, 0xdb, 0xc4, 0x24, 0xc1, 0xa3, 0xc5, 0x1e, 0x61, 0x2d, 0xdc, 0xed, 0xea, 0x26,
	0xa6, 0x03, 0xef, 0x70, 0xae, 0x63, 0xd3, 0x81, 0xe5, 0x7d, 0x9b, 0xb5, 0xb0, 0xef, 0xfd, 0x70,
	0x0f, 0x33, 0xa6, 0x77, 0x88, 0xd9, 0xf1, 0xa4, 0x03, 0xe6, 0x4b, 0x8f, 0xb2, 0x96, 0xde, 0xd5,
	0xad, 0x66, 0xc5, 0xfd, 0x2b, 0x8f, 0xd1, 0xb7, 0x0a, 0x1c, 0xbe, 0x27, 0x82, 0xad, 0xe3, 0xbe,
	0xfc, 0xa0, 0x9e, 0x82, 0x2c, 0xc3, 0x7d, 0x4d, 0x59, 0x55, 0x36, 0x72, 0xbb, 0xf3, 0x9f, 0xfe,
	0x7c, 0xbe, 0x00, 0xd3, 0x0f, 0x09, 0x23, 0xcd, 0x2e, 0xae, 0x71, 0x89, 0x7a, 0x1a, 0x72, 0xcc,
	0xd1, 0x1d, 0xac, 0x65, 0x56, 0x95, 0x8d, 0x39, 0x4f, 0xa5, 0x45, 0x7b, 0x96, 0xde, 0x72, 0x6a,
	0x52, 0xa6, 0x56, 0x61, 0x5e, 0xb2, 0xd8, 0xd8, 0xc7, 0xba, 0x81, 0x6d, 0x2d, 0x9b, 0x74, 0xdf,
	0x9c, 0xd4, 0xb9, 0x25, 0x54, 0xd4, 0x35, 0xc8, 0xcb, 0xef, 0xda, 0x54, 0xd2, 0xcd, 0xae, 0x10,
	0x3d, 0xcd, 0x80, 0x2a, 0xb1, 0xde, 0xd0, 0x9d, 0xff, 0x0e, 0x6e, 0x75, 0x13, 0x72, 0x22, 0x25,
	0x5a, 0x6e, 0x35, 0xbb, 0x31, 0x5b, 0x9d, 0x2b, 0xcb, 0xba, 0x2a, 0xdf, 0x63, 0xd8, 0x8e, 0xa1,
	0x11, 0x9a, 0xea, 0x16, 0xe4, 0x65, 0xc6, 0xb5, 0xbc, 0xb0, 0x99, 0xf7, 0x6c, 0x6e, 0xf2, 0xd3,
	0x98, 0x23, 0xa9, 0x8b, 0x3e, 0x57, 0xe0, 0x88, 0x24, 0xe5, 0x5d, 0xac, 0x3f, 0x70, 0xe9, 0xf9,
	0x1f, 0x4c, 0x09, 0x88, 0x9c, 0x9f, 0x6c, 0x34, 0x1e, 0x21, 0x8a, 0xc7, 0x9e, 0x79, 0x9e, 0xd8,
	0xb3, 0xe3, 0x72, 0xf6, 0x8b, 0x02, 0x8b, 0x3e, 0xa4, 0x1b, 0xba, 0xf3, 0xaf, 0xa0, 0xf2, 0x94,
	0x63, 0x19, 0x99, 0x1a, 0x9d, 0x11, 0xcf, 0x26, 0x96, 0x91, 0xdc, 0x98, 0x8c, 0x0c, 0x1d, 0xb9,
	0x19, 0xd1, 0x60, 0x29, 0xd2, 0x66, 0x77, 0x29, 0x7d, 0x8b, 0x9a, 0x1d, 0xd4, 0xf5, 0x1a, 0xf0,
	0x2a, 0x35, 0x1d, 0x9d, 0x98, 0xd8, 0x8e, 0x07, 0xac, 0x3c, 0x4f, 0xc0, 0x99, 0x71, 0x69, 0xf8,
	0x35, 0x03, 0x45, 0xcf, 0x5d, 0xaf, 0x49, 0x4c, 0x6c, 0xb8, 0x79, 0x38, 0x07, 0x05, 0x86, 0xfb,
	0x0d, 0xe6, 0xe8, 0xb6, 0x93, 0xec, 0x6f, 0x86, 0xe1, 0x7e, 0x9d, 0x8b, 0xd5, 0x75, 0x98, 0xe6,
	0xba, 0xd8, 0x34, 0x92, 0x53, 0x91, 0x67, 0xb8, 0x7f, 0xdd, 0x34, 0xfc, 0x7e, 0x4b, 0xcc, 0x81,
	0xdb, 0x6f, 0x93, 0xa4, 0x60, 0x64, 0x53, 0xe4, 0x26, 0x6f, 0x0a, 0xf5, 0x0d, 0x98, 0x76, 0xc7,
	0xba, 0xdb, 0x4b, 0xc7, 0x86, 0xae, 0xc2, 0xfc, 0x47, 0x81, 0x7a, 0x66, 0xea, 0x15, 0x98, 0x91,
	0x33, 0x16, 0x33, 0x6d, 0x5a, 0x5c, 0xb1, 0xe4, 0x5d, 0x71, 0x8b, 0x30, 0x87, 0xda, 0x07, 0x77,
	0xa4, 0x38, 0x46, 0x9d, 0x67, 0x86, 0x3e, 0x54, 0xe0, 0x70, 0x8d, 0x6f, 0x1a, 0xe6, 0xdc, 0xc4,
	0x4e, 0x5d, 0x30, 0xb0, 0x07, 0xf3, 0xd4, 0x72, 0x48, 0x8f, 0x3c, 0x96, 0x2b, 0x41, 0x53, 0x56,
	0xb3, 0x1b, 0x87, 0xaa, 0xa5, 0x30, 0xbc, 0xbd, 0x80, 0x4a, 0xf4, 0xfe, 0xb0, 0xfd, 0xf6, 0xca,
	0xb3, 0x9d, 0xe3, 0x70, 0x8c, 0xf4, 0xca, 0x46, 0xb7, 0x53, 0xee, 0xd8, 0x56, 0xab, 0x7c, 0xd3,
	0xb6, 0x5a, 0xae, 0x5b, 0xf4, 0x55, 0x06, 0x8a, 0x3e, 0x84, 0x6b, 0xa4, 0xdd, 0xc6, 0x36, 0x5f,
	0x7c, 0x7f, 0xd1, 0xfc, 0x8c, 0x45, 0x93, 0xfd, 0x73, 0xd1, 0xa8, 0x6f, 0xc2, 0x6c, 0x8b, 0x9a,
	0x6d, 0xd2, 0x69, 0xec, 0xeb, 0x6c, 0x5f, 0x4c, 0xd8, 0xd9, 0xea, 0x72, 0x59, 0xae, 0xd3, 0xb2,
	0xb7, 0x6b, 0xcb, 0xb7, 0x4d, 0xe7, 0xe5, 0xad, 0xfb, 0x7a, 0x77, 0x10, 0x63, 0x1f, 0xa4, 0xf9,
	0x2d, 0x9d, 0xed, 0xa7, 0x50, 0xf3, 0x5b, 0x16, 0x8e, 0xd6, 0x30, 0xb3, 0xa8, 0xc9, 0x70, 0x98,
	0x9b, 0x23, 0x01, 0x6e, 0x24, 0x19, 0xc5, 0x10, 0x19, 0x5e, 0xf4, 0xc8, 0xab, 0xe6, 0x6c, 0xbc,
	0x9a, 0xbd, 0xf2, 0x5d, 0x1b, 0x3b, 0xd3, 0x87, 0xf5, 0xba, 0xe9, 0xd7, 0xeb, 0xd4, 0xd8, 0x7a,
	0xf5, 0x0b, 0xb4, 0x3a, 0x69, 0x81, 0xfa, 0x15, 0xa9, 0x2e, 0x43, 0xc1, 0xc4, 0xd8, 0x68, 0xf4,
	0xa8, 0x8d, 0xb5, 0xdc, 0xaa, 0xb2, 0x31, 0x53, 0x9b, 0xe1, 0x07, 0x77, 0xa8, 0xcd, 0x47, 0x2f,
	0x08, 0xcc, 0x0d, 0x1b, 0xb7, 0x99, 0x36, 0x23, 0xae, 0x5c, 0x0c, 0xc6, 0xb4, 0x37, 0x70, 0xde,
	0xc1, 0xd8, 0xae, 0x15, 0x84, 0x5a, 0x0d, 0xb7, 0x99, 0x7a, 0x11, 0x66, 0x65, 0x04, 0xd2, 0xa8,
	0x20, 0x8c, 0x8a, 0xa1, 0x18, 0x3d, 0x2b, 0x90, 0x8a, 0xc2, 0x6c, 0x1d, 0xf2, 0x32, 0x4f, 0x1a,
	0x88, 0x0c, 0x1f, 0xf2, 0x2c, 0xae, 0x8a, 0xd3, 0x9a, 0x2b, 0x55, 0x5f, 0x0b, 0x97, 0xc3, 0x6c,
	0x6a, 0x39, 0x84, 0xf2, 0x7f, 0xe2, 0xd9, 0x4e, 0x09, 0xb4, 0x78, 0xfe, 0x65, 0xce, 0xd1, 0x7b,
	0xb0, 0x1c, 0x6c, 0x0d, 0xee, 0x9f, 0x05, 0xaa, 0xe0, 0x34, 0xe4, 0x5a, 0x5d, 0xda, 0x7a, 0x90,
	0xbc, 0xad, 0xa4, 0x2c, 0xa5, 0xc4, 0x7e, 0x50, 0x60, 0x25, 0x54, 0x62, 0x51, 0x1f, 0x1b, 0x30,
	0x2d, 0x03, 0x97, 0x73, 0x20, 0x40, 0x84, 0xd4, 0xad, 0x79, 0xe2, 0x21, 0xd1, 0x0d, 0xf1, 0x0a,
	0xd4, 0x32, 0xa9, 0x44, 0xf3, 0x8f, 0xcc, 0xcb, 0xa9, 0x6b, 0x95, 0x4d, 0xc9, 0xa9, 0xb0, 0x49,
	0xa3, 0xed, 0x63, 0x05, 0x54, 0xe1, 0xef, 0x0e, 0xee, 0x35, 0xb1, 0xcd, 0xea, 0x83, 0x26, 0xc3,
	0x8e, 0xba, 0x0b, 0xe0, 0x03, 0x14, 0x9c, 0x8d, 0xc0, 0x17, 0x65, 0xb2, 0x30, 0x84, 0xab, 0xbe,
	0x08, 0xd0, 0x13, 0x97, 0x36, 0x88, 0x21, 0x63, 0x8c, 0xcd, 0xa6, 0x82, 0x54, 0xb8, 0x6d, 0x30,
	0xf4, 0x5d, 0x06, 0x4e, 0xf8, 0x09, 0xac, 0x61, 0x97, 0x54, 0xe3, 0xba, 0xe9, 0x10, 0x87, 0xf0,
	0x16, 0xb9, 0xe4, 0x35, 0xa8, 0x32, 0x32, 0xf0, 0x91, 0x5b, 0x67, 0xaa, 0xc7, 0x31, 0x48, 0xc6,
	0x16, 0x86, 0x86, 0xf7, 0x6e, 0x5f, 0x4b, 0x1c, 0x3b, 0x42, 0x5b, 0x7d, 0x1b, 0xe6, 0x25, 0x07,
	0x12, 0xa4, 0xd7, 0xcb, 0xa5, 0x10, 0x0d, 0x21, 0xda, 0x62, 0x7b, 0xbe, 0x13, 0x50, 0x51, 0x2f,
	0x47, 0x76, 0xdf, 0x44, 0x7c, 0xba, 0x26, 0x29, 0xa5, 0xf9, 0xbd, 0x02, 0x27, 0x03, 0xa5, 0x99,
	0xc4, 0x1e, 0x0a, 0xb3, 0x97, 0x32, 0xde, 0x32, 0xe3, 0xc6, 0x5b, 0x70, 0x56, 0x65, 0x27, 0x9b,
	0x55, 0x69, 0x65, 0xf8, 0xc8, 0x7b, 0x4a, 0xd5, 0xf4, 0x47, 0xee, 0xb3, 0x66, 0x07, 0xa6, 0x9c,
	0x03, 0x0b, 0xbb, 0xc5, 0xb7, 0x12, 0x1b, 0x13, 0x75, 0xc7, 0x26, 0x66, 0x27, 0x39, 0x7f, 0xdc,
	0x90, 0xb7, 0x7c, 0xf3, 0x80, 0xcf, 0xe0, 0x4c, 0xe2, 0x1b, 0x46, 0xc8, 0xd0, 0x22, 0x2c, 0x48,
	0x7f, 0xd7, 0xf9, 0x0f, 0x3e, 0xf9, 0x11, 0xd9, 0xa0, 0xb9, 0xcc, 0xf2, 0xbc, 0xb6, 0x6c, 0xd2,
	0xc4, 0x77, 0xe9, 0x9e, 0xd9, 0x25, 0x26, 0xfe, 0xe3, 0x55, 0x98, 0x92, 0x42, 0x07, 0x4a, 0x51,
	0x9f, 0x37, 0x6c, 0xda, 0xfb, 0x9b, 0xbd, 0x3e, 0x1e, 0x36, 0x5d, 0x20, 0x52, 0x59, 0x8f, 0xd2,
	0xb1, 0x5f, 0xb4, 0x4a, 0x7a, 0xd1, 0x46, 0xde, 0x6d, 0x29, 0xbe, 0x3f, 0x80, 0x53, 0x49, 0x11,
	0xff, 0x43, 0xde, 0x1f, 0xc0, 0xdc, 0xf0, 0x41, 0xbf, 0x4b, 0xdf, 0x9f, 0xf8, 0x99, 0x70, 0x21,
	0xf4, 0xf3, 0x24, 0x69, 0x7f, 0xed, 0xf2, 0xc2, 0x92, 0xfb, 0xcb, 0x55, 0xad, 0x7e, 0x02, 0xa0,
	0xd6, 0xdd, 0xff, 0x52, 0x5c, 0x31, 0xdd, 0x87, 0x3b, 0x53, 0x09, 0xcc, 0x0c, 0x9f, 0x92, 0xc3,
	0x27, 0x42, 0xe4, 0x8d, 0x59, 0x5a, 0xf4, 0x05, 0xb2, 0x59, 0xea, 0xb8, 0x8f, 0x2a, 0x4f, 0x7e,
	0xfc, 0xe9, 0x8b, 0xcc, 0x59, 0x74, 0xa6, 0xf2, 0x70, 0xb3, 0xc2, 0x63, 0xab, 0xc4, 0xaf, 0xaf,
	0x78, 0x57, 0x6c, 0x2b, 0xe7, 0xd4, 0x27, 0x0a, 0xcc, 0x87, 0xdf, 0x45, 0x2b, 0x71, 0x87, 0xbe,
	0xb4, 0x74, 0x22, 0xea, 0x35, 0x24, 0x46, 0x5b, 0xc2, 0x7f, 0x19, 0x9d, 0x4d, 0xf1, 0xef, 0x9b,
	0x70, 0x10, 0x4f, 0x15, 0x28, 0x26, 0x6f, 0xe7, 0x24, 0x2c, 0x11, 0xa5, 0xd2, 0x99, 0x44, 0x48,
	0x11, 0x2d, 0x74, 0x59, 0x20, 0xbb, 0x88, 0xce, 0xa7, 0x22, 0x8b, 0x58, 0x72, 0x80, 0xdf, 0x28,
	0xb0, 0x34, 0x62, 0x7e, 0xae, 0xc5, 0x21, 0x26, 0xa8, 0x95, 0xd6, 0x13, 0x40, 0x26, 0xe8, 0xa1,
	0xd7, 0x05, 0xcc, 0x57, 0x50, 0x35, 0x05, 0x66, 0x82, 0x2d, 0x07, 0xfa, 0x91, 0x02, 0x0b, 0xf1,
	0xd9, 0xb4, 0x1a, 0xc1, 0x18, 0xd3, 0x28, 0x15, 0xa3, 0xf0, 0xee, 0x53, 0x62, 0xa0, 0x4b, 0x02,
	0x4c, 0x15, 0xbd, 0x34, 0x0e, 0x4c, 0xec, 0x32, 0x8e, 0xe3, 0x33, 0x05, 0x16, 0x93, 0xe6, 0x15,
	0x1a, 0x85, 0xc4, 0xd7, 0x19, 0x81, 0x65, 0x5b, 0x60, 0xd9, 0x42, 0x95, 0x89, 0xb0, 0xf8, 0xd7,
	0x71, 0x34, 0x5f, 0x2a, 0xb0, 0x34, 0x62, 0x8e, 0xad, 0x8d, 0xa6, 0x26, 0xa0, 0x36, 0x02, 0xd3,
	0x44, 0xc9, 0x4a, 0xbe, 0x91, 0xc3, 0xfa, 0x5a, 0x01, 0x6d, 0xe4, 0x88, 0xfb, 0xff, 0x38, 0xa6,
	0xd2, 0xa1, 0xed, 0x08, 0x68, 0xaf, 0xa2, 0xad, 0x89, 0xe9, 0x8a, 0x80, 0xa3, 0x00, 0xc3, 0x39,
	0xc8, 0xd4, 0xa5, 0xd8, 0x34, 0x13, 0x7b, 0xd1, 0x77, 0x1e, 0x9c, 0x99, 0x68, 0x53, 0x38, 0x7f,
	0x01, 0xad, 0x8f, 0x75, 0x3e, 0xbc, 0x7d, 0x5b, 0x39, 0x77, 0x5e, 0xd9, 0x3d, 0xfe, 0x6c, 0x67,
	0x09, 0x8a, 0xc1, 0xb1, 0xcc, 0xb0, 0xfd, 0x90, 0xb4, 0x30, 0x6b, 0xe6, 0x85, 0xd7, 0x0b, 0xbf,
	0x07, 0x00, 0x00, 0xff, 0xff, 0x35, 0xc9, 0x7e, 0x04, 0xd2, 0x15, 0x00, 0x00,
}
