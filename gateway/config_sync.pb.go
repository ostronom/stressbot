// Code generated by protoc-gen-go.
// source: config_sync.proto
// DO NOT EDIT!

package dialog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/gogo/protobuf/types"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Syncing Parameter
type Parameter struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Parameter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Parameter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Getting Parameters
type RequestGetParameters struct {
}

func (m *RequestGetParameters) Reset()                    { *m = RequestGetParameters{} }
func (m *RequestGetParameters) String() string            { return proto.CompactTextString(m) }
func (*RequestGetParameters) ProtoMessage()               {}
func (*RequestGetParameters) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type ResponseGetParameters struct {
	Parameters []*Parameter `protobuf:"bytes,1,rep,name=parameters" json:"parameters,omitempty"`
}

func (m *ResponseGetParameters) Reset()                    { *m = ResponseGetParameters{} }
func (m *ResponseGetParameters) String() string            { return proto.CompactTextString(m) }
func (*ResponseGetParameters) ProtoMessage()               {}
func (*ResponseGetParameters) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ResponseGetParameters) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

// Change parameter value
type RequestEditParameter struct {
	Key   string                       `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *RequestEditParameter) Reset()                    { *m = RequestEditParameter{} }
func (m *RequestEditParameter) String() string            { return proto.CompactTextString(m) }
func (*RequestEditParameter) ProtoMessage()               {}
func (*RequestEditParameter) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *RequestEditParameter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RequestEditParameter) GetValue() *google_protobuf.StringValue {
	if m != nil {
		return m.Value
	}
	return nil
}

// Update about parameter change
type UpdateParameterChanged struct {
	Key   string                       `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *UpdateParameterChanged) Reset()                    { *m = UpdateParameterChanged{} }
func (m *UpdateParameterChanged) String() string            { return proto.CompactTextString(m) }
func (*UpdateParameterChanged) ProtoMessage()               {}
func (*UpdateParameterChanged) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *UpdateParameterChanged) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *UpdateParameterChanged) GetValue() *google_protobuf.StringValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*Parameter)(nil), "dialog.Parameter")
	proto.RegisterType((*RequestGetParameters)(nil), "dialog.RequestGetParameters")
	proto.RegisterType((*ResponseGetParameters)(nil), "dialog.ResponseGetParameters")
	proto.RegisterType((*RequestEditParameter)(nil), "dialog.RequestEditParameter")
	proto.RegisterType((*UpdateParameterChanged)(nil), "dialog.UpdateParameterChanged")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ConfigSync service

type ConfigSyncClient interface {
	GetParameters(ctx context.Context, in *RequestGetParameters, opts ...grpc.CallOption) (*ResponseGetParameters, error)
	EditParameter(ctx context.Context, in *RequestEditParameter, opts ...grpc.CallOption) (*ResponseSeq, error)
}

type configSyncClient struct {
	cc *grpc.ClientConn
}

func NewConfigSyncClient(cc *grpc.ClientConn) ConfigSyncClient {
	return &configSyncClient{cc}
}

func (c *configSyncClient) GetParameters(ctx context.Context, in *RequestGetParameters, opts ...grpc.CallOption) (*ResponseGetParameters, error) {
	out := new(ResponseGetParameters)
	err := grpc.Invoke(ctx, "/dialog.ConfigSync/GetParameters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configSyncClient) EditParameter(ctx context.Context, in *RequestEditParameter, opts ...grpc.CallOption) (*ResponseSeq, error) {
	out := new(ResponseSeq)
	err := grpc.Invoke(ctx, "/dialog.ConfigSync/EditParameter", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ConfigSync service

type ConfigSyncServer interface {
	GetParameters(context.Context, *RequestGetParameters) (*ResponseGetParameters, error)
	EditParameter(context.Context, *RequestEditParameter) (*ResponseSeq, error)
}

func RegisterConfigSyncServer(s *grpc.Server, srv ConfigSyncServer) {
	s.RegisterService(&_ConfigSync_serviceDesc, srv)
}

func _ConfigSync_GetParameters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetParameters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigSyncServer).GetParameters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.ConfigSync/GetParameters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigSyncServer).GetParameters(ctx, req.(*RequestGetParameters))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigSync_EditParameter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestEditParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigSyncServer).EditParameter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.ConfigSync/EditParameter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigSyncServer).EditParameter(ctx, req.(*RequestEditParameter))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigSync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dialog.ConfigSync",
	HandlerType: (*ConfigSyncServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetParameters",
			Handler:    _ConfigSync_GetParameters_Handler,
		},
		{
			MethodName: "EditParameter",
			Handler:    _ConfigSync_EditParameter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config_sync.proto",
}

func init() { proto.RegisterFile("config_sync.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x52, 0xbf, 0x6f, 0x13, 0x31,
	0x18, 0xd5, 0xb5, 0x22, 0x90, 0xaf, 0x64, 0xc8, 0xf5, 0x07, 0xe9, 0x29, 0x85, 0x72, 0x03, 0xaa,
	0x2a, 0xe4, 0x6b, 0x03, 0x53, 0x96, 0xa0, 0x56, 0xa8, 0x6b, 0x75, 0x11, 0xac, 0xc8, 0x39, 0x7f,
	0x71, 0x2d, 0x1c, 0xdb, 0xb5, 0x9d, 0xa0, 0xc0, 0xc6, 0xd8, 0x95, 0x81, 0x3f, 0x8c, 0xff, 0x20,
	0x62, 0xea, 0x9f, 0xc0, 0x84, 0x92, 0x4b, 0xae, 0xb9, 0x10, 0x81, 0x58, 0x3a, 0x9d, 0xee, 0xbd,
	0x67, 0xbf, 0xef, 0x7b, 0xcf, 0x50, 0xcf, 0xb4, 0xea, 0x0b, 0xfe, 0xc1, 0x8d, 0x55, 0x46, 0x8c,
	0xd5, 0x5e, 0x87, 0x15, 0x26, 0xa8, 0xd4, 0x3c, 0x7a, 0xca, 0xb5, 0xe6, 0x12, 0x93, 0x19, 0xda,
	0x1b, 0xf6, 0x93, 0x4f, 0x96, 0x1a, 0x83, 0xd6, 0xe5, 0xba, 0xa8, 0x39, 0xe7, 0xa9, 0x11, 0x09,
	0x55, 0x4a, 0x7b, 0xea, 0x85, 0x56, 0x0b, 0xb6, 0xce, 0xb0, 0x2f, 0x94, 0x58, 0x86, 0xb6, 0x07,
	0xc2, 0x65, 0x28, 0x25, 0x55, 0xa8, 0x87, 0x0b, 0x70, 0xd7, 0x65, 0x54, 0x52, 0xd3, 0x4b, 0xe6,
	0xdf, 0x1c, 0x8e, 0x2f, 0xa1, 0x7a, 0x49, 0x2d, 0x1d, 0xa0, 0x47, 0x1b, 0x3e, 0x83, 0xcd, 0x8f,
	0x38, 0x6e, 0x04, 0x87, 0xc1, 0x51, 0xf5, 0xac, 0x76, 0x73, 0x7b, 0x52, 0x85, 0x87, 0x23, 0xe1,
	0x44, 0x4f, 0x62, 0x3a, 0x65, 0xc2, 0x18, 0x1e, 0x8c, 0xa8, 0x1c, 0x62, 0x63, 0x63, 0x26, 0x79,
	0x7c, 0x73, 0x7b, 0xf2, 0x08, 0x2a, 0x57, 0x82, 0x31, 0x54, 0x69, 0x4e, 0xc5, 0xaf, 0x61, 0x27,
	0xc5, 0xeb, 0x21, 0x3a, 0x7f, 0x81, 0xbe, 0xb8, 0xdb, 0xb5, 0x9b, 0x93, 0xce, 0x3e, 0x3c, 0x11,
	0x03, 0xc2, 0x24, 0x27, 0xdc, 0x9a, 0x8c, 0x5c, 0x58, 0x93, 0xcd, 0xa5, 0xb1, 0x80, 0xdd, 0x14,
	0x9d, 0xd1, 0xca, 0x61, 0xe9, 0x58, 0x78, 0x0a, 0x60, 0x8a, 0xbf, 0x46, 0x70, 0xb8, 0x79, 0xb4,
	0xd5, 0xaa, 0x93, 0x3c, 0x3a, 0x52, 0xe8, 0xd2, 0x25, 0x51, 0xfb, 0x60, 0xd2, 0x89, 0xa0, 0xf1,
	0xa7, 0x53, 0x7e, 0x7d, 0xfc, 0x3d, 0x28, 0x26, 0x7c, 0xcb, 0x84, 0xff, 0x8f, 0xf5, 0xdf, 0x2c,
	0xaf, 0xbf, 0xd5, 0x6a, 0x92, 0xbc, 0x19, 0xb2, 0x68, 0x8e, 0x74, 0xbd, 0x15, 0x8a, 0xbf, 0x9f,
	0x6a, 0xd6, 0x86, 0xf3, 0x8f, 0x10, 0xbe, 0xc0, 0xde, 0x3b, 0xc3, 0xa8, 0xc7, 0x62, 0xa6, 0xf3,
	0x2b, 0xaa, 0x38, 0xb2, 0x7b, 0x18, 0xad, 0xf5, 0x2b, 0x00, 0x38, 0x9f, 0x3d, 0xd2, 0xee, 0x58,
	0x65, 0xe1, 0x67, 0xa8, 0x95, 0x8b, 0x68, 0x2e, 0x42, 0x5f, 0xd7, 0x6e, 0x74, 0x70, 0xc7, 0xae,
	0x69, 0x31, 0x7e, 0xf9, 0xf5, 0xc7, 0xcf, 0x6f, 0x1b, 0x2f, 0xe2, 0xe7, 0xc9, 0xe8, 0x34, 0x99,
	0xee, 0x9d, 0xdc, 0x59, 0x25, 0xe5, 0x77, 0x12, 0x1c, 0x87, 0x06, 0x6a, 0xe5, 0x66, 0x56, 0xbd,
	0x4b, 0x6c, 0xb4, 0xbd, 0xea, 0xdd, 0xc5, 0xeb, 0xbf, 0x3b, 0x96, 0xce, 0xb7, 0x83, 0xe3, 0xb3,
	0xfd, 0x49, 0x67, 0x0f, 0x76, 0x96, 0x7b, 0x71, 0x68, 0x47, 0x22, 0x43, 0xd7, 0xab, 0xcc, 0x22,
	0x7c, 0xf5, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xde, 0x76, 0x8f, 0x64, 0xc2, 0x03, 0x00, 0x00,
}
