// Code generated by protoc-gen-go.
// source: spaces.proto
// DO NOT EDIT!

package dialog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import google_protobuf3 "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/gogo/protobuf/types"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Space struct {
	Id        *UUIDValue                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CreatedAt *google_protobuf3.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	// Types that are valid to be assigned to SpaceType:
	//	*Space_General_
	//	*Space_Public_
	//	*Space_Private_
	SpaceType isSpace_SpaceType            `protobuf_oneof:"space_type"`
	Title     string                       `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	About     *google_protobuf.StringValue `protobuf:"bytes,7,opt,name=about" json:"about,omitempty"`
	Avatar    *Avatar                      `protobuf:"bytes,8,opt,name=avatar" json:"avatar,omitempty"`
	DeletedAt *google_protobuf3.Timestamp  `protobuf:"bytes,9,opt,name=deleted_at,json=deletedAt" json:"deleted_at,omitempty"`
	Clock     *DataClock                   `protobuf:"bytes,10,opt,name=clock" json:"clock,omitempty"`
}

func (m *Space) Reset()                    { *m = Space{} }
func (m *Space) String() string            { return proto.CompactTextString(m) }
func (*Space) ProtoMessage()               {}
func (*Space) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{0} }

type isSpace_SpaceType interface {
	isSpace_SpaceType()
}

type Space_General_ struct {
	General *Space_General `protobuf:"bytes,3,opt,name=general,oneof"`
}
type Space_Public_ struct {
	Public *Space_Public `protobuf:"bytes,4,opt,name=public,oneof"`
}
type Space_Private_ struct {
	Private *Space_Private `protobuf:"bytes,5,opt,name=private,oneof"`
}

func (*Space_General_) isSpace_SpaceType() {}
func (*Space_Public_) isSpace_SpaceType()  {}
func (*Space_Private_) isSpace_SpaceType() {}

func (m *Space) GetSpaceType() isSpace_SpaceType {
	if m != nil {
		return m.SpaceType
	}
	return nil
}

func (m *Space) GetId() *UUIDValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Space) GetCreatedAt() *google_protobuf3.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Space) GetGeneral() *Space_General {
	if x, ok := m.GetSpaceType().(*Space_General_); ok {
		return x.General
	}
	return nil
}

func (m *Space) GetPublic() *Space_Public {
	if x, ok := m.GetSpaceType().(*Space_Public_); ok {
		return x.Public
	}
	return nil
}

func (m *Space) GetPrivate() *Space_Private {
	if x, ok := m.GetSpaceType().(*Space_Private_); ok {
		return x.Private
	}
	return nil
}

func (m *Space) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Space) GetAbout() *google_protobuf.StringValue {
	if m != nil {
		return m.About
	}
	return nil
}

func (m *Space) GetAvatar() *Avatar {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *Space) GetDeletedAt() *google_protobuf3.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

func (m *Space) GetClock() *DataClock {
	if m != nil {
		return m.Clock
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Space) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Space_OneofMarshaler, _Space_OneofUnmarshaler, _Space_OneofSizer, []interface{}{
		(*Space_General_)(nil),
		(*Space_Public_)(nil),
		(*Space_Private_)(nil),
	}
}

func _Space_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Space)
	// space_type
	switch x := m.SpaceType.(type) {
	case *Space_General_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.General); err != nil {
			return err
		}
	case *Space_Public_:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Public); err != nil {
			return err
		}
	case *Space_Private_:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Private); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Space.SpaceType has unexpected type %T", x)
	}
	return nil
}

func _Space_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Space)
	switch tag {
	case 3: // space_type.general
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Space_General)
		err := b.DecodeMessage(msg)
		m.SpaceType = &Space_General_{msg}
		return true, err
	case 4: // space_type.public
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Space_Public)
		err := b.DecodeMessage(msg)
		m.SpaceType = &Space_Public_{msg}
		return true, err
	case 5: // space_type.private
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Space_Private)
		err := b.DecodeMessage(msg)
		m.SpaceType = &Space_Private_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Space_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Space)
	// space_type
	switch x := m.SpaceType.(type) {
	case *Space_General_:
		s := proto.Size(x.General)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Space_Public_:
		s := proto.Size(x.Public)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Space_Private_:
		s := proto.Size(x.Private)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Space_General struct {
}

func (m *Space_General) Reset()                    { *m = Space_General{} }
func (m *Space_General) String() string            { return proto.CompactTextString(m) }
func (*Space_General) ProtoMessage()               {}
func (*Space_General) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{0, 0} }

type Space_Public struct {
	OwnerUserId int32  `protobuf:"varint,1,opt,name=owner_user_id,json=ownerUserId" json:"owner_user_id,omitempty"`
	Shortname   string `protobuf:"bytes,2,opt,name=shortname" json:"shortname,omitempty"`
}

func (m *Space_Public) Reset()                    { *m = Space_Public{} }
func (m *Space_Public) String() string            { return proto.CompactTextString(m) }
func (*Space_Public) ProtoMessage()               {}
func (*Space_Public) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{0, 1} }

func (m *Space_Public) GetOwnerUserId() int32 {
	if m != nil {
		return m.OwnerUserId
	}
	return 0
}

func (m *Space_Public) GetShortname() string {
	if m != nil {
		return m.Shortname
	}
	return ""
}

type Space_Private struct {
	OwnerUserId int32 `protobuf:"varint,1,opt,name=owner_user_id,json=ownerUserId" json:"owner_user_id,omitempty"`
}

func (m *Space_Private) Reset()                    { *m = Space_Private{} }
func (m *Space_Private) String() string            { return proto.CompactTextString(m) }
func (*Space_Private) ProtoMessage()               {}
func (*Space_Private) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{0, 2} }

func (m *Space_Private) GetOwnerUserId() int32 {
	if m != nil {
		return m.OwnerUserId
	}
	return 0
}

type SpaceMember struct {
	SpaceId   *UUIDValue                  `protobuf:"bytes,1,opt,name=space_id,json=spaceId" json:"space_id,omitempty"`
	UserId    int32                       `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	InvitedAt *google_protobuf3.Timestamp `protobuf:"bytes,3,opt,name=invited_at,json=invitedAt" json:"invited_at,omitempty"`
	JoinedAt  *google_protobuf3.Timestamp `protobuf:"bytes,4,opt,name=joined_at,json=joinedAt" json:"joined_at,omitempty"`
	DeletedAt *google_protobuf3.Timestamp `protobuf:"bytes,5,opt,name=deleted_at,json=deletedAt" json:"deleted_at,omitempty"`
	Clock     *DataClock                  `protobuf:"bytes,6,opt,name=clock" json:"clock,omitempty"`
}

func (m *SpaceMember) Reset()                    { *m = SpaceMember{} }
func (m *SpaceMember) String() string            { return proto.CompactTextString(m) }
func (*SpaceMember) ProtoMessage()               {}
func (*SpaceMember) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{1} }

func (m *SpaceMember) GetSpaceId() *UUIDValue {
	if m != nil {
		return m.SpaceId
	}
	return nil
}

func (m *SpaceMember) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SpaceMember) GetInvitedAt() *google_protobuf3.Timestamp {
	if m != nil {
		return m.InvitedAt
	}
	return nil
}

func (m *SpaceMember) GetJoinedAt() *google_protobuf3.Timestamp {
	if m != nil {
		return m.JoinedAt
	}
	return nil
}

func (m *SpaceMember) GetDeletedAt() *google_protobuf3.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

func (m *SpaceMember) GetClock() *DataClock {
	if m != nil {
		return m.Clock
	}
	return nil
}

type UpdateSpaceModified struct {
	Space *Space `protobuf:"bytes,1,opt,name=space" json:"space,omitempty"`
}

func (m *UpdateSpaceModified) Reset()                    { *m = UpdateSpaceModified{} }
func (m *UpdateSpaceModified) String() string            { return proto.CompactTextString(m) }
func (*UpdateSpaceModified) ProtoMessage()               {}
func (*UpdateSpaceModified) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{2} }

func (m *UpdateSpaceModified) GetSpace() *Space {
	if m != nil {
		return m.Space
	}
	return nil
}

type UpdateSpaceMemberModified struct {
	Member *SpaceMember `protobuf:"bytes,1,opt,name=member" json:"member,omitempty"`
}

func (m *UpdateSpaceMemberModified) Reset()                    { *m = UpdateSpaceMemberModified{} }
func (m *UpdateSpaceMemberModified) String() string            { return proto.CompactTextString(m) }
func (*UpdateSpaceMemberModified) ProtoMessage()               {}
func (*UpdateSpaceMemberModified) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{3} }

func (m *UpdateSpaceMemberModified) GetMember() *SpaceMember {
	if m != nil {
		return m.Member
	}
	return nil
}

type RequestCreateSpace struct {
	RequestId int64                        `protobuf:"varint,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Title     string                       `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Shortname *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=shortname" json:"shortname,omitempty"`
	About     *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=about" json:"about,omitempty"`
	Avatar    *Avatar                      `protobuf:"bytes,5,opt,name=avatar" json:"avatar,omitempty"`
}

func (m *RequestCreateSpace) Reset()                    { *m = RequestCreateSpace{} }
func (m *RequestCreateSpace) String() string            { return proto.CompactTextString(m) }
func (*RequestCreateSpace) ProtoMessage()               {}
func (*RequestCreateSpace) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{4} }

func (m *RequestCreateSpace) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *RequestCreateSpace) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *RequestCreateSpace) GetShortname() *google_protobuf.StringValue {
	if m != nil {
		return m.Shortname
	}
	return nil
}

func (m *RequestCreateSpace) GetAbout() *google_protobuf.StringValue {
	if m != nil {
		return m.About
	}
	return nil
}

func (m *RequestCreateSpace) GetAvatar() *Avatar {
	if m != nil {
		return m.Avatar
	}
	return nil
}

type ResponseSpace struct {
	Space *Space `protobuf:"bytes,1,opt,name=space" json:"space,omitempty"`
}

func (m *ResponseSpace) Reset()                    { *m = ResponseSpace{} }
func (m *ResponseSpace) String() string            { return proto.CompactTextString(m) }
func (*ResponseSpace) ProtoMessage()               {}
func (*ResponseSpace) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{5} }

func (m *ResponseSpace) GetSpace() *Space {
	if m != nil {
		return m.Space
	}
	return nil
}

type ResponseSpaceMember struct {
	SpaceId *UUIDValue   `protobuf:"bytes,1,opt,name=space_id,json=spaceId" json:"space_id,omitempty"`
	Member  *SpaceMember `protobuf:"bytes,2,opt,name=member" json:"member,omitempty"`
}

func (m *ResponseSpaceMember) Reset()                    { *m = ResponseSpaceMember{} }
func (m *ResponseSpaceMember) String() string            { return proto.CompactTextString(m) }
func (*ResponseSpaceMember) ProtoMessage()               {}
func (*ResponseSpaceMember) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{6} }

func (m *ResponseSpaceMember) GetSpaceId() *UUIDValue {
	if m != nil {
		return m.SpaceId
	}
	return nil
}

func (m *ResponseSpaceMember) GetMember() *SpaceMember {
	if m != nil {
		return m.Member
	}
	return nil
}

type RequestDeleteSpace struct {
	Id    *UUIDValue `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Clock *DataClock `protobuf:"bytes,2,opt,name=clock" json:"clock,omitempty"`
}

func (m *RequestDeleteSpace) Reset()                    { *m = RequestDeleteSpace{} }
func (m *RequestDeleteSpace) String() string            { return proto.CompactTextString(m) }
func (*RequestDeleteSpace) ProtoMessage()               {}
func (*RequestDeleteSpace) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{7} }

func (m *RequestDeleteSpace) GetId() *UUIDValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RequestDeleteSpace) GetClock() *DataClock {
	if m != nil {
		return m.Clock
	}
	return nil
}

type RequestLoadSpaces struct {
}

func (m *RequestLoadSpaces) Reset()                    { *m = RequestLoadSpaces{} }
func (m *RequestLoadSpaces) String() string            { return proto.CompactTextString(m) }
func (*RequestLoadSpaces) ProtoMessage()               {}
func (*RequestLoadSpaces) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{8} }

type ResponseLoadSpaces struct {
	Space      []*Space       `protobuf:"bytes,1,rep,name=space" json:"space,omitempty"`
	OwnerPeers []*UserOutPeer `protobuf:"bytes,2,rep,name=owner_peers,json=ownerPeers" json:"owner_peers,omitempty"`
}

func (m *ResponseLoadSpaces) Reset()                    { *m = ResponseLoadSpaces{} }
func (m *ResponseLoadSpaces) String() string            { return proto.CompactTextString(m) }
func (*ResponseLoadSpaces) ProtoMessage()               {}
func (*ResponseLoadSpaces) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{9} }

func (m *ResponseLoadSpaces) GetSpace() []*Space {
	if m != nil {
		return m.Space
	}
	return nil
}

func (m *ResponseLoadSpaces) GetOwnerPeers() []*UserOutPeer {
	if m != nil {
		return m.OwnerPeers
	}
	return nil
}

type RequestStreamSpaceMembers struct {
	SpaceId *UUIDValue `protobuf:"bytes,1,opt,name=space_id,json=spaceId" json:"space_id,omitempty"`
	Clock   *DataClock `protobuf:"bytes,2,opt,name=clock" json:"clock,omitempty"`
}

func (m *RequestStreamSpaceMembers) Reset()                    { *m = RequestStreamSpaceMembers{} }
func (m *RequestStreamSpaceMembers) String() string            { return proto.CompactTextString(m) }
func (*RequestStreamSpaceMembers) ProtoMessage()               {}
func (*RequestStreamSpaceMembers) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{10} }

func (m *RequestStreamSpaceMembers) GetSpaceId() *UUIDValue {
	if m != nil {
		return m.SpaceId
	}
	return nil
}

func (m *RequestStreamSpaceMembers) GetClock() *DataClock {
	if m != nil {
		return m.Clock
	}
	return nil
}

type SpaceMemberWithPeer struct {
	Member *SpaceMember `protobuf:"bytes,1,opt,name=member" json:"member,omitempty"`
	Peer   *UserOutPeer `protobuf:"bytes,2,opt,name=peer" json:"peer,omitempty"`
}

func (m *SpaceMemberWithPeer) Reset()                    { *m = SpaceMemberWithPeer{} }
func (m *SpaceMemberWithPeer) String() string            { return proto.CompactTextString(m) }
func (*SpaceMemberWithPeer) ProtoMessage()               {}
func (*SpaceMemberWithPeer) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{11} }

func (m *SpaceMemberWithPeer) GetMember() *SpaceMember {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *SpaceMemberWithPeer) GetPeer() *UserOutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type RequestSetTitle struct {
	Id    *UUIDValue `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title string     `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Clock *DataClock `protobuf:"bytes,3,opt,name=clock" json:"clock,omitempty"`
}

func (m *RequestSetTitle) Reset()                    { *m = RequestSetTitle{} }
func (m *RequestSetTitle) String() string            { return proto.CompactTextString(m) }
func (*RequestSetTitle) ProtoMessage()               {}
func (*RequestSetTitle) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{12} }

func (m *RequestSetTitle) GetId() *UUIDValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RequestSetTitle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *RequestSetTitle) GetClock() *DataClock {
	if m != nil {
		return m.Clock
	}
	return nil
}

type RequestSetShortname struct {
	Id        *UUIDValue                   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Shortname *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=shortname" json:"shortname,omitempty"`
	Clock     *DataClock                   `protobuf:"bytes,3,opt,name=clock" json:"clock,omitempty"`
}

func (m *RequestSetShortname) Reset()                    { *m = RequestSetShortname{} }
func (m *RequestSetShortname) String() string            { return proto.CompactTextString(m) }
func (*RequestSetShortname) ProtoMessage()               {}
func (*RequestSetShortname) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{13} }

func (m *RequestSetShortname) GetId() *UUIDValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RequestSetShortname) GetShortname() *google_protobuf.StringValue {
	if m != nil {
		return m.Shortname
	}
	return nil
}

func (m *RequestSetShortname) GetClock() *DataClock {
	if m != nil {
		return m.Clock
	}
	return nil
}

type RequestSetAbout struct {
	Id    *UUIDValue                   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	About *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=about" json:"about,omitempty"`
	Clock *DataClock                   `protobuf:"bytes,3,opt,name=clock" json:"clock,omitempty"`
}

func (m *RequestSetAbout) Reset()                    { *m = RequestSetAbout{} }
func (m *RequestSetAbout) String() string            { return proto.CompactTextString(m) }
func (*RequestSetAbout) ProtoMessage()               {}
func (*RequestSetAbout) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{14} }

func (m *RequestSetAbout) GetId() *UUIDValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RequestSetAbout) GetAbout() *google_protobuf.StringValue {
	if m != nil {
		return m.About
	}
	return nil
}

func (m *RequestSetAbout) GetClock() *DataClock {
	if m != nil {
		return m.Clock
	}
	return nil
}

type RequestSetAvatar struct {
	Id           *UUIDValue    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	FileLocation *FileLocation `protobuf:"bytes,2,opt,name=file_location,json=fileLocation" json:"file_location,omitempty"`
	Clock        *DataClock    `protobuf:"bytes,3,opt,name=clock" json:"clock,omitempty"`
}

func (m *RequestSetAvatar) Reset()                    { *m = RequestSetAvatar{} }
func (m *RequestSetAvatar) String() string            { return proto.CompactTextString(m) }
func (*RequestSetAvatar) ProtoMessage()               {}
func (*RequestSetAvatar) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{15} }

func (m *RequestSetAvatar) GetId() *UUIDValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RequestSetAvatar) GetFileLocation() *FileLocation {
	if m != nil {
		return m.FileLocation
	}
	return nil
}

func (m *RequestSetAvatar) GetClock() *DataClock {
	if m != nil {
		return m.Clock
	}
	return nil
}

type RequestSpaceInvite struct {
	Id     *UUIDValue `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId int32      `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Clock  *DataClock `protobuf:"bytes,3,opt,name=clock" json:"clock,omitempty"`
}

func (m *RequestSpaceInvite) Reset()                    { *m = RequestSpaceInvite{} }
func (m *RequestSpaceInvite) String() string            { return proto.CompactTextString(m) }
func (*RequestSpaceInvite) ProtoMessage()               {}
func (*RequestSpaceInvite) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{16} }

func (m *RequestSpaceInvite) GetId() *UUIDValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RequestSpaceInvite) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RequestSpaceInvite) GetClock() *DataClock {
	if m != nil {
		return m.Clock
	}
	return nil
}

type RequestSpaceKick struct {
	Id     *UUIDValue `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId int32      `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Clock  *DataClock `protobuf:"bytes,3,opt,name=clock" json:"clock,omitempty"`
}

func (m *RequestSpaceKick) Reset()                    { *m = RequestSpaceKick{} }
func (m *RequestSpaceKick) String() string            { return proto.CompactTextString(m) }
func (*RequestSpaceKick) ProtoMessage()               {}
func (*RequestSpaceKick) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{17} }

func (m *RequestSpaceKick) GetId() *UUIDValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RequestSpaceKick) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RequestSpaceKick) GetClock() *DataClock {
	if m != nil {
		return m.Clock
	}
	return nil
}

type RequestSpaceLeave struct {
	Id     *UUIDValue `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId int32      `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Clock  *DataClock `protobuf:"bytes,3,opt,name=clock" json:"clock,omitempty"`
}

func (m *RequestSpaceLeave) Reset()                    { *m = RequestSpaceLeave{} }
func (m *RequestSpaceLeave) String() string            { return proto.CompactTextString(m) }
func (*RequestSpaceLeave) ProtoMessage()               {}
func (*RequestSpaceLeave) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{18} }

func (m *RequestSpaceLeave) GetId() *UUIDValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RequestSpaceLeave) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RequestSpaceLeave) GetClock() *DataClock {
	if m != nil {
		return m.Clock
	}
	return nil
}

type RequestGetSpaceInviteUrl struct {
	Id *UUIDValue `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *RequestGetSpaceInviteUrl) Reset()                    { *m = RequestGetSpaceInviteUrl{} }
func (m *RequestGetSpaceInviteUrl) String() string            { return proto.CompactTextString(m) }
func (*RequestGetSpaceInviteUrl) ProtoMessage()               {}
func (*RequestGetSpaceInviteUrl) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{19} }

func (m *RequestGetSpaceInviteUrl) GetId() *UUIDValue {
	if m != nil {
		return m.Id
	}
	return nil
}

type ResponseSpaceInviteUrl struct {
	InviteUrl string `protobuf:"bytes,1,opt,name=invite_url,json=inviteUrl" json:"invite_url,omitempty"`
}

func (m *ResponseSpaceInviteUrl) Reset()                    { *m = ResponseSpaceInviteUrl{} }
func (m *ResponseSpaceInviteUrl) String() string            { return proto.CompactTextString(m) }
func (*ResponseSpaceInviteUrl) ProtoMessage()               {}
func (*ResponseSpaceInviteUrl) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{20} }

func (m *ResponseSpaceInviteUrl) GetInviteUrl() string {
	if m != nil {
		return m.InviteUrl
	}
	return ""
}

type RequestRevokeSpaceInviteUrl struct {
	Id *UUIDValue `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *RequestRevokeSpaceInviteUrl) Reset()                    { *m = RequestRevokeSpaceInviteUrl{} }
func (m *RequestRevokeSpaceInviteUrl) String() string            { return proto.CompactTextString(m) }
func (*RequestRevokeSpaceInviteUrl) ProtoMessage()               {}
func (*RequestRevokeSpaceInviteUrl) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{21} }

func (m *RequestRevokeSpaceInviteUrl) GetId() *UUIDValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func init() {
	proto.RegisterType((*Space)(nil), "dialog.Space")
	proto.RegisterType((*Space_General)(nil), "dialog.Space.General")
	proto.RegisterType((*Space_Public)(nil), "dialog.Space.Public")
	proto.RegisterType((*Space_Private)(nil), "dialog.Space.Private")
	proto.RegisterType((*SpaceMember)(nil), "dialog.SpaceMember")
	proto.RegisterType((*UpdateSpaceModified)(nil), "dialog.UpdateSpaceModified")
	proto.RegisterType((*UpdateSpaceMemberModified)(nil), "dialog.UpdateSpaceMemberModified")
	proto.RegisterType((*RequestCreateSpace)(nil), "dialog.RequestCreateSpace")
	proto.RegisterType((*ResponseSpace)(nil), "dialog.ResponseSpace")
	proto.RegisterType((*ResponseSpaceMember)(nil), "dialog.ResponseSpaceMember")
	proto.RegisterType((*RequestDeleteSpace)(nil), "dialog.RequestDeleteSpace")
	proto.RegisterType((*RequestLoadSpaces)(nil), "dialog.RequestLoadSpaces")
	proto.RegisterType((*ResponseLoadSpaces)(nil), "dialog.ResponseLoadSpaces")
	proto.RegisterType((*RequestStreamSpaceMembers)(nil), "dialog.RequestStreamSpaceMembers")
	proto.RegisterType((*SpaceMemberWithPeer)(nil), "dialog.SpaceMemberWithPeer")
	proto.RegisterType((*RequestSetTitle)(nil), "dialog.RequestSetTitle")
	proto.RegisterType((*RequestSetShortname)(nil), "dialog.RequestSetShortname")
	proto.RegisterType((*RequestSetAbout)(nil), "dialog.RequestSetAbout")
	proto.RegisterType((*RequestSetAvatar)(nil), "dialog.RequestSetAvatar")
	proto.RegisterType((*RequestSpaceInvite)(nil), "dialog.RequestSpaceInvite")
	proto.RegisterType((*RequestSpaceKick)(nil), "dialog.RequestSpaceKick")
	proto.RegisterType((*RequestSpaceLeave)(nil), "dialog.RequestSpaceLeave")
	proto.RegisterType((*RequestGetSpaceInviteUrl)(nil), "dialog.RequestGetSpaceInviteUrl")
	proto.RegisterType((*ResponseSpaceInviteUrl)(nil), "dialog.ResponseSpaceInviteUrl")
	proto.RegisterType((*RequestRevokeSpaceInviteUrl)(nil), "dialog.RequestRevokeSpaceInviteUrl")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Spaces service

type SpacesClient interface {
	CreateSpace(ctx context.Context, in *RequestCreateSpace, opts ...grpc.CallOption) (*ResponseSpace, error)
	DeleteSpace(ctx context.Context, in *RequestDeleteSpace, opts ...grpc.CallOption) (*ResponseSpace, error)
	SetTitle(ctx context.Context, in *RequestSetTitle, opts ...grpc.CallOption) (*ResponseSpace, error)
	SetShortname(ctx context.Context, in *RequestSetShortname, opts ...grpc.CallOption) (*ResponseSpace, error)
	SetAbout(ctx context.Context, in *RequestSetAbout, opts ...grpc.CallOption) (*ResponseSpace, error)
	SetAvatar(ctx context.Context, in *RequestSetAvatar, opts ...grpc.CallOption) (*ResponseSpace, error)
	LoadSpaces(ctx context.Context, in *RequestLoadSpaces, opts ...grpc.CallOption) (*ResponseLoadSpaces, error)
	LoadSpaceMembers(ctx context.Context, in *RequestStreamSpaceMembers, opts ...grpc.CallOption) (Spaces_LoadSpaceMembersClient, error)
	Invite(ctx context.Context, in *RequestSpaceInvite, opts ...grpc.CallOption) (*ResponseSpaceMember, error)
	Kick(ctx context.Context, in *RequestSpaceKick, opts ...grpc.CallOption) (*ResponseSpaceMember, error)
	Leave(ctx context.Context, in *RequestSpaceLeave, opts ...grpc.CallOption) (*ResponseSpaceMember, error)
	GetSpaceInviteUrl(ctx context.Context, in *RequestGetSpaceInviteUrl, opts ...grpc.CallOption) (*ResponseSpaceInviteUrl, error)
	RevokeSpaceInviteUrl(ctx context.Context, in *RequestRevokeSpaceInviteUrl, opts ...grpc.CallOption) (*ResponseSpaceInviteUrl, error)
}

type spacesClient struct {
	cc *grpc.ClientConn
}

func NewSpacesClient(cc *grpc.ClientConn) SpacesClient {
	return &spacesClient{cc}
}

func (c *spacesClient) CreateSpace(ctx context.Context, in *RequestCreateSpace, opts ...grpc.CallOption) (*ResponseSpace, error) {
	out := new(ResponseSpace)
	err := grpc.Invoke(ctx, "/dialog.Spaces/CreateSpace", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacesClient) DeleteSpace(ctx context.Context, in *RequestDeleteSpace, opts ...grpc.CallOption) (*ResponseSpace, error) {
	out := new(ResponseSpace)
	err := grpc.Invoke(ctx, "/dialog.Spaces/DeleteSpace", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacesClient) SetTitle(ctx context.Context, in *RequestSetTitle, opts ...grpc.CallOption) (*ResponseSpace, error) {
	out := new(ResponseSpace)
	err := grpc.Invoke(ctx, "/dialog.Spaces/SetTitle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacesClient) SetShortname(ctx context.Context, in *RequestSetShortname, opts ...grpc.CallOption) (*ResponseSpace, error) {
	out := new(ResponseSpace)
	err := grpc.Invoke(ctx, "/dialog.Spaces/SetShortname", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacesClient) SetAbout(ctx context.Context, in *RequestSetAbout, opts ...grpc.CallOption) (*ResponseSpace, error) {
	out := new(ResponseSpace)
	err := grpc.Invoke(ctx, "/dialog.Spaces/SetAbout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacesClient) SetAvatar(ctx context.Context, in *RequestSetAvatar, opts ...grpc.CallOption) (*ResponseSpace, error) {
	out := new(ResponseSpace)
	err := grpc.Invoke(ctx, "/dialog.Spaces/SetAvatar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacesClient) LoadSpaces(ctx context.Context, in *RequestLoadSpaces, opts ...grpc.CallOption) (*ResponseLoadSpaces, error) {
	out := new(ResponseLoadSpaces)
	err := grpc.Invoke(ctx, "/dialog.Spaces/LoadSpaces", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacesClient) LoadSpaceMembers(ctx context.Context, in *RequestStreamSpaceMembers, opts ...grpc.CallOption) (Spaces_LoadSpaceMembersClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Spaces_serviceDesc.Streams[0], c.cc, "/dialog.Spaces/LoadSpaceMembers", opts...)
	if err != nil {
		return nil, err
	}
	x := &spacesLoadSpaceMembersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Spaces_LoadSpaceMembersClient interface {
	Recv() (*SpaceMemberWithPeer, error)
	grpc.ClientStream
}

type spacesLoadSpaceMembersClient struct {
	grpc.ClientStream
}

func (x *spacesLoadSpaceMembersClient) Recv() (*SpaceMemberWithPeer, error) {
	m := new(SpaceMemberWithPeer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *spacesClient) Invite(ctx context.Context, in *RequestSpaceInvite, opts ...grpc.CallOption) (*ResponseSpaceMember, error) {
	out := new(ResponseSpaceMember)
	err := grpc.Invoke(ctx, "/dialog.Spaces/Invite", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacesClient) Kick(ctx context.Context, in *RequestSpaceKick, opts ...grpc.CallOption) (*ResponseSpaceMember, error) {
	out := new(ResponseSpaceMember)
	err := grpc.Invoke(ctx, "/dialog.Spaces/Kick", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacesClient) Leave(ctx context.Context, in *RequestSpaceLeave, opts ...grpc.CallOption) (*ResponseSpaceMember, error) {
	out := new(ResponseSpaceMember)
	err := grpc.Invoke(ctx, "/dialog.Spaces/Leave", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacesClient) GetSpaceInviteUrl(ctx context.Context, in *RequestGetSpaceInviteUrl, opts ...grpc.CallOption) (*ResponseSpaceInviteUrl, error) {
	out := new(ResponseSpaceInviteUrl)
	err := grpc.Invoke(ctx, "/dialog.Spaces/GetSpaceInviteUrl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spacesClient) RevokeSpaceInviteUrl(ctx context.Context, in *RequestRevokeSpaceInviteUrl, opts ...grpc.CallOption) (*ResponseSpaceInviteUrl, error) {
	out := new(ResponseSpaceInviteUrl)
	err := grpc.Invoke(ctx, "/dialog.Spaces/RevokeSpaceInviteUrl", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Spaces service

type SpacesServer interface {
	CreateSpace(context.Context, *RequestCreateSpace) (*ResponseSpace, error)
	DeleteSpace(context.Context, *RequestDeleteSpace) (*ResponseSpace, error)
	SetTitle(context.Context, *RequestSetTitle) (*ResponseSpace, error)
	SetShortname(context.Context, *RequestSetShortname) (*ResponseSpace, error)
	SetAbout(context.Context, *RequestSetAbout) (*ResponseSpace, error)
	SetAvatar(context.Context, *RequestSetAvatar) (*ResponseSpace, error)
	LoadSpaces(context.Context, *RequestLoadSpaces) (*ResponseLoadSpaces, error)
	LoadSpaceMembers(*RequestStreamSpaceMembers, Spaces_LoadSpaceMembersServer) error
	Invite(context.Context, *RequestSpaceInvite) (*ResponseSpaceMember, error)
	Kick(context.Context, *RequestSpaceKick) (*ResponseSpaceMember, error)
	Leave(context.Context, *RequestSpaceLeave) (*ResponseSpaceMember, error)
	GetSpaceInviteUrl(context.Context, *RequestGetSpaceInviteUrl) (*ResponseSpaceInviteUrl, error)
	RevokeSpaceInviteUrl(context.Context, *RequestRevokeSpaceInviteUrl) (*ResponseSpaceInviteUrl, error)
}

func RegisterSpacesServer(s *grpc.Server, srv SpacesServer) {
	s.RegisterService(&_Spaces_serviceDesc, srv)
}

func _Spaces_CreateSpace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestCreateSpace)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacesServer).CreateSpace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Spaces/CreateSpace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacesServer).CreateSpace(ctx, req.(*RequestCreateSpace))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spaces_DeleteSpace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDeleteSpace)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacesServer).DeleteSpace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Spaces/DeleteSpace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacesServer).DeleteSpace(ctx, req.(*RequestDeleteSpace))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spaces_SetTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSetTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacesServer).SetTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Spaces/SetTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacesServer).SetTitle(ctx, req.(*RequestSetTitle))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spaces_SetShortname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSetShortname)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacesServer).SetShortname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Spaces/SetShortname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacesServer).SetShortname(ctx, req.(*RequestSetShortname))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spaces_SetAbout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSetAbout)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacesServer).SetAbout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Spaces/SetAbout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacesServer).SetAbout(ctx, req.(*RequestSetAbout))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spaces_SetAvatar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSetAvatar)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacesServer).SetAvatar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Spaces/SetAvatar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacesServer).SetAvatar(ctx, req.(*RequestSetAvatar))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spaces_LoadSpaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestLoadSpaces)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacesServer).LoadSpaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Spaces/LoadSpaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacesServer).LoadSpaces(ctx, req.(*RequestLoadSpaces))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spaces_LoadSpaceMembers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestStreamSpaceMembers)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SpacesServer).LoadSpaceMembers(m, &spacesLoadSpaceMembersServer{stream})
}

type Spaces_LoadSpaceMembersServer interface {
	Send(*SpaceMemberWithPeer) error
	grpc.ServerStream
}

type spacesLoadSpaceMembersServer struct {
	grpc.ServerStream
}

func (x *spacesLoadSpaceMembersServer) Send(m *SpaceMemberWithPeer) error {
	return x.ServerStream.SendMsg(m)
}

func _Spaces_Invite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSpaceInvite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacesServer).Invite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Spaces/Invite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacesServer).Invite(ctx, req.(*RequestSpaceInvite))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spaces_Kick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSpaceKick)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacesServer).Kick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Spaces/Kick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacesServer).Kick(ctx, req.(*RequestSpaceKick))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spaces_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSpaceLeave)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacesServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Spaces/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacesServer).Leave(ctx, req.(*RequestSpaceLeave))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spaces_GetSpaceInviteUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetSpaceInviteUrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacesServer).GetSpaceInviteUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Spaces/GetSpaceInviteUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacesServer).GetSpaceInviteUrl(ctx, req.(*RequestGetSpaceInviteUrl))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spaces_RevokeSpaceInviteUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRevokeSpaceInviteUrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpacesServer).RevokeSpaceInviteUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Spaces/RevokeSpaceInviteUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpacesServer).RevokeSpaceInviteUrl(ctx, req.(*RequestRevokeSpaceInviteUrl))
	}
	return interceptor(ctx, in, info, handler)
}

var _Spaces_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dialog.Spaces",
	HandlerType: (*SpacesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSpace",
			Handler:    _Spaces_CreateSpace_Handler,
		},
		{
			MethodName: "DeleteSpace",
			Handler:    _Spaces_DeleteSpace_Handler,
		},
		{
			MethodName: "SetTitle",
			Handler:    _Spaces_SetTitle_Handler,
		},
		{
			MethodName: "SetShortname",
			Handler:    _Spaces_SetShortname_Handler,
		},
		{
			MethodName: "SetAbout",
			Handler:    _Spaces_SetAbout_Handler,
		},
		{
			MethodName: "SetAvatar",
			Handler:    _Spaces_SetAvatar_Handler,
		},
		{
			MethodName: "LoadSpaces",
			Handler:    _Spaces_LoadSpaces_Handler,
		},
		{
			MethodName: "Invite",
			Handler:    _Spaces_Invite_Handler,
		},
		{
			MethodName: "Kick",
			Handler:    _Spaces_Kick_Handler,
		},
		{
			MethodName: "Leave",
			Handler:    _Spaces_Leave_Handler,
		},
		{
			MethodName: "GetSpaceInviteUrl",
			Handler:    _Spaces_GetSpaceInviteUrl_Handler,
		},
		{
			MethodName: "RevokeSpaceInviteUrl",
			Handler:    _Spaces_RevokeSpaceInviteUrl_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LoadSpaceMembers",
			Handler:       _Spaces_LoadSpaceMembers_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "spaces.proto",
}

func init() { proto.RegisterFile("spaces.proto", fileDescriptor22) }

var fileDescriptor22 = []byte{
	// 1230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xce, 0x7f, 0x9a, 0xd3, 0x16, 0xb6, 0x6e, 0x77, 0xeb, 0xb8, 0xed, 0xd2, 0xf5, 0x4a, 0xec,
	0x4a, 0x40, 0xca, 0x16, 0x24, 0xb4, 0x15, 0xa2, 0x4a, 0x5b, 0x68, 0x0b, 0x45, 0x54, 0xee, 0xa6,
	0x7b, 0x81, 0x20, 0x9a, 0xc4, 0xd3, 0xec, 0x50, 0xc7, 0x36, 0xe3, 0x49, 0x56, 0xdc, 0xf0, 0x08,
	0xfc, 0x5c, 0x00, 0x2f, 0x81, 0x84, 0xc4, 0x0d, 0x17, 0xbc, 0x4d, 0x25, 0x9e, 0x03, 0xe4, 0x99,
	0xf1, 0x4f, 0x9c, 0xa4, 0x76, 0x4b, 0x2e, 0xf6, 0x2a, 0xf1, 0x9c, 0x73, 0xbe, 0xf9, 0xe6, 0x3b,
	0x73, 0xce, 0x1c, 0x58, 0xf0, 0x5c, 0xd4, 0xc5, 0x5e, 0xc3, 0xa5, 0x0e, 0x73, 0x94, 0x8a, 0x49,
	0x90, 0xe5, 0xf4, 0xb4, 0xfb, 0x3d, 0xc7, 0xe9, 0x59, 0x78, 0x8b, 0xaf, 0x76, 0x06, 0x17, 0x5b,
	0x2f, 0x29, 0x72, 0x5d, 0x4c, 0xa5, 0x9f, 0xf6, 0x46, 0xd2, 0xce, 0x48, 0x1f, 0x7b, 0x0c, 0xf5,
	0x5d, 0xe9, 0xb0, 0x2e, 0x1d, 0x90, 0x4b, 0xb6, 0x90, 0x6d, 0x3b, 0x0c, 0x31, 0xe2, 0xd8, 0x41,
	0xf8, 0x92, 0x89, 0x2f, 0x88, 0x4d, 0xe2, 0x4b, 0xf3, 0x2e, 0x8e, 0xe0, 0xef, 0xf6, 0xb1, 0x49,
	0x50, 0x1b, 0xd9, 0x66, 0xfb, 0x82, 0x58, 0x38, 0x5c, 0xf6, 0xba, 0xc8, 0x42, 0x6e, 0x67, 0x4b,
	0xfe, 0x8a, 0x65, 0xfd, 0x9f, 0x12, 0x94, 0xcf, 0xfc, 0x53, 0x28, 0x0f, 0xa0, 0x40, 0x4c, 0x35,
	0xbf, 0x99, 0x7f, 0x3c, 0xbf, 0xbd, 0xd4, 0x10, 0x67, 0x69, 0xb4, 0x5a, 0xc7, 0x07, 0xe7, 0xc8,
	0x1a, 0x60, 0xa3, 0x40, 0x4c, 0xe5, 0x29, 0x40, 0x97, 0x62, 0xc4, 0xb0, 0xd9, 0x46, 0x4c, 0x2d,
	0x70, 0x57, 0xad, 0x21, 0xd8, 0x36, 0x82, 0xe3, 0x34, 0x9e, 0x05, 0xc7, 0x31, 0x6a, 0xd2, 0xbb,
	0xc9, 0x94, 0x27, 0x50, 0xed, 0x61, 0x1b, 0x53, 0x64, 0xa9, 0x45, 0x1e, 0x77, 0x37, 0xd8, 0x82,
	0xef, 0xde, 0x38, 0x14, 0xc6, 0xa3, 0x9c, 0x11, 0xf8, 0x29, 0x0d, 0xa8, 0xb8, 0x83, 0x8e, 0x45,
	0xba, 0x6a, 0x89, 0x47, 0xac, 0x8c, 0x46, 0x9c, 0x72, 0xdb, 0x51, 0xce, 0x90, 0x5e, 0xfe, 0x16,
	0x2e, 0x25, 0x43, 0xc4, 0xb0, 0x5a, 0x9e, 0xb4, 0xc5, 0xa9, 0x30, 0xfa, 0x5b, 0x48, 0x3f, 0x65,
	0x05, 0xca, 0x8c, 0x30, 0x0b, 0xab, 0x95, 0xcd, 0xfc, 0xe3, 0x9a, 0x21, 0x3e, 0x94, 0x6d, 0x28,
	0xa3, 0x8e, 0x33, 0x60, 0x6a, 0x95, 0xc3, 0xac, 0x8f, 0x9d, 0xf0, 0x8c, 0x51, 0x62, 0xf7, 0x84,
	0x2e, 0xc2, 0x55, 0x79, 0x13, 0x2a, 0x68, 0x88, 0x18, 0xa2, 0xea, 0x1c, 0x0f, 0x7a, 0x2d, 0xd8,
	0xbb, 0xc9, 0x57, 0x0d, 0x69, 0xf5, 0x25, 0x34, 0xb1, 0x85, 0xa5, 0x84, 0xb5, 0x74, 0x09, 0xa5,
	0x77, 0x93, 0x29, 0x8f, 0xa0, 0xdc, 0xb5, 0x9c, 0xee, 0xa5, 0x0a, 0xa3, 0x39, 0x3a, 0x40, 0x0c,
	0xed, 0xfb, 0x06, 0x43, 0xd8, 0xb5, 0x1a, 0x54, 0xa5, 0x9c, 0xda, 0xa7, 0x50, 0x11, 0x3a, 0x29,
	0x3a, 0x2c, 0x3a, 0x2f, 0x6d, 0x4c, 0xdb, 0x03, 0x0f, 0xd3, 0xb6, 0xcc, 0x74, 0xd9, 0x98, 0xe7,
	0x8b, 0x2d, 0x0f, 0xd3, 0x63, 0x53, 0x59, 0x87, 0x9a, 0xf7, 0xc2, 0xa1, 0xcc, 0x46, 0x7d, 0xcc,
	0xd3, 0x5b, 0x33, 0xa2, 0x05, 0xed, 0x1d, 0xa8, 0x4a, 0x09, 0xb3, 0x80, 0xed, 0x2d, 0x00, 0xf0,
	0xf2, 0x68, 0xb3, 0xef, 0x5c, 0xac, 0xff, 0x5e, 0x80, 0x79, 0x9e, 0x86, 0xcf, 0x71, 0xbf, 0x83,
	0xa9, 0xf2, 0x36, 0xcc, 0x09, 0xeb, 0x75, 0x77, 0xae, 0xca, 0x5d, 0x8e, 0x4d, 0x65, 0x15, 0xaa,
	0xc1, 0x4e, 0x05, 0xbe, 0x53, 0x65, 0x20, 0x18, 0x3f, 0x05, 0x20, 0xf6, 0x90, 0x48, 0x39, 0x8b,
	0xe9, 0x72, 0x4a, 0xef, 0x26, 0x53, 0x3e, 0x80, 0xda, 0x37, 0x0e, 0xb1, 0x45, 0x64, 0x29, 0x35,
	0x72, 0x4e, 0x38, 0x37, 0x59, 0x22, 0x85, 0xe5, 0x5b, 0xa5, 0xb0, 0x72, 0x7d, 0x0a, 0xf5, 0x1d,
	0x58, 0x6e, 0xb9, 0x26, 0x62, 0x58, 0x68, 0xe6, 0x98, 0xe4, 0x82, 0x60, 0x53, 0x79, 0x08, 0x65,
	0x2e, 0x89, 0x94, 0x6c, 0x71, 0xe4, 0x82, 0x1b, 0xc2, 0xa6, 0x1f, 0x41, 0x3d, 0x1e, 0xcb, 0xf5,
	0x0e, 0x11, 0xde, 0x82, 0x4a, 0x9f, 0xaf, 0x48, 0x88, 0xe5, 0x11, 0x08, 0xe1, 0x6c, 0x48, 0x17,
	0xfd, 0xdf, 0x3c, 0x28, 0x06, 0xfe, 0x76, 0x80, 0x3d, 0xb6, 0xcf, 0x2b, 0x59, 0x74, 0x8a, 0x0d,
	0x00, 0x2a, 0x56, 0x83, 0xec, 0x15, 0x8d, 0x9a, 0x5c, 0x39, 0x36, 0xa3, 0xa2, 0x2a, 0xc4, 0x8b,
	0x6a, 0x27, 0x7e, 0xb7, 0x8a, 0x19, 0x0a, 0x2b, 0x72, 0x8f, 0x0a, 0xb2, 0x74, 0x9b, 0x82, 0x2c,
	0x5f, 0x57, 0x90, 0x3b, 0xeb, 0x57, 0xbb, 0x75, 0x58, 0x25, 0xfd, 0x86, 0x69, 0xf5, 0x1a, 0x3d,
	0xea, 0x76, 0x1b, 0x87, 0xd4, 0xed, 0xca, 0x53, 0xeb, 0x67, 0xb0, 0x68, 0x60, 0xcf, 0x75, 0x6c,
	0x4f, 0x9e, 0x3d, 0x4b, 0x06, 0x76, 0x36, 0xae, 0x76, 0x35, 0x50, 0xc7, 0x31, 0x05, 0x90, 0xfe,
	0x63, 0x1e, 0x96, 0x47, 0x50, 0x6f, 0x55, 0x13, 0x51, 0x26, 0x0b, 0xa9, 0x99, 0x4c, 0x63, 0xf4,
	0x7d, 0x98, 0xe7, 0x03, 0x7e, 0x57, 0x33, 0xbf, 0x08, 0xe1, 0x85, 0x2e, 0x5c, 0x7f, 0xa1, 0x53,
	0x64, 0x7e, 0x02, 0x4b, 0xf2, 0xef, 0x89, 0x83, 0x4c, 0xbe, 0xbb, 0x97, 0x12, 0xf2, 0x03, 0xbf,
	0x9b, 0x82, 0x7f, 0x14, 0x14, 0xcf, 0x4f, 0x71, 0x5a, 0x7e, 0x94, 0xf7, 0x41, 0x74, 0xaa, 0x36,
	0x7f, 0x37, 0xd5, 0x02, 0x77, 0x0d, 0xf5, 0xf3, 0xfb, 0xd7, 0x17, 0x03, 0x76, 0x8a, 0x31, 0x35,
	0x80, 0xfb, 0xf9, 0x7f, 0xbd, 0x34, 0x0d, 0x7f, 0xca, 0x43, 0x5d, 0x92, 0x3b, 0x63, 0x14, 0xa3,
	0x7e, 0x2c, 0x0f, 0xde, 0x0d, 0x73, 0x3b, 0x23, 0x59, 0x2f, 0x61, 0x39, 0x46, 0xe2, 0x39, 0x61,
	0x2f, 0xfc, 0x93, 0xdc, 0xa8, 0x07, 0x28, 0x8f, 0xa0, 0xe4, 0xab, 0x94, 0xbc, 0x64, 0x71, 0x91,
	0xb8, 0x83, 0xfe, 0x73, 0x1e, 0x5e, 0x0f, 0xce, 0x8f, 0xd9, 0x33, 0x5e, 0xf4, 0x19, 0x6e, 0xd0,
	0xe4, 0x6e, 0x11, 0x0a, 0x50, 0xfc, 0x5f, 0x02, 0xfc, 0xcd, 0x2b, 0x2d, 0xe0, 0x74, 0x16, 0x36,
	0x94, 0x0c, 0xbc, 0x76, 0x92, 0x6f, 0xe1, 0x0d, 0xfa, 0xd5, 0x8c, 0xd8, 0xff, 0x31, 0xa2, 0x68,
	0x93, 0xb7, 0xb5, 0x0c, 0xcc, 0xc3, 0x6e, 0x59, 0xc8, 0xde, 0x2d, 0x67, 0xc4, 0xf8, 0xaf, 0x3c,
	0xdc, 0x89, 0x31, 0x16, 0x23, 0x4f, 0xa6, 0xc1, 0x72, 0xd1, 0x9f, 0x55, 0xdb, 0x96, 0xd3, 0xe5,
	0xb3, 0xae, 0xa4, 0x1e, 0x4e, 0x7c, 0x9f, 0x10, 0x0b, 0x9f, 0x48, 0x9b, 0xb1, 0x70, 0x11, 0xfb,
	0x9a, 0x15, 0xf3, 0xdf, 0xa2, 0xa7, 0x8e, 0x57, 0xc1, 0x31, 0x9f, 0x13, 0xb2, 0x70, 0x9f, 0x3a,
	0x9b, 0xcc, 0x88, 0xd9, 0x2f, 0x31, 0x4d, 0x7d, 0x66, 0x9f, 0x91, 0xee, 0xe5, 0xab, 0xc0, 0xeb,
	0xd7, 0x7c, 0xd8, 0xb4, 0x39, 0xaf, 0x13, 0x8c, 0x86, 0xaf, 0x84, 0x60, 0x5f, 0x82, 0x2a, 0xff,
	0x1e, 0xe2, 0x78, 0x32, 0x5b, 0xd4, 0xca, 0x40, 0x2f, 0x05, 0xfc, 0x1c, 0xee, 0x8d, 0x3c, 0xdd,
	0x11, 0xf4, 0x46, 0x30, 0x8a, 0xb6, 0x07, 0xd4, 0xe2, 0x5b, 0xd4, 0x82, 0x71, 0xb3, 0x45, 0xad,
	0xb4, 0xd7, 0xe3, 0x6b, 0x58, 0x93, 0x5b, 0x18, 0x78, 0xe8, 0x5c, 0xe2, 0x19, 0xf3, 0xde, 0xfe,
	0xb3, 0x0a, 0x15, 0xf9, 0x44, 0xee, 0xc1, 0x7c, 0x7c, 0x9a, 0xd3, 0x02, 0xb8, 0xf1, 0x49, 0x4f,
	0xbb, 0x1b, 0xd9, 0x62, 0x67, 0xd6, 0x73, 0x3e, 0x46, 0x7c, 0x52, 0x48, 0x62, 0xc4, 0x6c, 0xd3,
	0x31, 0x3e, 0x84, 0xb9, 0xf0, 0xa1, 0x58, 0x4d, 0x00, 0x04, 0x86, 0xe9, 0xd1, 0x07, 0xb0, 0x30,
	0xd2, 0xd2, 0xd7, 0xc6, 0x11, 0x42, 0x63, 0x1a, 0x07, 0xd1, 0x5a, 0x27, 0x70, 0xe0, 0x86, 0xe9,
	0xd1, 0x1f, 0x41, 0x2d, 0x6a, 0x73, 0xea, 0x84, 0x70, 0x6e, 0x99, 0x1e, 0xff, 0x31, 0x40, 0x6c,
	0x74, 0xa9, 0x27, 0x00, 0x22, 0x93, 0xa6, 0x25, 0x11, 0x22, 0x9b, 0x9e, 0x53, 0xce, 0xe1, 0x4e,
	0xf8, 0x1d, 0xcc, 0x1b, 0x0f, 0x92, 0x6c, 0xc6, 0x46, 0x12, 0x6d, 0x6d, 0xc2, 0xb3, 0x1f, 0xcc,
	0x08, 0x7a, 0xee, 0xdd, 0xbc, 0xb2, 0x0f, 0x15, 0xd9, 0x06, 0x93, 0xf9, 0x8d, 0xdd, 0x4e, 0x6d,
	0x6d, 0xe2, 0xe9, 0x04, 0x9c, 0x9e, 0x53, 0x76, 0xa1, 0xc4, 0x3b, 0x96, 0x3a, 0x09, 0xc2, 0xb7,
	0xa4, 0x01, 0x34, 0xa1, 0x2c, 0x5a, 0x4b, 0x7d, 0x12, 0x02, 0x37, 0xa5, 0x41, 0x3c, 0x87, 0xa5,
	0xf1, 0x56, 0xb0, 0x99, 0x80, 0x1b, 0xf3, 0xd0, 0xee, 0x4f, 0x44, 0x0d, 0xed, 0x7a, 0x4e, 0xf9,
	0x0a, 0x56, 0x26, 0x96, 0xeb, 0xc3, 0x04, 0xf6, 0x24, 0xa7, 0x74, 0xf8, 0xbd, 0xfa, 0xd5, 0xee,
	0x3d, 0x58, 0x89, 0x97, 0xb4, 0x87, 0xe9, 0x90, 0x74, 0xb1, 0xd7, 0xa9, 0xf0, 0xd7, 0xfc, 0xbd,
	0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xfe, 0xe5, 0x20, 0x17, 0x83, 0x12, 0x00, 0x00,
}
