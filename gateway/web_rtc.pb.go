// Code generated by protoc-gen-go. DO NOT EDIT.
// source: web_rtc.proto

package dialog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/types"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CallDisposedReason int32

const (
	CallDisposedReason_CALLDISPOSEDREASON_UNKNOWN        CallDisposedReason = 0
	CallDisposedReason_CALLDISPOSEDREASON_REJECTED       CallDisposedReason = 1
	CallDisposedReason_CALLDISPOSEDREASON_BUSY           CallDisposedReason = 2
	CallDisposedReason_CALLDISPOSEDREASON_ENDED          CallDisposedReason = 3
	CallDisposedReason_CALLDISPOSEDREASON_ANSWER_TIMEOUT CallDisposedReason = 4
)

var CallDisposedReason_name = map[int32]string{
	0: "CALLDISPOSEDREASON_UNKNOWN",
	1: "CALLDISPOSEDREASON_REJECTED",
	2: "CALLDISPOSEDREASON_BUSY",
	3: "CALLDISPOSEDREASON_ENDED",
	4: "CALLDISPOSEDREASON_ANSWER_TIMEOUT",
}
var CallDisposedReason_value = map[string]int32{
	"CALLDISPOSEDREASON_UNKNOWN":        0,
	"CALLDISPOSEDREASON_REJECTED":       1,
	"CALLDISPOSEDREASON_BUSY":           2,
	"CALLDISPOSEDREASON_ENDED":          3,
	"CALLDISPOSEDREASON_ANSWER_TIMEOUT": 4,
}

func (x CallDisposedReason) String() string {
	return proto.EnumName(CallDisposedReason_name, int32(x))
}
func (CallDisposedReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{0}
}

type RejectCallReason int32

const (
	RejectCallReason_REJECTCALLREASON_UNKNOWN RejectCallReason = 0
	RejectCallReason_REJECTCALLREASON_DECLINE RejectCallReason = 1
	RejectCallReason_REJECTCALLREASON_BUSY    RejectCallReason = 2
)

var RejectCallReason_name = map[int32]string{
	0: "REJECTCALLREASON_UNKNOWN",
	1: "REJECTCALLREASON_DECLINE",
	2: "REJECTCALLREASON_BUSY",
}
var RejectCallReason_value = map[string]int32{
	"REJECTCALLREASON_UNKNOWN": 0,
	"REJECTCALLREASON_DECLINE": 1,
	"REJECTCALLREASON_BUSY":    2,
}

func (x RejectCallReason) String() string {
	return proto.EnumName(RejectCallReason_name, int32(x))
}
func (RejectCallReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{1}
}

type DTMFCode int32

const (
	DTMFCode_DTMFCODE_UNKNOWN  DTMFCode = 0
	DTMFCode_DTMFCODE_ZERO     DTMFCode = 1
	DTMFCode_DTMFCODE_ONE      DTMFCode = 2
	DTMFCode_DTMFCODE_TWO      DTMFCode = 3
	DTMFCode_DTMFCODE_THREE    DTMFCode = 4
	DTMFCode_DTMFCODE_FOUR     DTMFCode = 5
	DTMFCode_DTMFCODE_FIVE     DTMFCode = 6
	DTMFCode_DTMFCODE_SIX      DTMFCode = 7
	DTMFCode_DTMFCODE_SEVEN    DTMFCode = 8
	DTMFCode_DTMFCODE_EIGHT    DTMFCode = 9
	DTMFCode_DTMFCODE_NINE     DTMFCode = 10
	DTMFCode_DTMFCODE_ASTERISK DTMFCode = 11
	DTMFCode_DTMFCODE_POUND    DTMFCode = 12
	DTMFCode_DTMFCODE_A        DTMFCode = 13
	DTMFCode_DTMFCODE_B        DTMFCode = 14
	DTMFCode_DTMFCODE_C        DTMFCode = 15
	DTMFCode_DTMFCODE_D        DTMFCode = 16
)

var DTMFCode_name = map[int32]string{
	0:  "DTMFCODE_UNKNOWN",
	1:  "DTMFCODE_ZERO",
	2:  "DTMFCODE_ONE",
	3:  "DTMFCODE_TWO",
	4:  "DTMFCODE_THREE",
	5:  "DTMFCODE_FOUR",
	6:  "DTMFCODE_FIVE",
	7:  "DTMFCODE_SIX",
	8:  "DTMFCODE_SEVEN",
	9:  "DTMFCODE_EIGHT",
	10: "DTMFCODE_NINE",
	11: "DTMFCODE_ASTERISK",
	12: "DTMFCODE_POUND",
	13: "DTMFCODE_A",
	14: "DTMFCODE_B",
	15: "DTMFCODE_C",
	16: "DTMFCODE_D",
}
var DTMFCode_value = map[string]int32{
	"DTMFCODE_UNKNOWN":  0,
	"DTMFCODE_ZERO":     1,
	"DTMFCODE_ONE":      2,
	"DTMFCODE_TWO":      3,
	"DTMFCODE_THREE":    4,
	"DTMFCODE_FOUR":     5,
	"DTMFCODE_FIVE":     6,
	"DTMFCODE_SIX":      7,
	"DTMFCODE_SEVEN":    8,
	"DTMFCODE_EIGHT":    9,
	"DTMFCODE_NINE":     10,
	"DTMFCODE_ASTERISK": 11,
	"DTMFCODE_POUND":    12,
	"DTMFCODE_A":        13,
	"DTMFCODE_B":        14,
	"DTMFCODE_C":        15,
	"DTMFCODE_D":        16,
}

func (x DTMFCode) String() string {
	return proto.EnumName(DTMFCode_name, int32(x))
}
func (DTMFCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{2}
}

type CallStatsType int32

const (
	CallStatsType_CALLSTATSTYPE_UNKNOWN                                       CallStatsType = 0
	CallStatsType_CALLSTATSTYPE_TURN_SERVER_ROUND_TRIP_TIME                   CallStatsType = 1
	CallStatsType_CALLSTATSTYPE_ICE_CONNECTION_FAILED                         CallStatsType = 2
	CallStatsType_CALLSTATSTYPE_ICE_CONNECTION_CONNECTED                      CallStatsType = 3
	CallStatsType_CALLSTATSTYPE_ICE_CONNECTION_DID_NOT_CONNECT                CallStatsType = 4
	CallStatsType_CALLSTATSTYPE_ICE_CONNECTION_CONNECTED_TIME                 CallStatsType = 5
	CallStatsType_CALLSTATSTYPE_PEER_CONNECTION_CREATE_ANSWER_FAILED          CallStatsType = 6
	CallStatsType_CALLSTATSTYPE_PEER_CONNECTION_CREATE_OFFER_FAILED           CallStatsType = 7
	CallStatsType_CALLSTATSTYPE_PEER_CONNECTION_SET_REMOTE_DESCRIPTION_FAILED CallStatsType = 8
	CallStatsType_CALLSTATSTYPE_PEER_CONNECTION_SET_LOCAL_DESCRIPTION_FAILED  CallStatsType = 9
)

var CallStatsType_name = map[int32]string{
	0: "CALLSTATSTYPE_UNKNOWN",
	1: "CALLSTATSTYPE_TURN_SERVER_ROUND_TRIP_TIME",
	2: "CALLSTATSTYPE_ICE_CONNECTION_FAILED",
	3: "CALLSTATSTYPE_ICE_CONNECTION_CONNECTED",
	4: "CALLSTATSTYPE_ICE_CONNECTION_DID_NOT_CONNECT",
	5: "CALLSTATSTYPE_ICE_CONNECTION_CONNECTED_TIME",
	6: "CALLSTATSTYPE_PEER_CONNECTION_CREATE_ANSWER_FAILED",
	7: "CALLSTATSTYPE_PEER_CONNECTION_CREATE_OFFER_FAILED",
	8: "CALLSTATSTYPE_PEER_CONNECTION_SET_REMOTE_DESCRIPTION_FAILED",
	9: "CALLSTATSTYPE_PEER_CONNECTION_SET_LOCAL_DESCRIPTION_FAILED",
}
var CallStatsType_value = map[string]int32{
	"CALLSTATSTYPE_UNKNOWN":                                       0,
	"CALLSTATSTYPE_TURN_SERVER_ROUND_TRIP_TIME":                   1,
	"CALLSTATSTYPE_ICE_CONNECTION_FAILED":                         2,
	"CALLSTATSTYPE_ICE_CONNECTION_CONNECTED":                      3,
	"CALLSTATSTYPE_ICE_CONNECTION_DID_NOT_CONNECT":                4,
	"CALLSTATSTYPE_ICE_CONNECTION_CONNECTED_TIME":                 5,
	"CALLSTATSTYPE_PEER_CONNECTION_CREATE_ANSWER_FAILED":          6,
	"CALLSTATSTYPE_PEER_CONNECTION_CREATE_OFFER_FAILED":           7,
	"CALLSTATSTYPE_PEER_CONNECTION_SET_REMOTE_DESCRIPTION_FAILED": 8,
	"CALLSTATSTYPE_PEER_CONNECTION_SET_LOCAL_DESCRIPTION_FAILED":  9,
}

func (x CallStatsType) String() string {
	return proto.EnumName(CallStatsType_name, int32(x))
}
func (CallStatsType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{3}
}

type CallMemberState int32

const (
	CallMemberState_CALLMEMBERSTATE_UNKNOWN         CallMemberState = 0
	CallMemberState_CALLMEMBERSTATE_RINGING         CallMemberState = 1
	CallMemberState_CALLMEMBERSTATE_RINGING_REACHED CallMemberState = 4
	CallMemberState_CALLMEMBERSTATE_CONNECTING      CallMemberState = 2
	CallMemberState_CALLMEMBERSTATE_CONNECTED       CallMemberState = 3
	CallMemberState_CALLMEMBERSTATE_ENDED           CallMemberState = 5
)

var CallMemberState_name = map[int32]string{
	0: "CALLMEMBERSTATE_UNKNOWN",
	1: "CALLMEMBERSTATE_RINGING",
	4: "CALLMEMBERSTATE_RINGING_REACHED",
	2: "CALLMEMBERSTATE_CONNECTING",
	3: "CALLMEMBERSTATE_CONNECTED",
	5: "CALLMEMBERSTATE_ENDED",
}
var CallMemberState_value = map[string]int32{
	"CALLMEMBERSTATE_UNKNOWN":         0,
	"CALLMEMBERSTATE_RINGING":         1,
	"CALLMEMBERSTATE_RINGING_REACHED": 4,
	"CALLMEMBERSTATE_CONNECTING":      2,
	"CALLMEMBERSTATE_CONNECTED":       3,
	"CALLMEMBERSTATE_ENDED":           5,
}

func (x CallMemberState) String() string {
	return proto.EnumName(CallMemberState_name, int32(x))
}
func (CallMemberState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{4}
}

// Update about incoming call (Sent every 10 seconds)
type UpdateIncomingCallDeprecated struct {
	CallId               int64                `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	AttemptIndex         *wrappers.Int32Value `protobuf:"bytes,2,opt,name=attempt_index,json=attemptIndex,proto3" json:"attempt_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateIncomingCallDeprecated) Reset()         { *m = UpdateIncomingCallDeprecated{} }
func (m *UpdateIncomingCallDeprecated) String() string { return proto.CompactTextString(m) }
func (*UpdateIncomingCallDeprecated) ProtoMessage()    {}
func (*UpdateIncomingCallDeprecated) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{0}
}
func (m *UpdateIncomingCallDeprecated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateIncomingCallDeprecated.Unmarshal(m, b)
}
func (m *UpdateIncomingCallDeprecated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateIncomingCallDeprecated.Marshal(b, m, deterministic)
}
func (dst *UpdateIncomingCallDeprecated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIncomingCallDeprecated.Merge(dst, src)
}
func (m *UpdateIncomingCallDeprecated) XXX_Size() int {
	return xxx_messageInfo_UpdateIncomingCallDeprecated.Size(m)
}
func (m *UpdateIncomingCallDeprecated) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIncomingCallDeprecated.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIncomingCallDeprecated proto.InternalMessageInfo

func (m *UpdateIncomingCallDeprecated) GetCallId() int64 {
	if m != nil {
		return m.CallId
	}
	return 0
}

func (m *UpdateIncomingCallDeprecated) GetAttemptIndex() *wrappers.Int32Value {
	if m != nil {
		return m.AttemptIndex
	}
	return nil
}

// A new update about incoming call
type UpdateIncomingCall struct {
	CallId     int64  `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	EventBusId string `protobuf:"bytes,2,opt,name=event_bus_id,json=eventBusId,proto3" json:"event_bus_id,omitempty"`
	Peer       *Peer  `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	// / Call visual name
	DisplayName          *wrappers.StringValue `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	AttemptIndex         *wrappers.Int32Value  `protobuf:"bytes,5,opt,name=attempt_index,json=attemptIndex,proto3" json:"attempt_index,omitempty"`
	OutPeer              *OutPeer              `protobuf:"bytes,6,opt,name=out_peer,json=outPeer,proto3" json:"out_peer,omitempty"`
	Video                bool                  `protobuf:"varint,7,opt,name=video,proto3" json:"video,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateIncomingCall) Reset()         { *m = UpdateIncomingCall{} }
func (m *UpdateIncomingCall) String() string { return proto.CompactTextString(m) }
func (*UpdateIncomingCall) ProtoMessage()    {}
func (*UpdateIncomingCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{1}
}
func (m *UpdateIncomingCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateIncomingCall.Unmarshal(m, b)
}
func (m *UpdateIncomingCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateIncomingCall.Marshal(b, m, deterministic)
}
func (dst *UpdateIncomingCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIncomingCall.Merge(dst, src)
}
func (m *UpdateIncomingCall) XXX_Size() int {
	return xxx_messageInfo_UpdateIncomingCall.Size(m)
}
func (m *UpdateIncomingCall) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIncomingCall.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIncomingCall proto.InternalMessageInfo

func (m *UpdateIncomingCall) GetCallId() int64 {
	if m != nil {
		return m.CallId
	}
	return 0
}

func (m *UpdateIncomingCall) GetEventBusId() string {
	if m != nil {
		return m.EventBusId
	}
	return ""
}

func (m *UpdateIncomingCall) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *UpdateIncomingCall) GetDisplayName() *wrappers.StringValue {
	if m != nil {
		return m.DisplayName
	}
	return nil
}

func (m *UpdateIncomingCall) GetAttemptIndex() *wrappers.Int32Value {
	if m != nil {
		return m.AttemptIndex
	}
	return nil
}

func (m *UpdateIncomingCall) GetOutPeer() *OutPeer {
	if m != nil {
		return m.OutPeer
	}
	return nil
}

func (m *UpdateIncomingCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

// Update about incoming call handled
type UpdateCallHandled struct {
	CallId               int64                `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	AttemptIndex         *wrappers.Int32Value `protobuf:"bytes,2,opt,name=attempt_index,json=attemptIndex,proto3" json:"attempt_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateCallHandled) Reset()         { *m = UpdateCallHandled{} }
func (m *UpdateCallHandled) String() string { return proto.CompactTextString(m) }
func (*UpdateCallHandled) ProtoMessage()    {}
func (*UpdateCallHandled) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{2}
}
func (m *UpdateCallHandled) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCallHandled.Unmarshal(m, b)
}
func (m *UpdateCallHandled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCallHandled.Marshal(b, m, deterministic)
}
func (dst *UpdateCallHandled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCallHandled.Merge(dst, src)
}
func (m *UpdateCallHandled) XXX_Size() int {
	return xxx_messageInfo_UpdateCallHandled.Size(m)
}
func (m *UpdateCallHandled) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCallHandled.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCallHandled proto.InternalMessageInfo

func (m *UpdateCallHandled) GetCallId() int64 {
	if m != nil {
		return m.CallId
	}
	return 0
}

func (m *UpdateCallHandled) GetAttemptIndex() *wrappers.Int32Value {
	if m != nil {
		return m.AttemptIndex
	}
	return nil
}

// Update about the call ending (all participants have left)
type UpdateCallDisposed struct {
	CallId               int64                `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	AttemptIndex         *wrappers.Int32Value `protobuf:"bytes,2,opt,name=attempt_index,json=attemptIndex,proto3" json:"attempt_index,omitempty"`
	Reason               CallDisposedReason   `protobuf:"varint,3,opt,name=reason,proto3,enum=dialog.CallDisposedReason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateCallDisposed) Reset()         { *m = UpdateCallDisposed{} }
func (m *UpdateCallDisposed) String() string { return proto.CompactTextString(m) }
func (*UpdateCallDisposed) ProtoMessage()    {}
func (*UpdateCallDisposed) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{3}
}
func (m *UpdateCallDisposed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCallDisposed.Unmarshal(m, b)
}
func (m *UpdateCallDisposed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCallDisposed.Marshal(b, m, deterministic)
}
func (dst *UpdateCallDisposed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCallDisposed.Merge(dst, src)
}
func (m *UpdateCallDisposed) XXX_Size() int {
	return xxx_messageInfo_UpdateCallDisposed.Size(m)
}
func (m *UpdateCallDisposed) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCallDisposed.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCallDisposed proto.InternalMessageInfo

func (m *UpdateCallDisposed) GetCallId() int64 {
	if m != nil {
		return m.CallId
	}
	return 0
}

func (m *UpdateCallDisposed) GetAttemptIndex() *wrappers.Int32Value {
	if m != nil {
		return m.AttemptIndex
	}
	return nil
}

func (m *UpdateCallDisposed) GetReason() CallDisposedReason {
	if m != nil {
		return m.Reason
	}
	return CallDisposedReason_CALLDISPOSEDREASON_UNKNOWN
}

// Getting Call Information
type RequestGetCallInfo struct {
	CallId               int64    `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestGetCallInfo) Reset()         { *m = RequestGetCallInfo{} }
func (m *RequestGetCallInfo) String() string { return proto.CompactTextString(m) }
func (*RequestGetCallInfo) ProtoMessage()    {}
func (*RequestGetCallInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{4}
}
func (m *RequestGetCallInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestGetCallInfo.Unmarshal(m, b)
}
func (m *RequestGetCallInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestGetCallInfo.Marshal(b, m, deterministic)
}
func (dst *RequestGetCallInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestGetCallInfo.Merge(dst, src)
}
func (m *RequestGetCallInfo) XXX_Size() int {
	return xxx_messageInfo_RequestGetCallInfo.Size(m)
}
func (m *RequestGetCallInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestGetCallInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RequestGetCallInfo proto.InternalMessageInfo

func (m *RequestGetCallInfo) GetCallId() int64 {
	if m != nil {
		return m.CallId
	}
	return 0
}

type ResponseGetCallInfo struct {
	Peer                 *Peer                 `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	Groups               []*GroupOutPeer       `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	Users                []*UserOutPeer        `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	EventBusId           string                `protobuf:"bytes,4,opt,name=event_bus_id,json=eventBusId,proto3" json:"event_bus_id,omitempty"`
	DisplayName          *wrappers.StringValue `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ResponseGetCallInfo) Reset()         { *m = ResponseGetCallInfo{} }
func (m *ResponseGetCallInfo) String() string { return proto.CompactTextString(m) }
func (*ResponseGetCallInfo) ProtoMessage()    {}
func (*ResponseGetCallInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{5}
}
func (m *ResponseGetCallInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseGetCallInfo.Unmarshal(m, b)
}
func (m *ResponseGetCallInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseGetCallInfo.Marshal(b, m, deterministic)
}
func (dst *ResponseGetCallInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseGetCallInfo.Merge(dst, src)
}
func (m *ResponseGetCallInfo) XXX_Size() int {
	return xxx_messageInfo_ResponseGetCallInfo.Size(m)
}
func (m *ResponseGetCallInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseGetCallInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseGetCallInfo proto.InternalMessageInfo

func (m *ResponseGetCallInfo) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *ResponseGetCallInfo) GetGroups() []*GroupOutPeer {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *ResponseGetCallInfo) GetUsers() []*UserOutPeer {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ResponseGetCallInfo) GetEventBusId() string {
	if m != nil {
		return m.EventBusId
	}
	return ""
}

func (m *ResponseGetCallInfo) GetDisplayName() *wrappers.StringValue {
	if m != nil {
		return m.DisplayName
	}
	return nil
}

// This struct represents a call from the history
type CallLogEntry struct {
	Id        int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CallDate  int64                `protobuf:"varint,2,opt,name=call_date,json=callDate,proto3" json:"call_date,omitempty"`
	Initiator *OutPeer             `protobuf:"bytes,3,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Recipient *OutPeer             `protobuf:"bytes,4,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Duration  *wrappers.Int64Value `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	// / was the call answered by anybody
	Answered *wrappers.BoolValue `protobuf:"bytes,6,opt,name=answered,proto3" json:"answered,omitempty"`
	Finished *wrappers.BoolValue `protobuf:"bytes,7,opt,name=finished,proto3" json:"finished,omitempty"`
	// / optional display name for this call
	DisplayName          *wrappers.StringValue `protobuf:"bytes,8,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Rejected             *wrappers.BoolValue   `protobuf:"bytes,9,opt,name=rejected,proto3" json:"rejected,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CallLogEntry) Reset()         { *m = CallLogEntry{} }
func (m *CallLogEntry) String() string { return proto.CompactTextString(m) }
func (*CallLogEntry) ProtoMessage()    {}
func (*CallLogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{6}
}
func (m *CallLogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallLogEntry.Unmarshal(m, b)
}
func (m *CallLogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallLogEntry.Marshal(b, m, deterministic)
}
func (dst *CallLogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallLogEntry.Merge(dst, src)
}
func (m *CallLogEntry) XXX_Size() int {
	return xxx_messageInfo_CallLogEntry.Size(m)
}
func (m *CallLogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_CallLogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_CallLogEntry proto.InternalMessageInfo

func (m *CallLogEntry) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CallLogEntry) GetCallDate() int64 {
	if m != nil {
		return m.CallDate
	}
	return 0
}

func (m *CallLogEntry) GetInitiator() *OutPeer {
	if m != nil {
		return m.Initiator
	}
	return nil
}

func (m *CallLogEntry) GetRecipient() *OutPeer {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *CallLogEntry) GetDuration() *wrappers.Int64Value {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *CallLogEntry) GetAnswered() *wrappers.BoolValue {
	if m != nil {
		return m.Answered
	}
	return nil
}

func (m *CallLogEntry) GetFinished() *wrappers.BoolValue {
	if m != nil {
		return m.Finished
	}
	return nil
}

func (m *CallLogEntry) GetDisplayName() *wrappers.StringValue {
	if m != nil {
		return m.DisplayName
	}
	return nil
}

func (m *CallLogEntry) GetRejected() *wrappers.BoolValue {
	if m != nil {
		return m.Rejected
	}
	return nil
}

// Call this function to load call history
type RequestLoadCalls struct {
	// / Cursor
	NextOffset           *wrappers.BytesValue `protobuf:"bytes,1,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
	Limit                int32                `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RequestLoadCalls) Reset()         { *m = RequestLoadCalls{} }
func (m *RequestLoadCalls) String() string { return proto.CompactTextString(m) }
func (*RequestLoadCalls) ProtoMessage()    {}
func (*RequestLoadCalls) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{7}
}
func (m *RequestLoadCalls) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestLoadCalls.Unmarshal(m, b)
}
func (m *RequestLoadCalls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestLoadCalls.Marshal(b, m, deterministic)
}
func (dst *RequestLoadCalls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestLoadCalls.Merge(dst, src)
}
func (m *RequestLoadCalls) XXX_Size() int {
	return xxx_messageInfo_RequestLoadCalls.Size(m)
}
func (m *RequestLoadCalls) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestLoadCalls.DiscardUnknown(m)
}

var xxx_messageInfo_RequestLoadCalls proto.InternalMessageInfo

func (m *RequestLoadCalls) GetNextOffset() *wrappers.BytesValue {
	if m != nil {
		return m.NextOffset
	}
	return nil
}

func (m *RequestLoadCalls) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// / Calls + related peers
type ResponseLoadCalls struct {
	Calls                []*CallLogEntry      `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
	Users                []*UserOutPeer       `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	Groups               []*GroupOutPeer      `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	NextOffset           *wrappers.BytesValue `protobuf:"bytes,4,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ResponseLoadCalls) Reset()         { *m = ResponseLoadCalls{} }
func (m *ResponseLoadCalls) String() string { return proto.CompactTextString(m) }
func (*ResponseLoadCalls) ProtoMessage()    {}
func (*ResponseLoadCalls) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{8}
}
func (m *ResponseLoadCalls) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseLoadCalls.Unmarshal(m, b)
}
func (m *ResponseLoadCalls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseLoadCalls.Marshal(b, m, deterministic)
}
func (dst *ResponseLoadCalls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseLoadCalls.Merge(dst, src)
}
func (m *ResponseLoadCalls) XXX_Size() int {
	return xxx_messageInfo_ResponseLoadCalls.Size(m)
}
func (m *ResponseLoadCalls) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseLoadCalls.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseLoadCalls proto.InternalMessageInfo

func (m *ResponseLoadCalls) GetCalls() []*CallLogEntry {
	if m != nil {
		return m.Calls
	}
	return nil
}

func (m *ResponseLoadCalls) GetUsers() []*UserOutPeer {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ResponseLoadCalls) GetGroups() []*GroupOutPeer {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *ResponseLoadCalls) GetNextOffset() *wrappers.BytesValue {
	if m != nil {
		return m.NextOffset
	}
	return nil
}

// Do Call. Right after a call client need to start sending CallInProgress
type RequestDoCall struct {
	Peer                 *OutPeer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	Timeout              int64    `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestDoCall) Reset()         { *m = RequestDoCall{} }
func (m *RequestDoCall) String() string { return proto.CompactTextString(m) }
func (*RequestDoCall) ProtoMessage()    {}
func (*RequestDoCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{9}
}
func (m *RequestDoCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestDoCall.Unmarshal(m, b)
}
func (m *RequestDoCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestDoCall.Marshal(b, m, deterministic)
}
func (dst *RequestDoCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDoCall.Merge(dst, src)
}
func (m *RequestDoCall) XXX_Size() int {
	return xxx_messageInfo_RequestDoCall.Size(m)
}
func (m *RequestDoCall) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDoCall.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDoCall proto.InternalMessageInfo

func (m *RequestDoCall) GetPeer() *OutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *RequestDoCall) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type ResponseDoCall struct {
	CallId               int64    `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	EventBusId           string   `protobuf:"bytes,2,opt,name=event_bus_id,json=eventBusId,proto3" json:"event_bus_id,omitempty"`
	DeviceId             int64    `protobuf:"varint,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseDoCall) Reset()         { *m = ResponseDoCall{} }
func (m *ResponseDoCall) String() string { return proto.CompactTextString(m) }
func (*ResponseDoCall) ProtoMessage()    {}
func (*ResponseDoCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{10}
}
func (m *ResponseDoCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDoCall.Unmarshal(m, b)
}
func (m *ResponseDoCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDoCall.Marshal(b, m, deterministic)
}
func (dst *ResponseDoCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDoCall.Merge(dst, src)
}
func (m *ResponseDoCall) XXX_Size() int {
	return xxx_messageInfo_ResponseDoCall.Size(m)
}
func (m *ResponseDoCall) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDoCall.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDoCall proto.InternalMessageInfo

func (m *ResponseDoCall) GetCallId() int64 {
	if m != nil {
		return m.CallId
	}
	return 0
}

func (m *ResponseDoCall) GetEventBusId() string {
	if m != nil {
		return m.EventBusId
	}
	return ""
}

func (m *ResponseDoCall) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

// Joining Call
type RequestJoinCall struct {
	CallId               int64    `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestJoinCall) Reset()         { *m = RequestJoinCall{} }
func (m *RequestJoinCall) String() string { return proto.CompactTextString(m) }
func (*RequestJoinCall) ProtoMessage()    {}
func (*RequestJoinCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{11}
}
func (m *RequestJoinCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestJoinCall.Unmarshal(m, b)
}
func (m *RequestJoinCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestJoinCall.Marshal(b, m, deterministic)
}
func (dst *RequestJoinCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestJoinCall.Merge(dst, src)
}
func (m *RequestJoinCall) XXX_Size() int {
	return xxx_messageInfo_RequestJoinCall.Size(m)
}
func (m *RequestJoinCall) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestJoinCall.DiscardUnknown(m)
}

var xxx_messageInfo_RequestJoinCall proto.InternalMessageInfo

func (m *RequestJoinCall) GetCallId() int64 {
	if m != nil {
		return m.CallId
	}
	return 0
}

// Rejecting Call
type RequestRejectCall struct {
	CallId               int64            `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	Reason               RejectCallReason `protobuf:"varint,2,opt,name=reason,proto3,enum=dialog.RejectCallReason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RequestRejectCall) Reset()         { *m = RequestRejectCall{} }
func (m *RequestRejectCall) String() string { return proto.CompactTextString(m) }
func (*RequestRejectCall) ProtoMessage()    {}
func (*RequestRejectCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{12}
}
func (m *RequestRejectCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRejectCall.Unmarshal(m, b)
}
func (m *RequestRejectCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRejectCall.Marshal(b, m, deterministic)
}
func (dst *RequestRejectCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRejectCall.Merge(dst, src)
}
func (m *RequestRejectCall) XXX_Size() int {
	return xxx_messageInfo_RequestRejectCall.Size(m)
}
func (m *RequestRejectCall) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRejectCall.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRejectCall proto.InternalMessageInfo

func (m *RequestRejectCall) GetCallId() int64 {
	if m != nil {
		return m.CallId
	}
	return 0
}

func (m *RequestRejectCall) GetReason() RejectCallReason {
	if m != nil {
		return m.Reason
	}
	return RejectCallReason_REJECTCALLREASON_UNKNOWN
}

type RequestDeleteCall struct {
	CallId               int64    `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestDeleteCall) Reset()         { *m = RequestDeleteCall{} }
func (m *RequestDeleteCall) String() string { return proto.CompactTextString(m) }
func (*RequestDeleteCall) ProtoMessage()    {}
func (*RequestDeleteCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{13}
}
func (m *RequestDeleteCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestDeleteCall.Unmarshal(m, b)
}
func (m *RequestDeleteCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestDeleteCall.Marshal(b, m, deterministic)
}
func (dst *RequestDeleteCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDeleteCall.Merge(dst, src)
}
func (m *RequestDeleteCall) XXX_Size() int {
	return xxx_messageInfo_RequestDeleteCall.Size(m)
}
func (m *RequestDeleteCall) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDeleteCall.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDeleteCall proto.InternalMessageInfo

func (m *RequestDeleteCall) GetCallId() int64 {
	if m != nil {
		return m.CallId
	}
	return 0
}

// Changes the call display name
type RequestChangeCallDisplayName struct {
	CallId               int64                 `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	DisplayName          *wrappers.StringValue `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RequestChangeCallDisplayName) Reset()         { *m = RequestChangeCallDisplayName{} }
func (m *RequestChangeCallDisplayName) String() string { return proto.CompactTextString(m) }
func (*RequestChangeCallDisplayName) ProtoMessage()    {}
func (*RequestChangeCallDisplayName) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{14}
}
func (m *RequestChangeCallDisplayName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestChangeCallDisplayName.Unmarshal(m, b)
}
func (m *RequestChangeCallDisplayName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestChangeCallDisplayName.Marshal(b, m, deterministic)
}
func (dst *RequestChangeCallDisplayName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestChangeCallDisplayName.Merge(dst, src)
}
func (m *RequestChangeCallDisplayName) XXX_Size() int {
	return xxx_messageInfo_RequestChangeCallDisplayName.Size(m)
}
func (m *RequestChangeCallDisplayName) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestChangeCallDisplayName.DiscardUnknown(m)
}

var xxx_messageInfo_RequestChangeCallDisplayName proto.InternalMessageInfo

func (m *RequestChangeCallDisplayName) GetCallId() int64 {
	if m != nil {
		return m.CallId
	}
	return 0
}

func (m *RequestChangeCallDisplayName) GetDisplayName() *wrappers.StringValue {
	if m != nil {
		return m.DisplayName
	}
	return nil
}

// ICE Server description
type ICEServer struct {
	// / Url to server
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// / Optional username
	Username *wrappers.StringValue `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// / Optional credential
	Credential           *wrappers.StringValue `protobuf:"bytes,3,opt,name=credential,proto3" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ICEServer) Reset()         { *m = ICEServer{} }
func (m *ICEServer) String() string { return proto.CompactTextString(m) }
func (*ICEServer) ProtoMessage()    {}
func (*ICEServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{15}
}
func (m *ICEServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ICEServer.Unmarshal(m, b)
}
func (m *ICEServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ICEServer.Marshal(b, m, deterministic)
}
func (dst *ICEServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ICEServer.Merge(dst, src)
}
func (m *ICEServer) XXX_Size() int {
	return xxx_messageInfo_ICEServer.Size(m)
}
func (m *ICEServer) XXX_DiscardUnknown() {
	xxx_messageInfo_ICEServer.DiscardUnknown(m)
}

var xxx_messageInfo_ICEServer proto.InternalMessageInfo

func (m *ICEServer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ICEServer) GetUsername() *wrappers.StringValue {
	if m != nil {
		return m.Username
	}
	return nil
}

func (m *ICEServer) GetCredential() *wrappers.StringValue {
	if m != nil {
		return m.Credential
	}
	return nil
}

// Structure representing an ICE candidate
type ICECandidate struct {
	SdpMLineIndex        int32    `protobuf:"varint,1,opt,name=sdp_m_line_index,json=sdpMLineIndex,proto3" json:"sdp_m_line_index,omitempty"`
	SdpMid               string   `protobuf:"bytes,2,opt,name=sdp_mid,json=sdpMid,proto3" json:"sdp_mid,omitempty"`
	Sdp                  string   `protobuf:"bytes,3,opt,name=sdp,proto3" json:"sdp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ICECandidate) Reset()         { *m = ICECandidate{} }
func (m *ICECandidate) String() string { return proto.CompactTextString(m) }
func (*ICECandidate) ProtoMessage()    {}
func (*ICECandidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{16}
}
func (m *ICECandidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ICECandidate.Unmarshal(m, b)
}
func (m *ICECandidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ICECandidate.Marshal(b, m, deterministic)
}
func (dst *ICECandidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ICECandidate.Merge(dst, src)
}
func (m *ICECandidate) XXX_Size() int {
	return xxx_messageInfo_ICECandidate.Size(m)
}
func (m *ICECandidate) XXX_DiscardUnknown() {
	xxx_messageInfo_ICECandidate.DiscardUnknown(m)
}

var xxx_messageInfo_ICECandidate proto.InternalMessageInfo

func (m *ICECandidate) GetSdpMLineIndex() int32 {
	if m != nil {
		return m.SdpMLineIndex
	}
	return 0
}

func (m *ICECandidate) GetSdpMid() string {
	if m != nil {
		return m.SdpMid
	}
	return ""
}

func (m *ICECandidate) GetSdp() string {
	if m != nil {
		return m.Sdp
	}
	return ""
}

type WebRTCSignaling struct {
	// Types that are valid to be assigned to Body:
	//	*WebRTCSignaling_AdvertiseSelf
	//	*WebRTCSignaling_AdvertiseMaster
	//	*WebRTCSignaling_AdvertisePeer
	//	*WebRTCSignaling_Candidate
	//	*WebRTCSignaling_GotICECandidate
	//	*WebRTCSignaling_RemovedICECandidates
	//	*WebRTCSignaling_Offer
	//	*WebRTCSignaling_Answer
	//	*WebRTCSignaling_NeedOffer
	//	*WebRTCSignaling_NegotinationSuccessful
	//	*WebRTCSignaling_EnableConnection
	//	*WebRTCSignaling_OnRenegotiationNeeded
	//	*WebRTCSignaling_CloseSession
	//	*WebRTCSignaling_NeedDisconnect
	//	*WebRTCSignaling_DTMF
	//	*WebRTCSignaling_CallStats
	//	*WebRTCSignaling_CallNameChanged
	Body                 isWebRTCSignaling_Body `protobuf_oneof:"body"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WebRTCSignaling) Reset()         { *m = WebRTCSignaling{} }
func (m *WebRTCSignaling) String() string { return proto.CompactTextString(m) }
func (*WebRTCSignaling) ProtoMessage()    {}
func (*WebRTCSignaling) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{17}
}
func (m *WebRTCSignaling) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebRTCSignaling.Unmarshal(m, b)
}
func (m *WebRTCSignaling) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebRTCSignaling.Marshal(b, m, deterministic)
}
func (dst *WebRTCSignaling) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebRTCSignaling.Merge(dst, src)
}
func (m *WebRTCSignaling) XXX_Size() int {
	return xxx_messageInfo_WebRTCSignaling.Size(m)
}
func (m *WebRTCSignaling) XXX_DiscardUnknown() {
	xxx_messageInfo_WebRTCSignaling.DiscardUnknown(m)
}

var xxx_messageInfo_WebRTCSignaling proto.InternalMessageInfo

type isWebRTCSignaling_Body interface {
	isWebRTCSignaling_Body()
}

type WebRTCSignaling_AdvertiseSelf struct {
	AdvertiseSelf *AdvertiseSelf `protobuf:"bytes,1,opt,name=advertiseSelf,proto3,oneof"`
}

type WebRTCSignaling_AdvertiseMaster struct {
	AdvertiseMaster *AdvertiseMaster `protobuf:"bytes,2,opt,name=advertiseMaster,proto3,oneof"`
}

type WebRTCSignaling_AdvertisePeer struct {
	AdvertisePeer *AdvertisePeer `protobuf:"bytes,3,opt,name=advertisePeer,proto3,oneof"`
}

type WebRTCSignaling_Candidate struct {
	Candidate *Candidate `protobuf:"bytes,4,opt,name=candidate,proto3,oneof"`
}

type WebRTCSignaling_GotICECandidate struct {
	GotICECandidate *GotICECandidate `protobuf:"bytes,5,opt,name=gotICECandidate,proto3,oneof"`
}

type WebRTCSignaling_RemovedICECandidates struct {
	RemovedICECandidates *RemovedICECandidates `protobuf:"bytes,6,opt,name=removedICECandidates,proto3,oneof"`
}

type WebRTCSignaling_Offer struct {
	Offer *Offer `protobuf:"bytes,7,opt,name=offer,proto3,oneof"`
}

type WebRTCSignaling_Answer struct {
	Answer *Answer `protobuf:"bytes,8,opt,name=answer,proto3,oneof"`
}

type WebRTCSignaling_NeedOffer struct {
	NeedOffer *NeedOffer `protobuf:"bytes,9,opt,name=needOffer,proto3,oneof"`
}

type WebRTCSignaling_NegotinationSuccessful struct {
	NegotinationSuccessful *NegotinationSuccessful `protobuf:"bytes,10,opt,name=negotinationSuccessful,proto3,oneof"`
}

type WebRTCSignaling_EnableConnection struct {
	EnableConnection *EnableConnection `protobuf:"bytes,11,opt,name=enableConnection,proto3,oneof"`
}

type WebRTCSignaling_OnRenegotiationNeeded struct {
	OnRenegotiationNeeded *OnRenegotiationNeeded `protobuf:"bytes,12,opt,name=onRenegotiationNeeded,proto3,oneof"`
}

type WebRTCSignaling_CloseSession struct {
	CloseSession *CloseSession `protobuf:"bytes,13,opt,name=closeSession,proto3,oneof"`
}

type WebRTCSignaling_NeedDisconnect struct {
	NeedDisconnect *NeedDisconnect `protobuf:"bytes,14,opt,name=needDisconnect,proto3,oneof"`
}

type WebRTCSignaling_DTMF struct {
	DTMF *DTMF `protobuf:"bytes,15,opt,name=dTMF,proto3,oneof"`
}

type WebRTCSignaling_CallStats struct {
	CallStats *CallStats `protobuf:"bytes,16,opt,name=callStats,proto3,oneof"`
}

type WebRTCSignaling_CallNameChanged struct {
	CallNameChanged *CallNameChanged `protobuf:"bytes,17,opt,name=callNameChanged,proto3,oneof"`
}

func (*WebRTCSignaling_AdvertiseSelf) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_AdvertiseMaster) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_AdvertisePeer) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_Candidate) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_GotICECandidate) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_RemovedICECandidates) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_Offer) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_Answer) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_NeedOffer) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_NegotinationSuccessful) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_EnableConnection) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_OnRenegotiationNeeded) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_CloseSession) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_NeedDisconnect) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_DTMF) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_CallStats) isWebRTCSignaling_Body() {}

func (*WebRTCSignaling_CallNameChanged) isWebRTCSignaling_Body() {}

func (m *WebRTCSignaling) GetBody() isWebRTCSignaling_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *WebRTCSignaling) GetAdvertiseSelf() *AdvertiseSelf {
	if x, ok := m.GetBody().(*WebRTCSignaling_AdvertiseSelf); ok {
		return x.AdvertiseSelf
	}
	return nil
}

func (m *WebRTCSignaling) GetAdvertiseMaster() *AdvertiseMaster {
	if x, ok := m.GetBody().(*WebRTCSignaling_AdvertiseMaster); ok {
		return x.AdvertiseMaster
	}
	return nil
}

func (m *WebRTCSignaling) GetAdvertisePeer() *AdvertisePeer {
	if x, ok := m.GetBody().(*WebRTCSignaling_AdvertisePeer); ok {
		return x.AdvertisePeer
	}
	return nil
}

func (m *WebRTCSignaling) GetCandidate() *Candidate {
	if x, ok := m.GetBody().(*WebRTCSignaling_Candidate); ok {
		return x.Candidate
	}
	return nil
}

func (m *WebRTCSignaling) GetGotICECandidate() *GotICECandidate {
	if x, ok := m.GetBody().(*WebRTCSignaling_GotICECandidate); ok {
		return x.GotICECandidate
	}
	return nil
}

func (m *WebRTCSignaling) GetRemovedICECandidates() *RemovedICECandidates {
	if x, ok := m.GetBody().(*WebRTCSignaling_RemovedICECandidates); ok {
		return x.RemovedICECandidates
	}
	return nil
}

func (m *WebRTCSignaling) GetOffer() *Offer {
	if x, ok := m.GetBody().(*WebRTCSignaling_Offer); ok {
		return x.Offer
	}
	return nil
}

func (m *WebRTCSignaling) GetAnswer() *Answer {
	if x, ok := m.GetBody().(*WebRTCSignaling_Answer); ok {
		return x.Answer
	}
	return nil
}

func (m *WebRTCSignaling) GetNeedOffer() *NeedOffer {
	if x, ok := m.GetBody().(*WebRTCSignaling_NeedOffer); ok {
		return x.NeedOffer
	}
	return nil
}

func (m *WebRTCSignaling) GetNegotinationSuccessful() *NegotinationSuccessful {
	if x, ok := m.GetBody().(*WebRTCSignaling_NegotinationSuccessful); ok {
		return x.NegotinationSuccessful
	}
	return nil
}

func (m *WebRTCSignaling) GetEnableConnection() *EnableConnection {
	if x, ok := m.GetBody().(*WebRTCSignaling_EnableConnection); ok {
		return x.EnableConnection
	}
	return nil
}

func (m *WebRTCSignaling) GetOnRenegotiationNeeded() *OnRenegotiationNeeded {
	if x, ok := m.GetBody().(*WebRTCSignaling_OnRenegotiationNeeded); ok {
		return x.OnRenegotiationNeeded
	}
	return nil
}

func (m *WebRTCSignaling) GetCloseSession() *CloseSession {
	if x, ok := m.GetBody().(*WebRTCSignaling_CloseSession); ok {
		return x.CloseSession
	}
	return nil
}

func (m *WebRTCSignaling) GetNeedDisconnect() *NeedDisconnect {
	if x, ok := m.GetBody().(*WebRTCSignaling_NeedDisconnect); ok {
		return x.NeedDisconnect
	}
	return nil
}

func (m *WebRTCSignaling) GetDTMF() *DTMF {
	if x, ok := m.GetBody().(*WebRTCSignaling_DTMF); ok {
		return x.DTMF
	}
	return nil
}

func (m *WebRTCSignaling) GetCallStats() *CallStats {
	if x, ok := m.GetBody().(*WebRTCSignaling_CallStats); ok {
		return x.CallStats
	}
	return nil
}

func (m *WebRTCSignaling) GetCallNameChanged() *CallNameChanged {
	if x, ok := m.GetBody().(*WebRTCSignaling_CallNameChanged); ok {
		return x.CallNameChanged
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*WebRTCSignaling) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _WebRTCSignaling_OneofMarshaler, _WebRTCSignaling_OneofUnmarshaler, _WebRTCSignaling_OneofSizer, []interface{}{
		(*WebRTCSignaling_AdvertiseSelf)(nil),
		(*WebRTCSignaling_AdvertiseMaster)(nil),
		(*WebRTCSignaling_AdvertisePeer)(nil),
		(*WebRTCSignaling_Candidate)(nil),
		(*WebRTCSignaling_GotICECandidate)(nil),
		(*WebRTCSignaling_RemovedICECandidates)(nil),
		(*WebRTCSignaling_Offer)(nil),
		(*WebRTCSignaling_Answer)(nil),
		(*WebRTCSignaling_NeedOffer)(nil),
		(*WebRTCSignaling_NegotinationSuccessful)(nil),
		(*WebRTCSignaling_EnableConnection)(nil),
		(*WebRTCSignaling_OnRenegotiationNeeded)(nil),
		(*WebRTCSignaling_CloseSession)(nil),
		(*WebRTCSignaling_NeedDisconnect)(nil),
		(*WebRTCSignaling_DTMF)(nil),
		(*WebRTCSignaling_CallStats)(nil),
		(*WebRTCSignaling_CallNameChanged)(nil),
	}
}

func _WebRTCSignaling_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*WebRTCSignaling)
	// body
	switch x := m.Body.(type) {
	case *WebRTCSignaling_AdvertiseSelf:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdvertiseSelf); err != nil {
			return err
		}
	case *WebRTCSignaling_AdvertiseMaster:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdvertiseMaster); err != nil {
			return err
		}
	case *WebRTCSignaling_AdvertisePeer:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AdvertisePeer); err != nil {
			return err
		}
	case *WebRTCSignaling_Candidate:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Candidate); err != nil {
			return err
		}
	case *WebRTCSignaling_GotICECandidate:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GotICECandidate); err != nil {
			return err
		}
	case *WebRTCSignaling_RemovedICECandidates:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RemovedICECandidates); err != nil {
			return err
		}
	case *WebRTCSignaling_Offer:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Offer); err != nil {
			return err
		}
	case *WebRTCSignaling_Answer:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Answer); err != nil {
			return err
		}
	case *WebRTCSignaling_NeedOffer:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NeedOffer); err != nil {
			return err
		}
	case *WebRTCSignaling_NegotinationSuccessful:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NegotinationSuccessful); err != nil {
			return err
		}
	case *WebRTCSignaling_EnableConnection:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EnableConnection); err != nil {
			return err
		}
	case *WebRTCSignaling_OnRenegotiationNeeded:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OnRenegotiationNeeded); err != nil {
			return err
		}
	case *WebRTCSignaling_CloseSession:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CloseSession); err != nil {
			return err
		}
	case *WebRTCSignaling_NeedDisconnect:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NeedDisconnect); err != nil {
			return err
		}
	case *WebRTCSignaling_DTMF:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DTMF); err != nil {
			return err
		}
	case *WebRTCSignaling_CallStats:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CallStats); err != nil {
			return err
		}
	case *WebRTCSignaling_CallNameChanged:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CallNameChanged); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("WebRTCSignaling.Body has unexpected type %T", x)
	}
	return nil
}

func _WebRTCSignaling_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*WebRTCSignaling)
	switch tag {
	case 1: // body.advertiseSelf
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdvertiseSelf)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_AdvertiseSelf{msg}
		return true, err
	case 2: // body.advertiseMaster
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdvertiseMaster)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_AdvertiseMaster{msg}
		return true, err
	case 3: // body.advertisePeer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdvertisePeer)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_AdvertisePeer{msg}
		return true, err
	case 4: // body.candidate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Candidate)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_Candidate{msg}
		return true, err
	case 5: // body.gotICECandidate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GotICECandidate)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_GotICECandidate{msg}
		return true, err
	case 6: // body.removedICECandidates
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemovedICECandidates)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_RemovedICECandidates{msg}
		return true, err
	case 7: // body.offer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Offer)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_Offer{msg}
		return true, err
	case 8: // body.answer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Answer)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_Answer{msg}
		return true, err
	case 9: // body.needOffer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NeedOffer)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_NeedOffer{msg}
		return true, err
	case 10: // body.negotinationSuccessful
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NegotinationSuccessful)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_NegotinationSuccessful{msg}
		return true, err
	case 11: // body.enableConnection
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EnableConnection)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_EnableConnection{msg}
		return true, err
	case 12: // body.onRenegotiationNeeded
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OnRenegotiationNeeded)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_OnRenegotiationNeeded{msg}
		return true, err
	case 13: // body.closeSession
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CloseSession)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_CloseSession{msg}
		return true, err
	case 14: // body.needDisconnect
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NeedDisconnect)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_NeedDisconnect{msg}
		return true, err
	case 15: // body.dTMF
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DTMF)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_DTMF{msg}
		return true, err
	case 16: // body.callStats
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CallStats)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_CallStats{msg}
		return true, err
	case 17: // body.callNameChanged
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CallNameChanged)
		err := b.DecodeMessage(msg)
		m.Body = &WebRTCSignaling_CallNameChanged{msg}
		return true, err
	default:
		return false, nil
	}
}

func _WebRTCSignaling_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*WebRTCSignaling)
	// body
	switch x := m.Body.(type) {
	case *WebRTCSignaling_AdvertiseSelf:
		s := proto.Size(x.AdvertiseSelf)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_AdvertiseMaster:
		s := proto.Size(x.AdvertiseMaster)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_AdvertisePeer:
		s := proto.Size(x.AdvertisePeer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_Candidate:
		s := proto.Size(x.Candidate)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_GotICECandidate:
		s := proto.Size(x.GotICECandidate)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_RemovedICECandidates:
		s := proto.Size(x.RemovedICECandidates)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_Offer:
		s := proto.Size(x.Offer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_Answer:
		s := proto.Size(x.Answer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_NeedOffer:
		s := proto.Size(x.NeedOffer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_NegotinationSuccessful:
		s := proto.Size(x.NegotinationSuccessful)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_EnableConnection:
		s := proto.Size(x.EnableConnection)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_OnRenegotiationNeeded:
		s := proto.Size(x.OnRenegotiationNeeded)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_CloseSession:
		s := proto.Size(x.CloseSession)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_NeedDisconnect:
		s := proto.Size(x.NeedDisconnect)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_DTMF:
		s := proto.Size(x.DTMF)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_CallStats:
		s := proto.Size(x.CallStats)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WebRTCSignaling_CallNameChanged:
		s := proto.Size(x.CallNameChanged)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Advertizing self to a master mode
type AdvertiseSelf struct {
	// / Optional peer Settings
	PeerSettings         *PeerSettings `protobuf:"bytes,1,opt,name=peer_settings,json=peerSettings,proto3" json:"peer_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AdvertiseSelf) Reset()         { *m = AdvertiseSelf{} }
func (m *AdvertiseSelf) String() string { return proto.CompactTextString(m) }
func (*AdvertiseSelf) ProtoMessage()    {}
func (*AdvertiseSelf) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{18}
}
func (m *AdvertiseSelf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdvertiseSelf.Unmarshal(m, b)
}
func (m *AdvertiseSelf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdvertiseSelf.Marshal(b, m, deterministic)
}
func (dst *AdvertiseSelf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdvertiseSelf.Merge(dst, src)
}
func (m *AdvertiseSelf) XXX_Size() int {
	return xxx_messageInfo_AdvertiseSelf.Size(m)
}
func (m *AdvertiseSelf) XXX_DiscardUnknown() {
	xxx_messageInfo_AdvertiseSelf.DiscardUnknown(m)
}

var xxx_messageInfo_AdvertiseSelf proto.InternalMessageInfo

func (m *AdvertiseSelf) GetPeerSettings() *PeerSettings {
	if m != nil {
		return m.PeerSettings
	}
	return nil
}

// Sent by master
type AdvertiseMaster struct {
	// / a list of ICE servers
	Server []*ICEServer `protobuf:"bytes,1,rep,name=server,proto3" json:"server,omitempty"`
	// / a verison of the call signaling
	CallApiVersion       *wrappers.Int32Value  `protobuf:"bytes,2,opt,name=call_api_version,json=callApiVersion,proto3" json:"call_api_version,omitempty"`
	CallName             *wrappers.StringValue `protobuf:"bytes,3,opt,name=call_name,json=callName,proto3" json:"call_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *AdvertiseMaster) Reset()         { *m = AdvertiseMaster{} }
func (m *AdvertiseMaster) String() string { return proto.CompactTextString(m) }
func (*AdvertiseMaster) ProtoMessage()    {}
func (*AdvertiseMaster) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{19}
}
func (m *AdvertiseMaster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdvertiseMaster.Unmarshal(m, b)
}
func (m *AdvertiseMaster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdvertiseMaster.Marshal(b, m, deterministic)
}
func (dst *AdvertiseMaster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdvertiseMaster.Merge(dst, src)
}
func (m *AdvertiseMaster) XXX_Size() int {
	return xxx_messageInfo_AdvertiseMaster.Size(m)
}
func (m *AdvertiseMaster) XXX_DiscardUnknown() {
	xxx_messageInfo_AdvertiseMaster.DiscardUnknown(m)
}

var xxx_messageInfo_AdvertiseMaster proto.InternalMessageInfo

func (m *AdvertiseMaster) GetServer() []*ICEServer {
	if m != nil {
		return m.Server
	}
	return nil
}

func (m *AdvertiseMaster) GetCallApiVersion() *wrappers.Int32Value {
	if m != nil {
		return m.CallApiVersion
	}
	return nil
}

func (m *AdvertiseMaster) GetCallName() *wrappers.StringValue {
	if m != nil {
		return m.CallName
	}
	return nil
}

// Peer advertisement
type AdvertisePeer struct {
	// / device id of the peer
	DeviceId int64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// / settings for the peer
	PeerSettings *PeerSettings `protobuf:"bytes,2,opt,name=peer_settings,json=peerSettings,proto3" json:"peer_settings,omitempty"`
	// / ice servers for the peer
	IceServers           []*ICEServer `protobuf:"bytes,3,rep,name=ice_servers,json=iceServers,proto3" json:"ice_servers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AdvertisePeer) Reset()         { *m = AdvertisePeer{} }
func (m *AdvertisePeer) String() string { return proto.CompactTextString(m) }
func (*AdvertisePeer) ProtoMessage()    {}
func (*AdvertisePeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{20}
}
func (m *AdvertisePeer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdvertisePeer.Unmarshal(m, b)
}
func (m *AdvertisePeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdvertisePeer.Marshal(b, m, deterministic)
}
func (dst *AdvertisePeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdvertisePeer.Merge(dst, src)
}
func (m *AdvertisePeer) XXX_Size() int {
	return xxx_messageInfo_AdvertisePeer.Size(m)
}
func (m *AdvertisePeer) XXX_DiscardUnknown() {
	xxx_messageInfo_AdvertisePeer.DiscardUnknown(m)
}

var xxx_messageInfo_AdvertisePeer proto.InternalMessageInfo

func (m *AdvertisePeer) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *AdvertisePeer) GetPeerSettings() *PeerSettings {
	if m != nil {
		return m.PeerSettings
	}
	return nil
}

func (m *AdvertisePeer) GetIceServers() []*ICEServer {
	if m != nil {
		return m.IceServers
	}
	return nil
}

// Candidate signal
type Candidate struct {
	// / Session Id of candidate
	SessionId int64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// / Index of candidate
	Index int32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	// / Id of candidate
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// / SDP of candidate
	Sdp                  string   `protobuf:"bytes,4,opt,name=sdp,proto3" json:"sdp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candidate) Reset()         { *m = Candidate{} }
func (m *Candidate) String() string { return proto.CompactTextString(m) }
func (*Candidate) ProtoMessage()    {}
func (*Candidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{21}
}
func (m *Candidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candidate.Unmarshal(m, b)
}
func (m *Candidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candidate.Marshal(b, m, deterministic)
}
func (dst *Candidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candidate.Merge(dst, src)
}
func (m *Candidate) XXX_Size() int {
	return xxx_messageInfo_Candidate.Size(m)
}
func (m *Candidate) XXX_DiscardUnknown() {
	xxx_messageInfo_Candidate.DiscardUnknown(m)
}

var xxx_messageInfo_Candidate proto.InternalMessageInfo

func (m *Candidate) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *Candidate) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Candidate) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Candidate) GetSdp() string {
	if m != nil {
		return m.Sdp
	}
	return ""
}

// WebRTC IceCandidate add signal.
// Used to let the other party know about new ICE candidate, usually from onIceCandidate callback of WebRTC
type GotICECandidate struct {
	SessionId            int64         `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Candidate            *ICECandidate `protobuf:"bytes,2,opt,name=candidate,proto3" json:"candidate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GotICECandidate) Reset()         { *m = GotICECandidate{} }
func (m *GotICECandidate) String() string { return proto.CompactTextString(m) }
func (*GotICECandidate) ProtoMessage()    {}
func (*GotICECandidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{22}
}
func (m *GotICECandidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GotICECandidate.Unmarshal(m, b)
}
func (m *GotICECandidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GotICECandidate.Marshal(b, m, deterministic)
}
func (dst *GotICECandidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GotICECandidate.Merge(dst, src)
}
func (m *GotICECandidate) XXX_Size() int {
	return xxx_messageInfo_GotICECandidate.Size(m)
}
func (m *GotICECandidate) XXX_DiscardUnknown() {
	xxx_messageInfo_GotICECandidate.DiscardUnknown(m)
}

var xxx_messageInfo_GotICECandidate proto.InternalMessageInfo

func (m *GotICECandidate) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *GotICECandidate) GetCandidate() *ICECandidate {
	if m != nil {
		return m.Candidate
	}
	return nil
}

// WebRTC IceCandidate remove signal
// Used to let the other party know about ICE candidate list change, usually from onIceCandidatesRemoved callback
type RemovedICECandidates struct {
	SessionId            int64           `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Candidate            []*ICECandidate `protobuf:"bytes,2,rep,name=candidate,proto3" json:"candidate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RemovedICECandidates) Reset()         { *m = RemovedICECandidates{} }
func (m *RemovedICECandidates) String() string { return proto.CompactTextString(m) }
func (*RemovedICECandidates) ProtoMessage()    {}
func (*RemovedICECandidates) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{23}
}
func (m *RemovedICECandidates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovedICECandidates.Unmarshal(m, b)
}
func (m *RemovedICECandidates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovedICECandidates.Marshal(b, m, deterministic)
}
func (dst *RemovedICECandidates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovedICECandidates.Merge(dst, src)
}
func (m *RemovedICECandidates) XXX_Size() int {
	return xxx_messageInfo_RemovedICECandidates.Size(m)
}
func (m *RemovedICECandidates) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovedICECandidates.DiscardUnknown(m)
}

var xxx_messageInfo_RemovedICECandidates proto.InternalMessageInfo

func (m *RemovedICECandidates) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *RemovedICECandidates) GetCandidate() []*ICECandidate {
	if m != nil {
		return m.Candidate
	}
	return nil
}

// Offer signal
type Offer struct {
	// / Session Id of offer
	SessionId int64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// / Offer SDP
	Sdp string `protobuf:"bytes,2,opt,name=sdp,proto3" json:"sdp,omitempty"`
	// / Deprecated Own Peer settings
	PeerSettings         *PeerSettings `protobuf:"bytes,3,opt,name=peer_settings,json=peerSettings,proto3" json:"peer_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Offer) Reset()         { *m = Offer{} }
func (m *Offer) String() string { return proto.CompactTextString(m) }
func (*Offer) ProtoMessage()    {}
func (*Offer) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{24}
}
func (m *Offer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Offer.Unmarshal(m, b)
}
func (m *Offer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Offer.Marshal(b, m, deterministic)
}
func (dst *Offer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Offer.Merge(dst, src)
}
func (m *Offer) XXX_Size() int {
	return xxx_messageInfo_Offer.Size(m)
}
func (m *Offer) XXX_DiscardUnknown() {
	xxx_messageInfo_Offer.DiscardUnknown(m)
}

var xxx_messageInfo_Offer proto.InternalMessageInfo

func (m *Offer) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *Offer) GetSdp() string {
	if m != nil {
		return m.Sdp
	}
	return ""
}

func (m *Offer) GetPeerSettings() *PeerSettings {
	if m != nil {
		return m.PeerSettings
	}
	return nil
}

// Answer signal
type Answer struct {
	// / Session Id of answer
	SessionId int64 `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// / Answer SDP
	Sdp                  string   `protobuf:"bytes,2,opt,name=sdp,proto3" json:"sdp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Answer) Reset()         { *m = Answer{} }
func (m *Answer) String() string { return proto.CompactTextString(m) }
func (*Answer) ProtoMessage()    {}
func (*Answer) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{25}
}
func (m *Answer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Answer.Unmarshal(m, b)
}
func (m *Answer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Answer.Marshal(b, m, deterministic)
}
func (dst *Answer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Answer.Merge(dst, src)
}
func (m *Answer) XXX_Size() int {
	return xxx_messageInfo_Answer.Size(m)
}
func (m *Answer) XXX_DiscardUnknown() {
	xxx_messageInfo_Answer.DiscardUnknown(m)
}

var xxx_messageInfo_Answer proto.InternalMessageInfo

func (m *Answer) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *Answer) GetSdp() string {
	if m != nil {
		return m.Sdp
	}
	return ""
}

// Notification from master that offer is required
type NeedOffer struct {
	// / Destination Device Id
	Device int64 `protobuf:"varint,1,opt,name=device,proto3" json:"device,omitempty"`
	// / Session Id
	SessionId int64 `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// / Deprecated peer settings
	PeerSettings         *PeerSettings `protobuf:"bytes,3,opt,name=peer_settings,json=peerSettings,proto3" json:"peer_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NeedOffer) Reset()         { *m = NeedOffer{} }
func (m *NeedOffer) String() string { return proto.CompactTextString(m) }
func (*NeedOffer) ProtoMessage()    {}
func (*NeedOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{26}
}
func (m *NeedOffer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NeedOffer.Unmarshal(m, b)
}
func (m *NeedOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NeedOffer.Marshal(b, m, deterministic)
}
func (dst *NeedOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NeedOffer.Merge(dst, src)
}
func (m *NeedOffer) XXX_Size() int {
	return xxx_messageInfo_NeedOffer.Size(m)
}
func (m *NeedOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_NeedOffer.DiscardUnknown(m)
}

var xxx_messageInfo_NeedOffer proto.InternalMessageInfo

func (m *NeedOffer) GetDevice() int64 {
	if m != nil {
		return m.Device
	}
	return 0
}

func (m *NeedOffer) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *NeedOffer) GetPeerSettings() *PeerSettings {
	if m != nil {
		return m.PeerSettings
	}
	return nil
}

// Notification about on negotiation is successful
type NegotinationSuccessful struct {
	// / Device Id
	Device int64 `protobuf:"varint,1,opt,name=device,proto3" json:"device,omitempty"`
	// / Session Id
	SessionId            int64    `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NegotinationSuccessful) Reset()         { *m = NegotinationSuccessful{} }
func (m *NegotinationSuccessful) String() string { return proto.CompactTextString(m) }
func (*NegotinationSuccessful) ProtoMessage()    {}
func (*NegotinationSuccessful) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{27}
}
func (m *NegotinationSuccessful) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NegotinationSuccessful.Unmarshal(m, b)
}
func (m *NegotinationSuccessful) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NegotinationSuccessful.Marshal(b, m, deterministic)
}
func (dst *NegotinationSuccessful) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NegotinationSuccessful.Merge(dst, src)
}
func (m *NegotinationSuccessful) XXX_Size() int {
	return xxx_messageInfo_NegotinationSuccessful.Size(m)
}
func (m *NegotinationSuccessful) XXX_DiscardUnknown() {
	xxx_messageInfo_NegotinationSuccessful.DiscardUnknown(m)
}

var xxx_messageInfo_NegotinationSuccessful proto.InternalMessageInfo

func (m *NegotinationSuccessful) GetDevice() int64 {
	if m != nil {
		return m.Device
	}
	return 0
}

func (m *NegotinationSuccessful) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

// Notification about enabling connection to peer
type EnableConnection struct {
	// / Device Id
	Device int64 `protobuf:"varint,1,opt,name=device,proto3" json:"device,omitempty"`
	// / Session Id
	SessionId            int64    `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableConnection) Reset()         { *m = EnableConnection{} }
func (m *EnableConnection) String() string { return proto.CompactTextString(m) }
func (*EnableConnection) ProtoMessage()    {}
func (*EnableConnection) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{28}
}
func (m *EnableConnection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableConnection.Unmarshal(m, b)
}
func (m *EnableConnection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableConnection.Marshal(b, m, deterministic)
}
func (dst *EnableConnection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableConnection.Merge(dst, src)
}
func (m *EnableConnection) XXX_Size() int {
	return xxx_messageInfo_EnableConnection.Size(m)
}
func (m *EnableConnection) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableConnection.DiscardUnknown(m)
}

var xxx_messageInfo_EnableConnection proto.InternalMessageInfo

func (m *EnableConnection) GetDevice() int64 {
	if m != nil {
		return m.Device
	}
	return 0
}

func (m *EnableConnection) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

// Need renegotiate session. For example when streams are changed.
type OnRenegotiationNeeded struct {
	// / Device Id
	Device int64 `protobuf:"varint,1,opt,name=device,proto3" json:"device,omitempty"`
	// / Session Id
	SessionId            int64    `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnRenegotiationNeeded) Reset()         { *m = OnRenegotiationNeeded{} }
func (m *OnRenegotiationNeeded) String() string { return proto.CompactTextString(m) }
func (*OnRenegotiationNeeded) ProtoMessage()    {}
func (*OnRenegotiationNeeded) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{29}
}
func (m *OnRenegotiationNeeded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnRenegotiationNeeded.Unmarshal(m, b)
}
func (m *OnRenegotiationNeeded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnRenegotiationNeeded.Marshal(b, m, deterministic)
}
func (dst *OnRenegotiationNeeded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnRenegotiationNeeded.Merge(dst, src)
}
func (m *OnRenegotiationNeeded) XXX_Size() int {
	return xxx_messageInfo_OnRenegotiationNeeded.Size(m)
}
func (m *OnRenegotiationNeeded) XXX_DiscardUnknown() {
	xxx_messageInfo_OnRenegotiationNeeded.DiscardUnknown(m)
}

var xxx_messageInfo_OnRenegotiationNeeded proto.InternalMessageInfo

func (m *OnRenegotiationNeeded) GetDevice() int64 {
	if m != nil {
		return m.Device
	}
	return 0
}

func (m *OnRenegotiationNeeded) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

// Close this session and be ready to
type CloseSession struct {
	// / Device Id
	Device int64 `protobuf:"varint,1,opt,name=device,proto3" json:"device,omitempty"`
	// / Session Id for renegotiation
	SessionId            int64    `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseSession) Reset()         { *m = CloseSession{} }
func (m *CloseSession) String() string { return proto.CompactTextString(m) }
func (*CloseSession) ProtoMessage()    {}
func (*CloseSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{30}
}
func (m *CloseSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseSession.Unmarshal(m, b)
}
func (m *CloseSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseSession.Marshal(b, m, deterministic)
}
func (dst *CloseSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseSession.Merge(dst, src)
}
func (m *CloseSession) XXX_Size() int {
	return xxx_messageInfo_CloseSession.Size(m)
}
func (m *CloseSession) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseSession.DiscardUnknown(m)
}

var xxx_messageInfo_CloseSession proto.InternalMessageInfo

func (m *CloseSession) GetDevice() int64 {
	if m != nil {
		return m.Device
	}
	return 0
}

func (m *CloseSession) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

// Notification about requirement about required disconnection from peer
type NeedDisconnect struct {
	Device               int64    `protobuf:"varint,1,opt,name=device,proto3" json:"device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NeedDisconnect) Reset()         { *m = NeedDisconnect{} }
func (m *NeedDisconnect) String() string { return proto.CompactTextString(m) }
func (*NeedDisconnect) ProtoMessage()    {}
func (*NeedDisconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{31}
}
func (m *NeedDisconnect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NeedDisconnect.Unmarshal(m, b)
}
func (m *NeedDisconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NeedDisconnect.Marshal(b, m, deterministic)
}
func (dst *NeedDisconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NeedDisconnect.Merge(dst, src)
}
func (m *NeedDisconnect) XXX_Size() int {
	return xxx_messageInfo_NeedDisconnect.Size(m)
}
func (m *NeedDisconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_NeedDisconnect.DiscardUnknown(m)
}

var xxx_messageInfo_NeedDisconnect proto.InternalMessageInfo

func (m *NeedDisconnect) GetDevice() int64 {
	if m != nil {
		return m.Device
	}
	return 0
}

// Emulates DTMF key press
type DTMF struct {
	Code                 DTMFCode `protobuf:"varint,1,opt,name=code,proto3,enum=dialog.DTMFCode" json:"code,omitempty"`
	Duration             int64    `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DTMF) Reset()         { *m = DTMF{} }
func (m *DTMF) String() string { return proto.CompactTextString(m) }
func (*DTMF) ProtoMessage()    {}
func (*DTMF) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{32}
}
func (m *DTMF) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DTMF.Unmarshal(m, b)
}
func (m *DTMF) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DTMF.Marshal(b, m, deterministic)
}
func (dst *DTMF) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DTMF.Merge(dst, src)
}
func (m *DTMF) XXX_Size() int {
	return xxx_messageInfo_DTMF.Size(m)
}
func (m *DTMF) XXX_DiscardUnknown() {
	xxx_messageInfo_DTMF.DiscardUnknown(m)
}

var xxx_messageInfo_DTMF proto.InternalMessageInfo

func (m *DTMF) GetCode() DTMFCode {
	if m != nil {
		return m.Code
	}
	return DTMFCode_DTMFCODE_UNKNOWN
}

func (m *DTMF) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

// Used to send call statistics to the server
type CallStats struct {
	// / the type of the event
	Type CallStatsType `protobuf:"varint,1,opt,name=type,proto3,enum=dialog.CallStatsType" json:"type,omitempty"`
	// / the value of the event
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallStats) Reset()         { *m = CallStats{} }
func (m *CallStats) String() string { return proto.CompactTextString(m) }
func (*CallStats) ProtoMessage()    {}
func (*CallStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{33}
}
func (m *CallStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallStats.Unmarshal(m, b)
}
func (m *CallStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallStats.Marshal(b, m, deterministic)
}
func (dst *CallStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallStats.Merge(dst, src)
}
func (m *CallStats) XXX_Size() int {
	return xxx_messageInfo_CallStats.Size(m)
}
func (m *CallStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CallStats.DiscardUnknown(m)
}

var xxx_messageInfo_CallStats proto.InternalMessageInfo

func (m *CallStats) GetType() CallStatsType {
	if m != nil {
		return m.Type
	}
	return CallStatsType_CALLSTATSTYPE_UNKNOWN
}

func (m *CallStats) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Used to notify participants about call name changes
type CallNameChanged struct {
	CallName             *wrappers.StringValue `protobuf:"bytes,1,opt,name=call_name,json=callName,proto3" json:"call_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CallNameChanged) Reset()         { *m = CallNameChanged{} }
func (m *CallNameChanged) String() string { return proto.CompactTextString(m) }
func (*CallNameChanged) ProtoMessage()    {}
func (*CallNameChanged) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{34}
}
func (m *CallNameChanged) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallNameChanged.Unmarshal(m, b)
}
func (m *CallNameChanged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallNameChanged.Marshal(b, m, deterministic)
}
func (dst *CallNameChanged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallNameChanged.Merge(dst, src)
}
func (m *CallNameChanged) XXX_Size() int {
	return xxx_messageInfo_CallNameChanged.Size(m)
}
func (m *CallNameChanged) XXX_DiscardUnknown() {
	xxx_messageInfo_CallNameChanged.DiscardUnknown(m)
}

var xxx_messageInfo_CallNameChanged proto.InternalMessageInfo

func (m *CallNameChanged) GetCallName() *wrappers.StringValue {
	if m != nil {
		return m.CallName
	}
	return nil
}

// Active Calls. Used in broadcasting states of current calls.
type ActiveCall struct {
	CallId int64 `protobuf:"varint,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	Peer   *Peer `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	// / Call Members
	CallMembers          []*CallMember `protobuf:"bytes,3,rep,name=call_members,json=callMembers,proto3" json:"call_members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ActiveCall) Reset()         { *m = ActiveCall{} }
func (m *ActiveCall) String() string { return proto.CompactTextString(m) }
func (*ActiveCall) ProtoMessage()    {}
func (*ActiveCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{35}
}
func (m *ActiveCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveCall.Unmarshal(m, b)
}
func (m *ActiveCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveCall.Marshal(b, m, deterministic)
}
func (dst *ActiveCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveCall.Merge(dst, src)
}
func (m *ActiveCall) XXX_Size() int {
	return xxx_messageInfo_ActiveCall.Size(m)
}
func (m *ActiveCall) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveCall.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveCall proto.InternalMessageInfo

func (m *ActiveCall) GetCallId() int64 {
	if m != nil {
		return m.CallId
	}
	return 0
}

func (m *ActiveCall) GetPeer() *Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *ActiveCall) GetCallMembers() []*CallMember {
	if m != nil {
		return m.CallMembers
	}
	return nil
}

// Call Member state holder
type CallMemberStateHolder struct {
	// / State Value
	State CallMemberState `protobuf:"varint,1,opt,name=state,proto3,enum=dialog.CallMemberState" json:"state,omitempty"`
	// / Fallback flag for future compatibility of state
	FallbackIsRinging *wrappers.BoolValue `protobuf:"bytes,2,opt,name=fallback_is_ringing,json=fallbackIsRinging,proto3" json:"fallback_is_ringing,omitempty"`
	// / Fallback flag for future compatibility of state
	FallbackIsConnected *wrappers.BoolValue `protobuf:"bytes,3,opt,name=fallback_is_connected,json=fallbackIsConnected,proto3" json:"fallback_is_connected,omitempty"`
	// / Fallback flag for future compatibility of state
	FallbackIsConnecting *wrappers.BoolValue `protobuf:"bytes,4,opt,name=fallback_is_connecting,json=fallbackIsConnecting,proto3" json:"fallback_is_connecting,omitempty"`
	// / Fallback flag for future compatibility of state
	FallbackIsRingingReached *wrappers.BoolValue `protobuf:"bytes,5,opt,name=fallback_is_ringing_reached,json=fallbackIsRingingReached,proto3" json:"fallback_is_ringing_reached,omitempty"`
	// / Fallback flag for future compatibility of state
	FallbackIsEnded      *wrappers.BoolValue `protobuf:"bytes,6,opt,name=fallback_is_ended,json=fallbackIsEnded,proto3" json:"fallback_is_ended,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CallMemberStateHolder) Reset()         { *m = CallMemberStateHolder{} }
func (m *CallMemberStateHolder) String() string { return proto.CompactTextString(m) }
func (*CallMemberStateHolder) ProtoMessage()    {}
func (*CallMemberStateHolder) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{36}
}
func (m *CallMemberStateHolder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallMemberStateHolder.Unmarshal(m, b)
}
func (m *CallMemberStateHolder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallMemberStateHolder.Marshal(b, m, deterministic)
}
func (dst *CallMemberStateHolder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallMemberStateHolder.Merge(dst, src)
}
func (m *CallMemberStateHolder) XXX_Size() int {
	return xxx_messageInfo_CallMemberStateHolder.Size(m)
}
func (m *CallMemberStateHolder) XXX_DiscardUnknown() {
	xxx_messageInfo_CallMemberStateHolder.DiscardUnknown(m)
}

var xxx_messageInfo_CallMemberStateHolder proto.InternalMessageInfo

func (m *CallMemberStateHolder) GetState() CallMemberState {
	if m != nil {
		return m.State
	}
	return CallMemberState_CALLMEMBERSTATE_UNKNOWN
}

func (m *CallMemberStateHolder) GetFallbackIsRinging() *wrappers.BoolValue {
	if m != nil {
		return m.FallbackIsRinging
	}
	return nil
}

func (m *CallMemberStateHolder) GetFallbackIsConnected() *wrappers.BoolValue {
	if m != nil {
		return m.FallbackIsConnected
	}
	return nil
}

func (m *CallMemberStateHolder) GetFallbackIsConnecting() *wrappers.BoolValue {
	if m != nil {
		return m.FallbackIsConnecting
	}
	return nil
}

func (m *CallMemberStateHolder) GetFallbackIsRingingReached() *wrappers.BoolValue {
	if m != nil {
		return m.FallbackIsRingingReached
	}
	return nil
}

func (m *CallMemberStateHolder) GetFallbackIsEnded() *wrappers.BoolValue {
	if m != nil {
		return m.FallbackIsEnded
	}
	return nil
}

// Call Member
type CallMember struct {
	UserId               int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	State                *CallMemberStateHolder `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CallMember) Reset()         { *m = CallMember{} }
func (m *CallMember) String() string { return proto.CompactTextString(m) }
func (*CallMember) ProtoMessage()    {}
func (*CallMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{37}
}
func (m *CallMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallMember.Unmarshal(m, b)
}
func (m *CallMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallMember.Marshal(b, m, deterministic)
}
func (dst *CallMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallMember.Merge(dst, src)
}
func (m *CallMember) XXX_Size() int {
	return xxx_messageInfo_CallMember.Size(m)
}
func (m *CallMember) XXX_DiscardUnknown() {
	xxx_messageInfo_CallMember.DiscardUnknown(m)
}

var xxx_messageInfo_CallMember proto.InternalMessageInfo

func (m *CallMember) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CallMember) GetState() *CallMemberStateHolder {
	if m != nil {
		return m.State
	}
	return nil
}

// Peer Settings
type PeerSettings struct {
	// / If peer can preconnect before answer
	CanPreConnect *wrappers.BoolValue `protobuf:"bytes,4,opt,name=can_pre_connect,json=canPreConnect,proto3" json:"can_pre_connect,omitempty"`
	// / The peer already has an offer. The server should request offer from this peer.
	SendsOffer *wrappers.BoolValue `protobuf:"bytes,5,opt,name=sends_offer,json=sendsOffer,proto3" json:"sends_offer,omitempty"`
	// / Peer prefers to receive an offer/answer with ICE candidates collected
	WaitForCandidates *wrappers.BoolValue `protobuf:"bytes,6,opt,name=wait_for_candidates,json=waitForCandidates,proto3" json:"wait_for_candidates,omitempty"`
	// / Description of this peer. Version, browser, OS, type, etc.
	ClientInfo           *ClientInfo `protobuf:"bytes,7,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PeerSettings) Reset()         { *m = PeerSettings{} }
func (m *PeerSettings) String() string { return proto.CompactTextString(m) }
func (*PeerSettings) ProtoMessage()    {}
func (*PeerSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_rtc_e896543257242657, []int{38}
}
func (m *PeerSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerSettings.Unmarshal(m, b)
}
func (m *PeerSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerSettings.Marshal(b, m, deterministic)
}
func (dst *PeerSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerSettings.Merge(dst, src)
}
func (m *PeerSettings) XXX_Size() int {
	return xxx_messageInfo_PeerSettings.Size(m)
}
func (m *PeerSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerSettings.DiscardUnknown(m)
}

var xxx_messageInfo_PeerSettings proto.InternalMessageInfo

func (m *PeerSettings) GetCanPreConnect() *wrappers.BoolValue {
	if m != nil {
		return m.CanPreConnect
	}
	return nil
}

func (m *PeerSettings) GetSendsOffer() *wrappers.BoolValue {
	if m != nil {
		return m.SendsOffer
	}
	return nil
}

func (m *PeerSettings) GetWaitForCandidates() *wrappers.BoolValue {
	if m != nil {
		return m.WaitForCandidates
	}
	return nil
}

func (m *PeerSettings) GetClientInfo() *ClientInfo {
	if m != nil {
		return m.ClientInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*UpdateIncomingCallDeprecated)(nil), "dialog.UpdateIncomingCallDeprecated")
	proto.RegisterType((*UpdateIncomingCall)(nil), "dialog.UpdateIncomingCall")
	proto.RegisterType((*UpdateCallHandled)(nil), "dialog.UpdateCallHandled")
	proto.RegisterType((*UpdateCallDisposed)(nil), "dialog.UpdateCallDisposed")
	proto.RegisterType((*RequestGetCallInfo)(nil), "dialog.RequestGetCallInfo")
	proto.RegisterType((*ResponseGetCallInfo)(nil), "dialog.ResponseGetCallInfo")
	proto.RegisterType((*CallLogEntry)(nil), "dialog.CallLogEntry")
	proto.RegisterType((*RequestLoadCalls)(nil), "dialog.RequestLoadCalls")
	proto.RegisterType((*ResponseLoadCalls)(nil), "dialog.ResponseLoadCalls")
	proto.RegisterType((*RequestDoCall)(nil), "dialog.RequestDoCall")
	proto.RegisterType((*ResponseDoCall)(nil), "dialog.ResponseDoCall")
	proto.RegisterType((*RequestJoinCall)(nil), "dialog.RequestJoinCall")
	proto.RegisterType((*RequestRejectCall)(nil), "dialog.RequestRejectCall")
	proto.RegisterType((*RequestDeleteCall)(nil), "dialog.RequestDeleteCall")
	proto.RegisterType((*RequestChangeCallDisplayName)(nil), "dialog.RequestChangeCallDisplayName")
	proto.RegisterType((*ICEServer)(nil), "dialog.ICEServer")
	proto.RegisterType((*ICECandidate)(nil), "dialog.ICECandidate")
	proto.RegisterType((*WebRTCSignaling)(nil), "dialog.WebRTCSignaling")
	proto.RegisterType((*AdvertiseSelf)(nil), "dialog.AdvertiseSelf")
	proto.RegisterType((*AdvertiseMaster)(nil), "dialog.AdvertiseMaster")
	proto.RegisterType((*AdvertisePeer)(nil), "dialog.AdvertisePeer")
	proto.RegisterType((*Candidate)(nil), "dialog.Candidate")
	proto.RegisterType((*GotICECandidate)(nil), "dialog.GotICECandidate")
	proto.RegisterType((*RemovedICECandidates)(nil), "dialog.RemovedICECandidates")
	proto.RegisterType((*Offer)(nil), "dialog.Offer")
	proto.RegisterType((*Answer)(nil), "dialog.Answer")
	proto.RegisterType((*NeedOffer)(nil), "dialog.NeedOffer")
	proto.RegisterType((*NegotinationSuccessful)(nil), "dialog.NegotinationSuccessful")
	proto.RegisterType((*EnableConnection)(nil), "dialog.EnableConnection")
	proto.RegisterType((*OnRenegotiationNeeded)(nil), "dialog.OnRenegotiationNeeded")
	proto.RegisterType((*CloseSession)(nil), "dialog.CloseSession")
	proto.RegisterType((*NeedDisconnect)(nil), "dialog.NeedDisconnect")
	proto.RegisterType((*DTMF)(nil), "dialog.DTMF")
	proto.RegisterType((*CallStats)(nil), "dialog.CallStats")
	proto.RegisterType((*CallNameChanged)(nil), "dialog.CallNameChanged")
	proto.RegisterType((*ActiveCall)(nil), "dialog.ActiveCall")
	proto.RegisterType((*CallMemberStateHolder)(nil), "dialog.CallMemberStateHolder")
	proto.RegisterType((*CallMember)(nil), "dialog.CallMember")
	proto.RegisterType((*PeerSettings)(nil), "dialog.PeerSettings")
	proto.RegisterEnum("dialog.CallDisposedReason", CallDisposedReason_name, CallDisposedReason_value)
	proto.RegisterEnum("dialog.RejectCallReason", RejectCallReason_name, RejectCallReason_value)
	proto.RegisterEnum("dialog.DTMFCode", DTMFCode_name, DTMFCode_value)
	proto.RegisterEnum("dialog.CallStatsType", CallStatsType_name, CallStatsType_value)
	proto.RegisterEnum("dialog.CallMemberState", CallMemberState_name, CallMemberState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WebRTCClient is the client API for WebRTC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebRTCClient interface {
	GetCallInfo(ctx context.Context, in *RequestGetCallInfo, opts ...grpc.CallOption) (*ResponseGetCallInfo, error)
	LoadCalls(ctx context.Context, in *RequestLoadCalls, opts ...grpc.CallOption) (*ResponseLoadCalls, error)
	DoCall(ctx context.Context, in *RequestDoCall, opts ...grpc.CallOption) (*ResponseDoCall, error)
	JoinCall(ctx context.Context, in *RequestJoinCall, opts ...grpc.CallOption) (*ResponseVoid, error)
	RejectCall(ctx context.Context, in *RequestRejectCall, opts ...grpc.CallOption) (*ResponseVoid, error)
	ChangeCallDisplayName(ctx context.Context, in *RequestChangeCallDisplayName, opts ...grpc.CallOption) (*ResponseVoid, error)
	DeleteCall(ctx context.Context, in *RequestDeleteCall, opts ...grpc.CallOption) (*ResponseVoid, error)
}

type webRTCClient struct {
	cc *grpc.ClientConn
}

func NewWebRTCClient(cc *grpc.ClientConn) WebRTCClient {
	return &webRTCClient{cc}
}

func (c *webRTCClient) GetCallInfo(ctx context.Context, in *RequestGetCallInfo, opts ...grpc.CallOption) (*ResponseGetCallInfo, error) {
	out := new(ResponseGetCallInfo)
	err := c.cc.Invoke(ctx, "/dialog.WebRTC/GetCallInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRTCClient) LoadCalls(ctx context.Context, in *RequestLoadCalls, opts ...grpc.CallOption) (*ResponseLoadCalls, error) {
	out := new(ResponseLoadCalls)
	err := c.cc.Invoke(ctx, "/dialog.WebRTC/LoadCalls", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRTCClient) DoCall(ctx context.Context, in *RequestDoCall, opts ...grpc.CallOption) (*ResponseDoCall, error) {
	out := new(ResponseDoCall)
	err := c.cc.Invoke(ctx, "/dialog.WebRTC/DoCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRTCClient) JoinCall(ctx context.Context, in *RequestJoinCall, opts ...grpc.CallOption) (*ResponseVoid, error) {
	out := new(ResponseVoid)
	err := c.cc.Invoke(ctx, "/dialog.WebRTC/JoinCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRTCClient) RejectCall(ctx context.Context, in *RequestRejectCall, opts ...grpc.CallOption) (*ResponseVoid, error) {
	out := new(ResponseVoid)
	err := c.cc.Invoke(ctx, "/dialog.WebRTC/RejectCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRTCClient) ChangeCallDisplayName(ctx context.Context, in *RequestChangeCallDisplayName, opts ...grpc.CallOption) (*ResponseVoid, error) {
	out := new(ResponseVoid)
	err := c.cc.Invoke(ctx, "/dialog.WebRTC/ChangeCallDisplayName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webRTCClient) DeleteCall(ctx context.Context, in *RequestDeleteCall, opts ...grpc.CallOption) (*ResponseVoid, error) {
	out := new(ResponseVoid)
	err := c.cc.Invoke(ctx, "/dialog.WebRTC/DeleteCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebRTCServer is the server API for WebRTC service.
type WebRTCServer interface {
	GetCallInfo(context.Context, *RequestGetCallInfo) (*ResponseGetCallInfo, error)
	LoadCalls(context.Context, *RequestLoadCalls) (*ResponseLoadCalls, error)
	DoCall(context.Context, *RequestDoCall) (*ResponseDoCall, error)
	JoinCall(context.Context, *RequestJoinCall) (*ResponseVoid, error)
	RejectCall(context.Context, *RequestRejectCall) (*ResponseVoid, error)
	ChangeCallDisplayName(context.Context, *RequestChangeCallDisplayName) (*ResponseVoid, error)
	DeleteCall(context.Context, *RequestDeleteCall) (*ResponseVoid, error)
}

func RegisterWebRTCServer(s *grpc.Server, srv WebRTCServer) {
	s.RegisterService(&_WebRTC_serviceDesc, srv)
}

func _WebRTC_GetCallInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetCallInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRTCServer).GetCallInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.WebRTC/GetCallInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRTCServer).GetCallInfo(ctx, req.(*RequestGetCallInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRTC_LoadCalls_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestLoadCalls)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRTCServer).LoadCalls(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.WebRTC/LoadCalls",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRTCServer).LoadCalls(ctx, req.(*RequestLoadCalls))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRTC_DoCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDoCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRTCServer).DoCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.WebRTC/DoCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRTCServer).DoCall(ctx, req.(*RequestDoCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRTC_JoinCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestJoinCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRTCServer).JoinCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.WebRTC/JoinCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRTCServer).JoinCall(ctx, req.(*RequestJoinCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRTC_RejectCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRejectCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRTCServer).RejectCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.WebRTC/RejectCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRTCServer).RejectCall(ctx, req.(*RequestRejectCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRTC_ChangeCallDisplayName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestChangeCallDisplayName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRTCServer).ChangeCallDisplayName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.WebRTC/ChangeCallDisplayName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRTCServer).ChangeCallDisplayName(ctx, req.(*RequestChangeCallDisplayName))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebRTC_DeleteCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDeleteCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebRTCServer).DeleteCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.WebRTC/DeleteCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebRTCServer).DeleteCall(ctx, req.(*RequestDeleteCall))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebRTC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dialog.WebRTC",
	HandlerType: (*WebRTCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCallInfo",
			Handler:    _WebRTC_GetCallInfo_Handler,
		},
		{
			MethodName: "LoadCalls",
			Handler:    _WebRTC_LoadCalls_Handler,
		},
		{
			MethodName: "DoCall",
			Handler:    _WebRTC_DoCall_Handler,
		},
		{
			MethodName: "JoinCall",
			Handler:    _WebRTC_JoinCall_Handler,
		},
		{
			MethodName: "RejectCall",
			Handler:    _WebRTC_RejectCall_Handler,
		},
		{
			MethodName: "ChangeCallDisplayName",
			Handler:    _WebRTC_ChangeCallDisplayName_Handler,
		},
		{
			MethodName: "DeleteCall",
			Handler:    _WebRTC_DeleteCall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "web_rtc.proto",
}

func init() { proto.RegisterFile("web_rtc.proto", fileDescriptor_web_rtc_e896543257242657) }

var fileDescriptor_web_rtc_e896543257242657 = []byte{
	// 2940 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0x4d, 0x70, 0x1c, 0x57,
	0x11, 0xd6, 0xec, 0x9f, 0x76, 0x5b, 0xbb, 0xd2, 0xe8, 0x59, 0xb2, 0x56, 0x3f, 0xb6, 0x95, 0x71,
	0x9c, 0x38, 0x22, 0x48, 0x8e, 0x02, 0xae, 0xc4, 0x04, 0x8c, 0xb4, 0x3b, 0xd2, 0x8e, 0x23, 0xed,
	0x8a, 0xd9, 0x95, 0x1d, 0xa7, 0x0a, 0xa6, 0x46, 0x33, 0x6f, 0xd7, 0x13, 0x66, 0x67, 0x96, 0x99,
	0x59, 0x39, 0x2e, 0x4e, 0x50, 0x45, 0x51, 0x15, 0xa8, 0xa2, 0x0a, 0x0e, 0xdc, 0x28, 0x0a, 0x6e,
	0x70, 0xa2, 0x38, 0x70, 0x04, 0x6e, 0x40, 0x71, 0xe3, 0xca, 0x29, 0xc5, 0x29, 0x27, 0x2e, 0xdc,
	0xa9, 0xf7, 0xe6, 0xff, 0x47, 0x5e, 0x6d, 0x12, 0x57, 0x4e, 0xd2, 0xbe, 0xaf, 0xfb, 0xeb, 0x7e,
	0x3d, 0xfd, 0xba, 0xfb, 0xcd, 0x40, 0xed, 0x29, 0x3e, 0x93, 0x2c, 0x47, 0xd9, 0x1e, 0x59, 0xa6,
	0x63, 0xa2, 0x92, 0xaa, 0xc9, 0xba, 0x39, 0x58, 0xbb, 0x3e, 0x30, 0xcd, 0x81, 0x8e, 0x77, 0xe8,
	0xea, 0xd9, 0xb8, 0xbf, 0xf3, 0xd4, 0x92, 0x47, 0x23, 0x6c, 0xd9, 0xae, 0xdc, 0xda, 0x86, 0x87,
	0xcb, 0x23, 0x6d, 0x47, 0x36, 0x0c, 0xd3, 0x91, 0x1d, 0xcd, 0x34, 0x7c, 0x74, 0x51, 0xc5, 0x7d,
	0xcd, 0xd0, 0xa2, 0x4b, 0x57, 0x86, 0x9a, 0xad, 0x60, 0x5d, 0x97, 0x0d, 0x6c, 0x8e, 0xfd, 0xc5,
	0xb9, 0x11, 0x0e, 0x29, 0x17, 0x55, 0x7c, 0xae, 0x29, 0x58, 0xd2, 0x8c, 0xbe, 0xe9, 0x2d, 0x2d,
	0xdb, 0x8a, 0xac, 0xcb, 0xa3, 0xb3, 0x1d, 0xef, 0xaf, 0xbb, 0xcc, 0xfd, 0x92, 0x81, 0x8d, 0xd3,
	0x91, 0x2a, 0x3b, 0x58, 0x30, 0x14, 0x73, 0xa8, 0x19, 0x83, 0x86, 0xac, 0xeb, 0x4d, 0x3c, 0xb2,
	0xb0, 0x22, 0x3b, 0x58, 0x45, 0xaf, 0xc0, 0xac, 0x22, 0xeb, 0xba, 0xa4, 0xa9, 0x75, 0x66, 0x93,
	0xb9, 0x9d, 0xdf, 0xaf, 0x7d, 0xf4, 0xc9, 0x9d, 0x0a, 0xcc, 0x9e, 0x6b, 0xb6, 0x76, 0xa6, 0x63,
	0xb1, 0x44, 0x50, 0x41, 0x45, 0x1d, 0xa8, 0xc9, 0x8e, 0x83, 0x87, 0x23, 0x47, 0xd2, 0x0c, 0x15,
	0x7f, 0x58, 0xcf, 0x6d, 0x32, 0xb7, 0xe7, 0x76, 0xd7, 0xb7, 0xdd, 0xdd, 0x6d, 0xfb, 0xbb, 0xdf,
	0x16, 0x0c, 0xe7, 0xcd, 0xdd, 0x87, 0xb2, 0x3e, 0xc6, 0x49, 0xaa, 0xaa, 0x47, 0x20, 0x10, 0x7d,
	0xee, 0x67, 0x79, 0x40, 0x69, 0xcf, 0x2e, 0xed, 0xcf, 0x0e, 0x54, 0xf1, 0x39, 0x36, 0x1c, 0xe9,
	0x6c, 0x6c, 0x13, 0x61, 0xe2, 0x4e, 0x25, 0x29, 0x0c, 0x54, 0x64, 0x7f, 0x6c, 0x0b, 0x2a, 0xda,
	0x84, 0x02, 0x09, 0x61, 0x3d, 0x4f, 0xfd, 0xae, 0x6e, 0xbb, 0x4f, 0x6f, 0xfb, 0x04, 0x63, 0x4b,
	0xa4, 0x08, 0x3a, 0x86, 0xaa, 0xaa, 0xd9, 0x23, 0x5d, 0x7e, 0x26, 0x19, 0xf2, 0x10, 0xd7, 0x0b,
	0x54, 0x72, 0x23, 0xb5, 0xc3, 0xae, 0x63, 0x69, 0xc6, 0xc0, 0xdd, 0x62, 0xf5, 0xa3, 0x4f, 0xee,
	0x94, 0xa1, 0xf4, 0x44, 0x53, 0x55, 0x6c, 0x88, 0x73, 0x9e, 0x7e, 0x5b, 0x1e, 0xe2, 0x74, 0xc4,
	0x8a, 0x9f, 0x2d, 0x62, 0xe8, 0x6d, 0x28, 0x9b, 0x63, 0x47, 0xa2, 0xbb, 0x28, 0x51, 0xae, 0x05,
	0x7f, 0x17, 0x9d, 0xb1, 0x43, 0x36, 0x92, 0xd4, 0x9f, 0x35, 0xdd, 0x75, 0x74, 0x13, 0x8a, 0xe7,
	0x9a, 0x8a, 0xcd, 0xfa, 0xec, 0x26, 0x73, 0xbb, 0x9c, 0x14, 0x73, 0x31, 0xee, 0xa7, 0x0c, 0x2c,
	0xba, 0x4f, 0x84, 0x3c, 0x89, 0x96, 0x6c, 0xa8, 0xfa, 0x17, 0x99, 0x20, 0x7f, 0x65, 0xfc, 0x04,
	0xa1, 0x29, 0xab, 0xd9, 0x23, 0xd3, 0xfe, 0x02, 0xfd, 0x41, 0xbb, 0x50, 0xb2, 0xb0, 0x6c, 0x9b,
	0x06, 0x4d, 0xa1, 0xf9, 0xdd, 0x35, 0x3f, 0xf8, 0x51, 0xf7, 0x44, 0x2a, 0x21, 0x7a, 0x92, 0xdc,
	0xfb, 0x80, 0x44, 0xfc, 0xbd, 0x31, 0xb6, 0x9d, 0x43, 0xec, 0x10, 0x39, 0xc1, 0xe8, 0x9b, 0x97,
	0xdd, 0xc2, 0xbd, 0x8d, 0x8f, 0xef, 0xaf, 0xc2, 0x8a, 0x36, 0xdc, 0x56, 0xf5, 0xc1, 0xf6, 0xc0,
	0x1a, 0x29, 0xdb, 0x87, 0xd6, 0x48, 0xf1, 0x08, 0xb9, 0x9f, 0xe7, 0xe0, 0x8a, 0x88, 0xed, 0x91,
	0x69, 0xd8, 0x38, 0xca, 0xee, 0x27, 0x3a, 0x73, 0x61, 0xa2, 0xbf, 0x0e, 0xa5, 0x81, 0x65, 0x8e,
	0x47, 0x76, 0x3d, 0xb7, 0x99, 0xbf, 0x3d, 0xb7, 0xbb, 0xe4, 0xcb, 0x1c, 0x92, 0x55, 0x2f, 0x97,
	0x44, 0x4f, 0x06, 0xbd, 0x06, 0xc5, 0xb1, 0x8d, 0x2d, 0xbb, 0x9e, 0xa7, 0xc2, 0x57, 0x7c, 0xe1,
	0x53, 0x1b, 0x5b, 0xbe, 0xac, 0x2b, 0x81, 0x36, 0x13, 0x87, 0x92, 0x9c, 0xa0, 0x4a, 0xec, 0x14,
	0xde, 0x4f, 0x9c, 0xb1, 0xe2, 0xe4, 0x33, 0x16, 0x3b, 0x55, 0xf7, 0xae, 0x7d, 0x7c, 0x7f, 0x0d,
	0xea, 0xe9, 0x98, 0xb8, 0x71, 0xe0, 0x7e, 0x5b, 0x80, 0x2a, 0x89, 0xc4, 0x91, 0x39, 0xe0, 0x0d,
	0xc7, 0x7a, 0x86, 0xae, 0x41, 0xee, 0xa2, 0x30, 0xe7, 0x34, 0x15, 0x6d, 0x41, 0x85, 0x3e, 0x0a,
	0x92, 0x66, 0x34, 0x43, 0x52, 0x52, 0x65, 0x82, 0x37, 0x65, 0x07, 0xa3, 0x77, 0xa0, 0x42, 0x2b,
	0xb5, 0xec, 0x98, 0x7e, 0x19, 0x99, 0x74, 0x00, 0x43, 0x05, 0xa2, 0x6d, 0x61, 0x45, 0x1b, 0x69,
	0xd8, 0x70, 0xbc, 0xd2, 0x32, 0x51, 0x3b, 0x50, 0x40, 0x07, 0x50, 0x56, 0xc7, 0x16, 0xed, 0x1c,
	0xcf, 0xab, 0x23, 0x77, 0xbf, 0x92, 0x99, 0xc8, 0x81, 0x2e, 0xe2, 0xa1, 0x2c, 0x1b, 0xf6, 0x53,
	0x6c, 0x61, 0xd5, 0xab, 0x21, 0x6b, 0x29, 0x9e, 0x7d, 0xd3, 0xd4, 0xb3, 0x69, 0x7c, 0x55, 0x74,
	0x17, 0xca, 0xa4, 0x6b, 0xd9, 0x4f, 0xb0, 0x4a, 0x4b, 0xca, 0x73, 0x69, 0xc4, 0x40, 0x36, 0x55,
	0x62, 0xcb, 0x9f, 0xad, 0xc4, 0xde, 0x85, 0xb2, 0x85, 0x3f, 0xc0, 0x8a, 0x83, 0xd5, 0x7a, 0x65,
	0xb2, 0x1b, 0xbe, 0x2c, 0xf7, 0x1b, 0x06, 0x58, 0xef, 0x18, 0x1d, 0x99, 0xb2, 0x4a, 0x12, 0xc6,
	0x46, 0xef, 0xc2, 0x9c, 0x81, 0x3f, 0x74, 0x24, 0xb3, 0xdf, 0xb7, 0xb1, 0xe3, 0x1d, 0x9f, 0x74,
	0x94, 0xf7, 0x9f, 0x39, 0xd8, 0xce, 0x0c, 0x0f, 0x10, 0xf5, 0x0e, 0xd5, 0x26, 0x05, 0x57, 0xd7,
	0x86, 0x9a, 0x43, 0x73, 0xaa, 0x98, 0x2a, 0xb8, 0x14, 0x9b, 0x70, 0xbe, 0xff, 0xc7, 0xc0, 0xa2,
	0x9f, 0xd7, 0xa1, 0x97, 0x5b, 0x50, 0x24, 0x09, 0x69, 0xd7, 0x99, 0xf8, 0xd1, 0x8d, 0x26, 0xbd,
	0xe8, 0x8a, 0x84, 0x27, 0x37, 0x37, 0xf1, 0xe4, 0x86, 0x25, 0x21, 0x7f, 0x89, 0x92, 0xf0, 0x4e,
	0x3c, 0x54, 0x85, 0x89, 0xa1, 0x8a, 0xc6, 0x66, 0xd2, 0x11, 0xfe, 0x3e, 0xd4, 0xbc, 0x10, 0x34,
	0x4d, 0x3a, 0x12, 0xec, 0xc6, 0x0a, 0xda, 0xa4, 0x43, 0xe3, 0x96, 0xb8, 0x3a, 0xcc, 0x3a, 0xda,
	0x10, 0x9b, 0x63, 0xf7, 0x09, 0xe4, 0x45, 0xff, 0xe7, 0x84, 0xa0, 0xff, 0x98, 0x81, 0x79, 0xdf,
	0x13, 0xcf, 0xfc, 0x4a, 0xa2, 0x5a, 0x07, 0x1d, 0x66, 0x33, 0x6b, 0x04, 0x89, 0x55, 0xbb, 0x75,
	0xa8, 0xf8, 0x93, 0x9a, 0x4a, 0x2b, 0x46, 0x5e, 0x2c, 0xbb, 0x0b, 0x82, 0x3a, 0x29, 0x0c, 0x8f,
	0x60, 0xc1, 0x73, 0xea, 0x81, 0xa9, 0x19, 0xd3, 0xcc, 0x46, 0x13, 0xb6, 0xf8, 0x13, 0x9a, 0x57,
	0xf4, 0x7f, 0x91, 0x1e, 0x88, 0xa9, 0xe6, 0xae, 0x3b, 0x41, 0x17, 0xcc, 0xd1, 0x2e, 0x58, 0xf7,
	0x1f, 0x47, 0xc8, 0x15, 0xef, 0x81, 0x13, 0xbc, 0x79, 0x1c, 0x38, 0xd3, 0xc4, 0x3a, 0x76, 0x7b,
	0xfd, 0xe7, 0xb4, 0xd1, 0x3f, 0x32, 0xb0, 0xe1, 0xfd, 0xdf, 0x78, 0x22, 0x1b, 0x83, 0x60, 0x8e,
	0xf0, 0xcb, 0xc7, 0x65, 0xf7, 0x9c, 0xac, 0x5a, 0xb9, 0xcf, 0x54, 0xb5, 0x26, 0x78, 0xfd, 0x17,
	0x06, 0x2a, 0x42, 0x83, 0xef, 0x62, 0xeb, 0x1c, 0x5b, 0xe8, 0x06, 0xe4, 0xc7, 0x96, 0x4e, 0xdd,
	0x4b, 0x4d, 0xb7, 0x04, 0x21, 0x8d, 0x81, 0x9c, 0xe0, 0x69, 0xfd, 0x52, 0x49, 0x3c, 0x2c, 0x31,
	0xd0, 0x45, 0x0f, 0x00, 0x14, 0x0b, 0xab, 0xd8, 0x70, 0x34, 0x59, 0xf7, 0xba, 0xdb, 0x34, 0x4c,
	0x11, 0x6d, 0xee, 0x0c, 0xaa, 0x42, 0x83, 0x6f, 0xc8, 0x86, 0xaa, 0x91, 0xbe, 0x8a, 0x5e, 0x05,
	0xd6, 0x56, 0x47, 0xd2, 0x50, 0xd2, 0x35, 0x03, 0x7b, 0xd3, 0x18, 0xd9, 0x51, 0x51, 0xac, 0xd9,
	0xea, 0xe8, 0xf8, 0x48, 0x33, 0xb0, 0x3b, 0x62, 0xad, 0xc0, 0x2c, 0x15, 0x0c, 0x0e, 0x53, 0x89,
	0xe0, 0x9a, 0x8a, 0x58, 0xc8, 0xdb, 0xea, 0x88, 0xba, 0x55, 0x11, 0xc9, 0xbf, 0xdc, 0x9f, 0xcb,
	0xb0, 0xf0, 0x08, 0x9f, 0x89, 0xbd, 0x46, 0x57, 0x1b, 0x18, 0xb2, 0xae, 0x19, 0x03, 0xf4, 0x75,
	0xa8, 0xc9, 0xea, 0x39, 0xb6, 0x1c, 0xcd, 0xc6, 0x5d, 0xac, 0xf7, 0xbd, 0x8a, 0xb1, 0xec, 0xa7,
	0xe8, 0x5e, 0x14, 0x6c, 0xcd, 0x88, 0x71, 0x69, 0xd4, 0x80, 0x85, 0x60, 0xe1, 0x58, 0xb6, 0x1d,
	0x6c, 0x79, 0x11, 0x5d, 0x49, 0x11, 0xb8, 0x70, 0x6b, 0x46, 0x4c, 0x6a, 0xc4, 0x7c, 0x38, 0x09,
	0xef, 0x1b, 0x69, 0x1f, 0x08, 0x18, 0xf3, 0x81, 0x0e, 0xea, 0x6f, 0x90, 0x79, 0xc4, 0x8b, 0x9b,
	0x57, 0x57, 0x17, 0xc3, 0x12, 0xef, 0x01, 0xad, 0x19, 0x31, 0x94, 0x22, 0x6e, 0x0f, 0x4c, 0x27,
	0x1a, 0x70, 0x6f, 0x42, 0x08, 0xdc, 0x3e, 0x8c, 0xc3, 0xc4, 0xed, 0x84, 0x06, 0x12, 0x61, 0xc9,
	0xc2, 0x43, 0xf3, 0x1c, 0xab, 0xd1, 0x65, 0xdb, 0x9b, 0x11, 0x36, 0xc2, 0x43, 0x9e, 0x96, 0x69,
	0xcd, 0x88, 0x99, 0xba, 0xe8, 0x16, 0x14, 0xcd, 0x7e, 0x1f, 0x5b, 0xde, 0x84, 0x50, 0x0b, 0x0a,
	0x37, 0x59, 0x6c, 0xcd, 0x88, 0x2e, 0x8a, 0x6e, 0x43, 0xc9, 0x9d, 0x2b, 0xbc, 0x69, 0x60, 0x3e,
	0x08, 0x15, 0x5d, 0x6d, 0xcd, 0x88, 0x1e, 0x4e, 0x82, 0x63, 0x60, 0xac, 0x52, 0x7d, 0xaf, 0xdf,
	0x07, 0xc1, 0x69, 0xfb, 0x00, 0x09, 0x4e, 0x20, 0x85, 0xde, 0x83, 0xab, 0x06, 0x1e, 0x98, 0x8e,
	0x66, 0xd0, 0xf9, 0xa7, 0x3b, 0x56, 0x14, 0x6c, 0xdb, 0xfd, 0xb1, 0x5e, 0x07, 0xaa, 0x7f, 0x3d,
	0xd4, 0xcf, 0x92, 0x6a, 0xcd, 0x88, 0x17, 0xe8, 0xa3, 0x03, 0x60, 0xb1, 0x21, 0x9f, 0xe9, 0xb8,
	0x61, 0x1a, 0x06, 0x56, 0xe8, 0x64, 0x36, 0x47, 0x39, 0x83, 0x92, 0xc8, 0x27, 0xf0, 0xd6, 0x8c,
	0x98, 0xd2, 0x41, 0xa7, 0xb0, 0x6c, 0x1a, 0x22, 0x76, 0xad, 0x50, 0x23, 0x64, 0x2b, 0x58, 0xad,
	0x57, 0x29, 0xd9, 0xb5, 0x20, 0x6a, 0x59, 0x42, 0xad, 0x19, 0x31, 0x5b, 0x1b, 0xdd, 0x83, 0xaa,
	0xa2, 0x9b, 0x24, 0xb3, 0x6d, 0x9b, 0xb8, 0x56, 0xa3, 0x6c, 0xe1, 0xb8, 0x10, 0xc1, 0x5a, 0x33,
	0x62, 0x4c, 0x16, 0x7d, 0x13, 0xe6, 0x49, 0x04, 0x9b, 0x9a, 0xad, 0xb8, 0x7e, 0xd6, 0xe7, 0xa9,
	0xf6, 0xd5, 0x68, 0xb0, 0x43, 0xb4, 0x35, 0x23, 0x26, 0xe4, 0x11, 0x07, 0x05, 0xb5, 0x77, 0x7c,
	0x50, 0x5f, 0x88, 0xdf, 0x41, 0x9a, 0xbd, 0xe3, 0x83, 0xd6, 0x8c, 0x48, 0x31, 0x37, 0xd5, 0x75,
	0xbd, 0xeb, 0xc8, 0x8e, 0x5d, 0x67, 0x93, 0xa9, 0xee, 0x01, 0x6e, 0xaa, 0x7b, 0x3f, 0x48, 0xaa,
	0x93, 0x1f, 0xa4, 0x8a, 0xba, 0x15, 0x5d, 0xad, 0x2f, 0xc6, 0x53, 0xbd, 0x11, 0x87, 0x49, 0xaa,
	0x27, 0x34, 0xf6, 0x4b, 0x50, 0x38, 0x33, 0xd5, 0x67, 0xdc, 0x63, 0xa8, 0xc5, 0x0a, 0x02, 0x6a,
	0x41, 0x8d, 0xcc, 0x0e, 0x92, 0x8d, 0x1d, 0x47, 0x33, 0x06, 0xb6, 0x57, 0x3e, 0x96, 0xa2, 0x37,
	0xa8, 0xae, 0x87, 0xa5, 0xae, 0x8a, 0xa3, 0x08, 0xc8, 0xfd, 0x9b, 0x81, 0x85, 0x44, 0xad, 0x40,
	0x6f, 0x41, 0xc9, 0xa6, 0x35, 0xdd, 0x9b, 0xdc, 0x82, 0xbd, 0x06, 0xc5, 0x3e, 0xd5, 0x7e, 0x5c,
	0x79, 0xd4, 0x03, 0x96, 0xb6, 0x29, 0x79, 0xa4, 0x49, 0xe7, 0xd8, 0xa2, 0x8f, 0x73, 0xfa, 0xcb,
	0xec, 0x3c, 0xe1, 0xd8, 0x1b, 0x69, 0x0f, 0x5d, 0x06, 0xf4, 0xb6, 0x77, 0xf3, 0xa1, 0x9d, 0xe3,
	0x12, 0xf5, 0xde, 0xbd, 0x08, 0x91, 0x40, 0x72, 0x7f, 0x63, 0x22, 0xa1, 0xa3, 0x65, 0x6b, 0x2b,
	0x3a, 0xe8, 0x64, 0xf6, 0xd2, 0x60, 0xee, 0x49, 0x87, 0x39, 0xf7, 0x29, 0xc3, 0x8c, 0xf6, 0x60,
	0x8e, 0x98, 0x74, 0xc3, 0xe4, 0x4f, 0xae, 0x93, 0xe3, 0x0a, 0x9a, 0x82, 0x5d, 0xc4, 0xe6, 0x7e,
	0xc5, 0x40, 0x25, 0xac, 0x82, 0xaf, 0x03, 0xd8, 0xee, 0x19, 0xb8, 0x70, 0x1f, 0x15, 0x4f, 0x40,
	0x50, 0xc9, 0x8c, 0x1f, 0xbe, 0x59, 0x48, 0xcf, 0xf8, 0x14, 0xf3, 0xee, 0x9f, 0xf9, 0xac, 0xfe,
	0x4d, 0xee, 0x9f, 0x37, 0xdc, 0xc6, 0x56, 0xc8, 0xec, 0xef, 0xa4, 0xcf, 0xa9, 0xb0, 0x90, 0x28,
	0xdf, 0xe8, 0x5a, 0xda, 0xcb, 0xa8, 0x5b, 0xbb, 0xd1, 0x16, 0x92, 0x88, 0x6d, 0x94, 0x27, 0xd2,
	0x43, 0x38, 0x0d, 0x96, 0xb2, 0x4a, 0xfb, 0x94, 0xa6, 0xf2, 0x97, 0x31, 0xf5, 0x6b, 0x06, 0x8a,
	0x6e, 0x6d, 0x9e, 0x2e, 0xda, 0x5e, 0xa4, 0x72, 0x17, 0x45, 0x2a, 0x9d, 0x57, 0xf9, 0x4f, 0x7b,
	0x7c, 0x1f, 0x41, 0xc9, 0xed, 0x3d, 0x9f, 0xb3, 0x8b, 0xdc, 0xef, 0x18, 0xa8, 0x04, 0x8d, 0x0a,
	0xdd, 0x82, 0x92, 0x7b, 0x28, 0x2e, 0x98, 0x3e, 0x5d, 0x30, 0xe1, 0x43, 0x6e, 0x82, 0x0f, 0x9f,
	0x5f, 0x14, 0x86, 0x70, 0x35, 0xbb, 0x29, 0xbe, 0x10, 0xc7, 0xb9, 0x01, 0xb0, 0xc9, 0x7e, 0xf9,
	0x62, 0x0c, 0xe9, 0xb0, 0x9c, 0xd9, 0x4b, 0x5f, 0x8c, 0x35, 0x05, 0xaa, 0xd1, 0x5e, 0xfb, 0x62,
	0x8c, 0xdc, 0x85, 0xf9, 0x78, 0x4b, 0x46, 0x2f, 0x27, 0xcc, 0xc4, 0xaf, 0x23, 0x1e, 0xc6, 0xf5,
	0xa1, 0x40, 0x5a, 0x32, 0x7a, 0x13, 0x0a, 0x8a, 0xa9, 0xba, 0xb2, 0xf3, 0xbb, 0x6c, 0xb4, 0x5d,
	0x37, 0x4c, 0x35, 0xd5, 0x4a, 0xa8, 0x30, 0x7a, 0x2d, 0xf2, 0x4a, 0x2a, 0xfb, 0xcd, 0x99, 0x0f,
	0x73, 0x1f, 0x90, 0x22, 0xeb, 0x37, 0xf1, 0xb7, 0xa0, 0xe0, 0x3c, 0x1b, 0xf9, 0xc6, 0x96, 0x53,
	0x2d, 0xbf, 0xf7, 0x6c, 0x94, 0xb6, 0x48, 0x34, 0xe8, 0x5b, 0x6c, 0xd2, 0x8a, 0xb2, 0x4f, 0x98,
	0x8b, 0x71, 0x47, 0xb0, 0x90, 0x18, 0x02, 0xe2, 0xad, 0x8e, 0x99, 0xaa, 0xd5, 0xfd, 0x9e, 0x01,
	0xd8, 0x53, 0x1c, 0xed, 0x1c, 0x4f, 0xf9, 0x75, 0xc2, 0x7d, 0x65, 0x91, 0x4b, 0xbf, 0x83, 0xcd,
	0x7e, 0x5f, 0xd1, 0x84, 0x2a, 0x25, 0x1e, 0xe2, 0xe1, 0x59, 0xd8, 0xcb, 0x50, 0x34, 0x38, 0xc7,
	0x14, 0x4a, 0xaa, 0xcf, 0x29, 0x01, 0x64, 0x73, 0x7f, 0x28, 0xc0, 0x72, 0x28, 0x4a, 0xa2, 0x89,
	0x5b, 0xa6, 0xae, 0x62, 0x0b, 0xbd, 0x03, 0x45, 0x9b, 0xfc, 0xf4, 0xa2, 0xbe, 0x92, 0x26, 0xa6,
	0xd2, 0xa9, 0x98, 0x52, 0x25, 0xf4, 0x18, 0xae, 0xf4, 0x65, 0x5d, 0x3f, 0x93, 0x95, 0xef, 0x4a,
	0x9a, 0x2d, 0x91, 0x40, 0x69, 0xc6, 0xc0, 0xdb, 0xdd, 0x14, 0x2f, 0x10, 0x17, 0x7d, 0x16, 0xc1,
	0x16, 0x5d, 0x0e, 0xf4, 0x6d, 0x58, 0x8e, 0x52, 0x7b, 0xf9, 0x8b, 0x55, 0xaf, 0x6e, 0x4d, 0x41,
	0x7e, 0x25, 0x24, 0x6f, 0xf8, 0x2c, 0x48, 0x82, 0xab, 0x19, 0xf4, 0xc4, 0xf9, 0xc2, 0xb4, 0xfc,
	0x4b, 0x29, 0x7e, 0xe2, 0xff, 0x13, 0x58, 0xcf, 0x08, 0x8d, 0x64, 0x61, 0x59, 0x79, 0x82, 0x55,
	0xef, 0x26, 0x36, 0x85, 0x95, 0x7a, 0x2a, 0x44, 0xa2, 0x4b, 0x85, 0x4e, 0x61, 0x31, 0x6a, 0x09,
	0x1b, 0xea, 0xa7, 0x79, 0x87, 0xbb, 0x10, 0xf2, 0xf3, 0x84, 0x81, 0xfb, 0x10, 0x20, 0x4c, 0x02,
	0x92, 0xe0, 0x63, 0x1b, 0x5b, 0x7e, 0x82, 0xa7, 0xa6, 0x9a, 0x12, 0x41, 0x05, 0x15, 0xed, 0xfb,
	0xf9, 0x94, 0x8f, 0xdf, 0x52, 0x32, 0xb3, 0x2f, 0x3b, 0xab, 0xb8, 0x7f, 0xe6, 0xa0, 0x1a, 0x6d,
	0x47, 0xe8, 0x5b, 0x64, 0xbc, 0x37, 0xa4, 0x91, 0x85, 0xfd, 0x07, 0x35, 0xfd, 0x53, 0xaa, 0x29,
	0xb2, 0x71, 0x62, 0xf9, 0x4d, 0x04, 0x3d, 0x80, 0x39, 0x1b, 0x1b, 0xaa, 0x2d, 0xb9, 0x37, 0xd1,
	0xa9, 0x1f, 0x07, 0x50, 0x6d, 0xb7, 0x5f, 0x3f, 0x86, 0x2b, 0x4f, 0x65, 0xcd, 0x91, 0xfa, 0xa6,
	0x25, 0x29, 0xc9, 0x2b, 0xf2, 0x34, 0xa7, 0x80, 0xb0, 0x1c, 0x98, 0x56, 0x64, 0xce, 0xda, 0x87,
	0x39, 0x45, 0xd7, 0xb0, 0xe1, 0xd0, 0x4f, 0xba, 0xde, 0x85, 0x39, 0x3c, 0xfd, 0x14, 0x12, 0x8c,
	0xbe, 0x99, 0x72, 0x4f, 0x09, 0xa0, 0xad, 0x3f, 0x31, 0x80, 0xd2, 0x9f, 0xa2, 0xd0, 0x75, 0x58,
	0x6b, 0xec, 0x1d, 0x1d, 0x35, 0x85, 0xee, 0x49, 0xa7, 0xcb, 0x37, 0x45, 0x7e, 0xaf, 0xdb, 0x69,
	0x4b, 0xa7, 0xed, 0x77, 0xdb, 0x9d, 0x47, 0x6d, 0x76, 0x06, 0xdd, 0x80, 0xf5, 0x0c, 0x5c, 0xe4,
	0x1f, 0xf0, 0x8d, 0x1e, 0xdf, 0x64, 0x19, 0xb4, 0x0e, 0x2b, 0x19, 0x02, 0xfb, 0xa7, 0xdd, 0xc7,
	0x6c, 0x0e, 0x6d, 0x40, 0x3d, 0x03, 0xe4, 0xdb, 0x4d, 0xbe, 0xc9, 0xe6, 0xd1, 0x2d, 0x78, 0x29,
	0x03, 0xdd, 0x6b, 0x77, 0x1f, 0xf1, 0xa2, 0xd4, 0x13, 0x8e, 0xf9, 0xce, 0x69, 0x8f, 0x2d, 0x6c,
	0x69, 0xc0, 0x26, 0xdf, 0x1e, 0x12, 0x62, 0xd7, 0x07, 0x42, 0x90, 0x72, 0x3a, 0x0b, 0x6d, 0xf2,
	0x8d, 0x23, 0xa1, 0xcd, 0xb3, 0x0c, 0x5a, 0x85, 0xe5, 0x14, 0xea, 0xfa, 0xbb, 0xf5, 0xf7, 0x1c,
	0x94, 0xfd, 0xb6, 0x86, 0x96, 0x80, 0xa5, 0xff, 0x77, 0x9a, 0x7c, 0x84, 0x7b, 0x11, 0x6a, 0xc1,
	0xea, 0xfb, 0xbc, 0xd8, 0x61, 0x19, 0xc4, 0x42, 0x35, 0x58, 0xea, 0xb4, 0x79, 0x36, 0x17, 0x5b,
	0xe9, 0x3d, 0xea, 0xb0, 0x79, 0x84, 0x60, 0x3e, 0x5c, 0x69, 0x89, 0x3c, 0xcf, 0x16, 0x62, 0x54,
	0x07, 0x9d, 0x53, 0x91, 0x2d, 0xc6, 0x97, 0x84, 0x87, 0x3c, 0x5b, 0x8a, 0x71, 0x75, 0x85, 0xf7,
	0xd8, 0xd9, 0x18, 0x57, 0x97, 0x7f, 0xc8, 0xb7, 0xd9, 0x72, 0x6c, 0x8d, 0x17, 0x0e, 0x5b, 0x3d,
	0xb6, 0x12, 0x23, 0x6b, 0x93, 0xbd, 0x03, 0x5a, 0x86, 0xc5, 0x60, 0x69, 0xaf, 0xdb, 0xe3, 0x45,
	0xa1, 0xfb, 0x2e, 0x3b, 0x17, 0xd3, 0x3e, 0xe9, 0x9c, 0xb6, 0x9b, 0x6c, 0x15, 0xcd, 0x03, 0x84,
	0xa2, 0x6c, 0x2d, 0xf6, 0x7b, 0x9f, 0x9d, 0x8f, 0xfd, 0x6e, 0xb0, 0x0b, 0xb1, 0xdf, 0x4d, 0x96,
	0xdd, 0xfa, 0x41, 0x01, 0x6a, 0xb1, 0xae, 0x4d, 0x02, 0x4f, 0x42, 0xde, 0xed, 0xed, 0xf5, 0xba,
	0xbd, 0xc7, 0x27, 0xd1, 0xa8, 0x7e, 0x19, 0x5e, 0x8b, 0x43, 0xbd, 0x53, 0xb1, 0x2d, 0x75, 0x79,
	0xf1, 0x21, 0x2f, 0x4a, 0x22, 0xf1, 0x48, 0xea, 0x89, 0xc2, 0x09, 0xcd, 0x0a, 0x96, 0x41, 0xaf,
	0xc2, 0xcd, 0xb8, 0xb8, 0xd0, 0xe0, 0xa5, 0x46, 0xa7, 0xdd, 0xe6, 0x1b, 0x3d, 0xa1, 0xd3, 0x96,
	0x0e, 0xf6, 0x84, 0x23, 0xbe, 0xc9, 0xe6, 0xd0, 0x16, 0xbc, 0xf2, 0x5c, 0x41, 0xef, 0x5f, 0x9a,
	0x8e, 0x77, 0xe0, 0xf5, 0xe7, 0xca, 0x36, 0x85, 0xa6, 0xd4, 0xee, 0xf4, 0xfc, 0x25, 0xb6, 0x80,
	0x76, 0xe0, 0x4b, 0x97, 0x63, 0x77, 0xfd, 0x2e, 0xa2, 0xbb, 0xb0, 0x1b, 0x57, 0x38, 0xe1, 0x79,
	0x31, 0xa6, 0x21, 0xf2, 0x7b, 0x3d, 0xde, 0x3f, 0x03, 0xde, 0x36, 0x4a, 0xe8, 0xab, 0xf0, 0xc6,
	0xa5, 0xf4, 0x3a, 0x07, 0x07, 0xa1, 0xda, 0x2c, 0xba, 0x0f, 0x5f, 0x7b, 0xbe, 0x5a, 0x97, 0xef,
	0x49, 0x22, 0x7f, 0xdc, 0xe9, 0xf1, 0x52, 0x93, 0xef, 0x36, 0x44, 0xe1, 0x24, 0x1a, 0xbe, 0x32,
	0xfa, 0x06, 0xdc, 0x9b, 0x4c, 0x70, 0xd4, 0x69, 0xec, 0x1d, 0x65, 0xe9, 0x57, 0xb6, 0xfe, 0xc1,
	0xb8, 0xe3, 0x56, 0xa4, 0xe6, 0xfb, 0x05, 0xe3, 0x98, 0x3f, 0xde, 0xe7, 0x45, 0xc2, 0x1c, 0xcd,
	0x83, 0x0c, 0x50, 0x14, 0xda, 0x87, 0x42, 0xfb, 0x90, 0x65, 0xd0, 0x4d, 0xb8, 0x71, 0x01, 0x28,
	0x89, 0xfc, 0x5e, 0xa3, 0xc5, 0x37, 0xd9, 0x82, 0x5f, 0xd0, 0xa2, 0x42, 0xbe, 0xbf, 0xed, 0x43,
	0x36, 0x87, 0xae, 0xc1, 0xea, 0x05, 0x38, 0x4d, 0x02, 0x2f, 0x47, 0xa3, 0xb0, 0x5b, 0xae, 0x8a,
	0xbb, 0xff, 0x2d, 0x42, 0xc9, 0x7d, 0xa7, 0x8c, 0x0c, 0x98, 0x8b, 0x7e, 0x53, 0x5f, 0x0b, 0x5f,
	0x80, 0x26, 0xbf, 0xe6, 0xaf, 0xad, 0x87, 0x58, 0xea, 0x63, 0x3c, 0xf7, 0xca, 0x0f, 0xff, 0xf5,
	0x9f, 0x5f, 0xe4, 0x36, 0xb9, 0xf5, 0x9d, 0xf3, 0x37, 0x76, 0x06, 0xd6, 0x48, 0xd9, 0x71, 0x0d,
	0xec, 0x44, 0x84, 0xee, 0x31, 0x5b, 0xa8, 0x0f, 0x95, 0xf0, 0x1b, 0x5f, 0x3d, 0x61, 0x2d, 0x40,
	0xd6, 0x56, 0x93, 0xb6, 0x02, 0x88, 0x7b, 0x99, 0x5a, 0xba, 0xce, 0xad, 0x26, 0x2d, 0x05, 0x22,
	0xc4, 0xce, 0xfb, 0x50, 0xf2, 0x3e, 0x6b, 0x2d, 0x27, 0x8c, 0xb8, 0xcb, 0x6b, 0x57, 0x93, 0x16,
	0xdc, 0x75, 0xee, 0x25, 0x4a, 0xbf, 0xce, 0x5d, 0x4d, 0xd2, 0xbb, 0x38, 0xe1, 0xfe, 0x0e, 0x94,
	0x83, 0x4f, 0x55, 0x2b, 0x09, 0x76, 0x1f, 0x58, 0x5b, 0x4a, 0xf2, 0x3f, 0x34, 0x35, 0x95, 0xbb,
	0x49, 0xd9, 0xaf, 0x71, 0xf5, 0x24, 0xbb, 0xaf, 0x47, 0xf8, 0x55, 0x80, 0xc8, 0x07, 0xab, 0xd5,
	0x84, 0x85, 0x10, 0xba, 0xc0, 0xc6, 0x2d, 0x6a, 0xe3, 0x06, 0xb7, 0x96, 0xb4, 0x11, 0x6a, 0x12,
	0x2b, 0x3f, 0x62, 0x60, 0x39, 0xfb, 0x73, 0xd1, 0xcb, 0x09, 0x8b, 0x99, 0x52, 0x17, 0x18, 0xbf,
	0x43, 0x8d, 0x6f, 0x71, 0xb7, 0x92, 0xc6, 0x33, 0x49, 0xbc, 0xdd, 0x46, 0xbe, 0x88, 0x25, 0x77,
	0x1b, 0x42, 0xd3, 0xee, 0x36, 0xd4, 0xbc, 0xc7, 0x6c, 0xed, 0xaf, 0x7e, 0x7c, 0xff, 0x2a, 0x2c,
	0x45, 0xbf, 0x45, 0xd9, 0xd8, 0x22, 0x77, 0x43, 0xfb, 0xac, 0x44, 0x27, 0x99, 0x37, 0xff, 0x1f,
	0x00, 0x00, 0xff, 0xff, 0x27, 0xea, 0xb3, 0x7b, 0xf7, 0x26, 0x00, 0x00,
}
