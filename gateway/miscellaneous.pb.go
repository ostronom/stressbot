// Code generated by protoc-gen-go.
// source: miscellaneous.proto
// DO NOT EDIT!

package dialog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/gogo/protobuf/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RtcpMuxPolicy int32

const (
	RtcpMuxPolicy_RTCPMUXPOLICY_UNKNOWN   RtcpMuxPolicy = 0
	RtcpMuxPolicy_RTCPMUXPOLICY_NEGOTIATE RtcpMuxPolicy = 1
	RtcpMuxPolicy_RTCPMUXPOLICY_REQUIRE   RtcpMuxPolicy = 2
)

var RtcpMuxPolicy_name = map[int32]string{
	0: "RTCPMUXPOLICY_UNKNOWN",
	1: "RTCPMUXPOLICY_NEGOTIATE",
	2: "RTCPMUXPOLICY_REQUIRE",
}
var RtcpMuxPolicy_value = map[string]int32{
	"RTCPMUXPOLICY_UNKNOWN":   0,
	"RTCPMUXPOLICY_NEGOTIATE": 1,
	"RTCPMUXPOLICY_REQUIRE":   2,
}

func (x RtcpMuxPolicy) String() string {
	return proto.EnumName(RtcpMuxPolicy_name, int32(x))
}
func (RtcpMuxPolicy) EnumDescriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

type UpdateOptimization int32

const (
	UpdateOptimization_UPDATEOPTIMIZATION_UNKNOWN           UpdateOptimization = 0
	UpdateOptimization_UPDATEOPTIMIZATION_NONE              UpdateOptimization = 1
	UpdateOptimization_UPDATEOPTIMIZATION_STRIP_ENTITIES    UpdateOptimization = 2
	UpdateOptimization_UPDATEOPTIMIZATION_ENABLE_COMBINED   UpdateOptimization = 3
	UpdateOptimization_UPDATEOPTIMIZATION_FASTER_MESSAGES   UpdateOptimization = 4
	UpdateOptimization_UPDATEOPTIMIZATION_STRIP_COUNTERS    UpdateOptimization = 5
	UpdateOptimization_UPDATEOPTIMIZATION_COMPACT_USERS     UpdateOptimization = 6
	UpdateOptimization_UPDATEOPTIMIZATION_GROUPS_V2         UpdateOptimization = 7
	UpdateOptimization_UPDATEOPTIMIZATION_STRIP_ENTITIES_V2 UpdateOptimization = 8
)

var UpdateOptimization_name = map[int32]string{
	0: "UPDATEOPTIMIZATION_UNKNOWN",
	1: "UPDATEOPTIMIZATION_NONE",
	2: "UPDATEOPTIMIZATION_STRIP_ENTITIES",
	3: "UPDATEOPTIMIZATION_ENABLE_COMBINED",
	4: "UPDATEOPTIMIZATION_FASTER_MESSAGES",
	5: "UPDATEOPTIMIZATION_STRIP_COUNTERS",
	6: "UPDATEOPTIMIZATION_COMPACT_USERS",
	7: "UPDATEOPTIMIZATION_GROUPS_V2",
	8: "UPDATEOPTIMIZATION_STRIP_ENTITIES_V2",
}
var UpdateOptimization_value = map[string]int32{
	"UPDATEOPTIMIZATION_UNKNOWN":           0,
	"UPDATEOPTIMIZATION_NONE":              1,
	"UPDATEOPTIMIZATION_STRIP_ENTITIES":    2,
	"UPDATEOPTIMIZATION_ENABLE_COMBINED":   3,
	"UPDATEOPTIMIZATION_FASTER_MESSAGES":   4,
	"UPDATEOPTIMIZATION_STRIP_COUNTERS":    5,
	"UPDATEOPTIMIZATION_COMPACT_USERS":     6,
	"UPDATEOPTIMIZATION_GROUPS_V2":         7,
	"UPDATEOPTIMIZATION_STRIP_ENTITIES_V2": 8,
}

func (x UpdateOptimization) String() string {
	return proto.EnumName(UpdateOptimization_name, int32(x))
}
func (UpdateOptimization) EnumDescriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

// Empty response
type ResponseVoid struct {
}

func (m *ResponseVoid) Reset()                    { *m = ResponseVoid{} }
func (m *ResponseVoid) String() string            { return proto.CompactTextString(m) }
func (*ResponseVoid) ProtoMessage()               {}
func (*ResponseVoid) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

// Sequence response. Methods that return this value must process response in particular order
type ResponseSeq struct {
	Seq   int32  `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	State []byte `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Date  int64  `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
}

func (m *ResponseSeq) Reset()                    { *m = ResponseSeq{} }
func (m *ResponseSeq) String() string            { return proto.CompactTextString(m) }
func (*ResponseSeq) ProtoMessage()               {}
func (*ResponseSeq) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *ResponseSeq) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *ResponseSeq) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ResponseSeq) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

// Sequence response with date. Methods that return this value must process response in particular order
type ResponseSeqDate struct {
	Seq   int32      `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	State []byte     `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Date  int64      `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
	Mid   *UUIDValue `protobuf:"bytes,4,opt,name=mid" json:"mid,omitempty"`
}

func (m *ResponseSeqDate) Reset()                    { *m = ResponseSeqDate{} }
func (m *ResponseSeqDate) String() string            { return proto.CompactTextString(m) }
func (*ResponseSeqDate) ProtoMessage()               {}
func (*ResponseSeqDate) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

func (m *ResponseSeqDate) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *ResponseSeqDate) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ResponseSeqDate) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *ResponseSeqDate) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

// Response with seq, date and messageId
type ResponseSeqDateMid struct {
	Seq   int32      `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	State []byte     `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Date  int64      `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
	Mid   *UUIDValue `protobuf:"bytes,4,opt,name=mid" json:"mid,omitempty"`
}

func (m *ResponseSeqDateMid) Reset()                    { *m = ResponseSeqDateMid{} }
func (m *ResponseSeqDateMid) String() string            { return proto.CompactTextString(m) }
func (*ResponseSeqDateMid) ProtoMessage()               {}
func (*ResponseSeqDateMid) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{3} }

func (m *ResponseSeqDateMid) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *ResponseSeqDateMid) GetState() []byte {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ResponseSeqDateMid) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *ResponseSeqDateMid) GetMid() *UUIDValue {
	if m != nil {
		return m.Mid
	}
	return nil
}

// Boolean response
type ResponseBool struct {
	Value bool `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *ResponseBool) Reset()                    { *m = ResponseBool{} }
func (m *ResponseBool) String() string            { return proto.CompactTextString(m) }
func (*ResponseBool) ProtoMessage()               {}
func (*ResponseBool) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{4} }

func (m *ResponseBool) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// Configuration of system
// maxGroupSize Current maximum group size
// discover Discover configuration
// shareEndpoint Share endpoint
// callsConfig Calls configuration
// groupInviteConfig Group invite configuration
// serverMetaInfo Server meta information (version, etc.)
// customProfileSchema Custom profile JSON Schema
// servicePeers Service peers supported interpreted by the client
type Config struct {
	MaxGroupSize        int32                        `protobuf:"varint,1,opt,name=max_group_size,json=maxGroupSize" json:"max_group_size,omitempty"`
	Discover            *Discover                    `protobuf:"bytes,2,opt,name=discover" json:"discover,omitempty"`
	ShareEndpoint       *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=share_endpoint,json=shareEndpoint" json:"share_endpoint,omitempty"`
	CallsConfig         *CallsConfig                 `protobuf:"bytes,5,opt,name=calls_config,json=callsConfig" json:"calls_config,omitempty"`
	GroupInviteConfig   *InvitesConfig               `protobuf:"bytes,6,opt,name=group_invite_config,json=groupInviteConfig" json:"group_invite_config,omitempty"`
	ServerMetaInfo      *ServerMetaInfo              `protobuf:"bytes,7,opt,name=server_meta_info,json=serverMetaInfo" json:"server_meta_info,omitempty"`
	CustomProfileSchema string                       `protobuf:"bytes,8,opt,name=custom_profile_schema,json=customProfileSchema" json:"custom_profile_schema,omitempty"`
	ServicePeers        *ServicePeers                `protobuf:"bytes,9,opt,name=service_peers,json=servicePeers" json:"service_peers,omitempty"`
	Extensions          []*Any                       `protobuf:"bytes,3,rep,name=extensions" json:"extensions,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{5} }

func (m *Config) GetMaxGroupSize() int32 {
	if m != nil {
		return m.MaxGroupSize
	}
	return 0
}

func (m *Config) GetDiscover() *Discover {
	if m != nil {
		return m.Discover
	}
	return nil
}

func (m *Config) GetShareEndpoint() *google_protobuf.StringValue {
	if m != nil {
		return m.ShareEndpoint
	}
	return nil
}

func (m *Config) GetCallsConfig() *CallsConfig {
	if m != nil {
		return m.CallsConfig
	}
	return nil
}

func (m *Config) GetGroupInviteConfig() *InvitesConfig {
	if m != nil {
		return m.GroupInviteConfig
	}
	return nil
}

func (m *Config) GetServerMetaInfo() *ServerMetaInfo {
	if m != nil {
		return m.ServerMetaInfo
	}
	return nil
}

func (m *Config) GetCustomProfileSchema() string {
	if m != nil {
		return m.CustomProfileSchema
	}
	return ""
}

func (m *Config) GetServicePeers() *ServicePeers {
	if m != nil {
		return m.ServicePeers
	}
	return nil
}

func (m *Config) GetExtensions() []*Any {
	if m != nil {
		return m.Extensions
	}
	return nil
}

// Service peers
type ServicePeers struct {
	Security *OutPeer `protobuf:"bytes,1,opt,name=security" json:"security,omitempty"`
	Support  *OutPeer `protobuf:"bytes,2,opt,name=support" json:"support,omitempty"`
	Stash    *OutPeer `protobuf:"bytes,3,opt,name=stash" json:"stash,omitempty"`
}

func (m *ServicePeers) Reset()                    { *m = ServicePeers{} }
func (m *ServicePeers) String() string            { return proto.CompactTextString(m) }
func (*ServicePeers) ProtoMessage()               {}
func (*ServicePeers) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{6} }

func (m *ServicePeers) GetSecurity() *OutPeer {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *ServicePeers) GetSupport() *OutPeer {
	if m != nil {
		return m.Support
	}
	return nil
}

func (m *ServicePeers) GetStash() *OutPeer {
	if m != nil {
		return m.Stash
	}
	return nil
}

// Some info about the servr
// releaseDate Server release date in milliseconds
// apiVersion Server api version
type ServerMetaInfo struct {
	ReleaseDate int64                       `protobuf:"varint,1,opt,name=release_date,json=releaseDate" json:"release_date,omitempty"`
	ApiVersion  *google_protobuf.Int64Value `protobuf:"bytes,2,opt,name=api_version,json=apiVersion" json:"api_version,omitempty"`
}

func (m *ServerMetaInfo) Reset()                    { *m = ServerMetaInfo{} }
func (m *ServerMetaInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerMetaInfo) ProtoMessage()               {}
func (*ServerMetaInfo) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{7} }

func (m *ServerMetaInfo) GetReleaseDate() int64 {
	if m != nil {
		return m.ReleaseDate
	}
	return 0
}

func (m *ServerMetaInfo) GetApiVersion() *google_protobuf.Int64Value {
	if m != nil {
		return m.ApiVersion
	}
	return nil
}

// Calls configuration
// callsEnabled If true then client should enable calls
// videoCallsEnabled If true then client should enable video calls
// groupCallsEnabled If true then client should enable group calls
// groupCallsMaxMembers Determines how many members may participate in call
// rtcpMuxPolicy The RTCP mux policy to use when gathering ICE candidates
// emojiSecurityEnabled If true then client should send and render emoji security
// screenSharingEnabled If true then client should enable screen sharing
type CallsConfig struct {
	CallsEnabled         *google_protobuf.BoolValue  `protobuf:"bytes,1,opt,name=calls_enabled,json=callsEnabled" json:"calls_enabled,omitempty"`
	VideoCallsEnabled    *google_protobuf.BoolValue  `protobuf:"bytes,2,opt,name=video_calls_enabled,json=videoCallsEnabled" json:"video_calls_enabled,omitempty"`
	GroupCallsEnabled    *google_protobuf.BoolValue  `protobuf:"bytes,3,opt,name=group_calls_enabled,json=groupCallsEnabled" json:"group_calls_enabled,omitempty"`
	GroupCallsMaxMembers *google_protobuf.Int32Value `protobuf:"bytes,4,opt,name=group_calls_max_members,json=groupCallsMaxMembers" json:"group_calls_max_members,omitempty"`
	RtcpMuxPolicy        RtcpMuxPolicy               `protobuf:"varint,5,opt,name=rtcp_mux_policy,json=rtcpMuxPolicy,enum=dialog.RtcpMuxPolicy" json:"rtcp_mux_policy,omitempty"`
	EmojiSecurityEnabled *google_protobuf.BoolValue  `protobuf:"bytes,6,opt,name=emoji_security_enabled,json=emojiSecurityEnabled" json:"emoji_security_enabled,omitempty"`
	ScreenSharingEnabled *google_protobuf.BoolValue  `protobuf:"bytes,7,opt,name=screen_sharing_enabled,json=screenSharingEnabled" json:"screen_sharing_enabled,omitempty"`
}

func (m *CallsConfig) Reset()                    { *m = CallsConfig{} }
func (m *CallsConfig) String() string            { return proto.CompactTextString(m) }
func (*CallsConfig) ProtoMessage()               {}
func (*CallsConfig) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{8} }

func (m *CallsConfig) GetCallsEnabled() *google_protobuf.BoolValue {
	if m != nil {
		return m.CallsEnabled
	}
	return nil
}

func (m *CallsConfig) GetVideoCallsEnabled() *google_protobuf.BoolValue {
	if m != nil {
		return m.VideoCallsEnabled
	}
	return nil
}

func (m *CallsConfig) GetGroupCallsEnabled() *google_protobuf.BoolValue {
	if m != nil {
		return m.GroupCallsEnabled
	}
	return nil
}

func (m *CallsConfig) GetGroupCallsMaxMembers() *google_protobuf.Int32Value {
	if m != nil {
		return m.GroupCallsMaxMembers
	}
	return nil
}

func (m *CallsConfig) GetRtcpMuxPolicy() RtcpMuxPolicy {
	if m != nil {
		return m.RtcpMuxPolicy
	}
	return RtcpMuxPolicy_RTCPMUXPOLICY_UNKNOWN
}

func (m *CallsConfig) GetEmojiSecurityEnabled() *google_protobuf.BoolValue {
	if m != nil {
		return m.EmojiSecurityEnabled
	}
	return nil
}

func (m *CallsConfig) GetScreenSharingEnabled() *google_protobuf.BoolValue {
	if m != nil {
		return m.ScreenSharingEnabled
	}
	return nil
}

// Group invites configuration
// baseUrl Base URL part
// groupInviteUrlPrefix Prefix for private group invite detection
// resolveUrlPrefix Prefix for public groups and users link detection
// shareInviteUrl Independent URL for external app sharing
type InvitesConfig struct {
	BaseUrl              *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=base_url,json=baseUrl" json:"base_url,omitempty"`
	GroupInviteUrlPrefix *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=group_invite_url_prefix,json=groupInviteUrlPrefix" json:"group_invite_url_prefix,omitempty"`
	ResolveUrlPrefix     *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=resolve_url_prefix,json=resolveUrlPrefix" json:"resolve_url_prefix,omitempty"`
	ShareInviteUrl       *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=share_invite_url,json=shareInviteUrl" json:"share_invite_url,omitempty"`
}

func (m *InvitesConfig) Reset()                    { *m = InvitesConfig{} }
func (m *InvitesConfig) String() string            { return proto.CompactTextString(m) }
func (*InvitesConfig) ProtoMessage()               {}
func (*InvitesConfig) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{9} }

func (m *InvitesConfig) GetBaseUrl() *google_protobuf.StringValue {
	if m != nil {
		return m.BaseUrl
	}
	return nil
}

func (m *InvitesConfig) GetGroupInviteUrlPrefix() *google_protobuf.StringValue {
	if m != nil {
		return m.GroupInviteUrlPrefix
	}
	return nil
}

func (m *InvitesConfig) GetResolveUrlPrefix() *google_protobuf.StringValue {
	if m != nil {
		return m.ResolveUrlPrefix
	}
	return nil
}

func (m *InvitesConfig) GetShareInviteUrl() *google_protobuf.StringValue {
	if m != nil {
		return m.ShareInviteUrl
	}
	return nil
}

// Discover description
// peers peers
type Discover struct {
	Peers []*OutPeer `protobuf:"bytes,1,rep,name=peers" json:"peers,omitempty"`
}

func (m *Discover) Reset()                    { *m = Discover{} }
func (m *Discover) String() string            { return proto.CompactTextString(m) }
func (*Discover) ProtoMessage()               {}
func (*Discover) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{10} }

func (m *Discover) GetPeers() []*OutPeer {
	if m != nil {
		return m.Peers
	}
	return nil
}

// Extention
// id Extension id
// data Extension data
type Extension struct {
	Id   int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Extension) Reset()                    { *m = Extension{} }
func (m *Extension) String() string            { return proto.CompactTextString(m) }
func (*Extension) ProtoMessage()               {}
func (*Extension) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{11} }

func (m *Extension) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Extension) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Any
// typeUrl type url
// data data
type Any struct {
	TypeUrl string `protobuf:"bytes,1,opt,name=type_url,json=typeUrl" json:"type_url,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Any) Reset()                    { *m = Any{} }
func (m *Any) String() string            { return proto.CompactTextString(m) }
func (*Any) ProtoMessage()               {}
func (*Any) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{12} }

func (m *Any) GetTypeUrl() string {
	if m != nil {
		return m.TypeUrl
	}
	return ""
}

func (m *Any) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Update about config change
type UpdateConfig struct {
	Config     *Config                     `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	ConfigHash *google_protobuf.Int64Value `protobuf:"bytes,2,opt,name=config_hash,json=configHash" json:"config_hash,omitempty"`
}

func (m *UpdateConfig) Reset()                    { *m = UpdateConfig{} }
func (m *UpdateConfig) String() string            { return proto.CompactTextString(m) }
func (*UpdateConfig) ProtoMessage()               {}
func (*UpdateConfig) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{13} }

func (m *UpdateConfig) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *UpdateConfig) GetConfigHash() *google_protobuf.Int64Value {
	if m != nil {
		return m.ConfigHash
	}
	return nil
}

type RecursiveMapValue struct {
	Items []*RecursiveMapValue_Item `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *RecursiveMapValue) Reset()                    { *m = RecursiveMapValue{} }
func (m *RecursiveMapValue) String() string            { return proto.CompactTextString(m) }
func (*RecursiveMapValue) ProtoMessage()               {}
func (*RecursiveMapValue) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{14} }

func (m *RecursiveMapValue) GetItems() []*RecursiveMapValue_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type RecursiveMapValue_Value struct {
	// Types that are valid to be assigned to Value:
	//	*RecursiveMapValue_Value_D
	//	*RecursiveMapValue_Value_I32
	//	*RecursiveMapValue_Value_I64
	//	*RecursiveMapValue_Value_Str
	//	*RecursiveMapValue_Value_Rec
	//	*RecursiveMapValue_Value_ArrayRec
	Value isRecursiveMapValue_Value_Value `protobuf_oneof:"value"`
}

func (m *RecursiveMapValue_Value) Reset()                    { *m = RecursiveMapValue_Value{} }
func (m *RecursiveMapValue_Value) String() string            { return proto.CompactTextString(m) }
func (*RecursiveMapValue_Value) ProtoMessage()               {}
func (*RecursiveMapValue_Value) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{14, 0} }

type isRecursiveMapValue_Value_Value interface {
	isRecursiveMapValue_Value_Value()
}

type RecursiveMapValue_Value_D struct {
	D *google_protobuf.DoubleValue `protobuf:"bytes,2,opt,name=d,oneof"`
}
type RecursiveMapValue_Value_I32 struct {
	I32 *google_protobuf.Int32Value `protobuf:"bytes,3,opt,name=i32,oneof"`
}
type RecursiveMapValue_Value_I64 struct {
	I64 *google_protobuf.Int64Value `protobuf:"bytes,4,opt,name=i64,oneof"`
}
type RecursiveMapValue_Value_Str struct {
	Str *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=str,oneof"`
}
type RecursiveMapValue_Value_Rec struct {
	Rec *RecursiveMapValue `protobuf:"bytes,6,opt,name=rec,oneof"`
}
type RecursiveMapValue_Value_ArrayRec struct {
	ArrayRec *RecursiveMapValue_Array `protobuf:"bytes,7,opt,name=array_rec,json=arrayRec,oneof"`
}

func (*RecursiveMapValue_Value_D) isRecursiveMapValue_Value_Value()        {}
func (*RecursiveMapValue_Value_I32) isRecursiveMapValue_Value_Value()      {}
func (*RecursiveMapValue_Value_I64) isRecursiveMapValue_Value_Value()      {}
func (*RecursiveMapValue_Value_Str) isRecursiveMapValue_Value_Value()      {}
func (*RecursiveMapValue_Value_Rec) isRecursiveMapValue_Value_Value()      {}
func (*RecursiveMapValue_Value_ArrayRec) isRecursiveMapValue_Value_Value() {}

func (m *RecursiveMapValue_Value) GetValue() isRecursiveMapValue_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *RecursiveMapValue_Value) GetD() *google_protobuf.DoubleValue {
	if x, ok := m.GetValue().(*RecursiveMapValue_Value_D); ok {
		return x.D
	}
	return nil
}

func (m *RecursiveMapValue_Value) GetI32() *google_protobuf.Int32Value {
	if x, ok := m.GetValue().(*RecursiveMapValue_Value_I32); ok {
		return x.I32
	}
	return nil
}

func (m *RecursiveMapValue_Value) GetI64() *google_protobuf.Int64Value {
	if x, ok := m.GetValue().(*RecursiveMapValue_Value_I64); ok {
		return x.I64
	}
	return nil
}

func (m *RecursiveMapValue_Value) GetStr() *google_protobuf.StringValue {
	if x, ok := m.GetValue().(*RecursiveMapValue_Value_Str); ok {
		return x.Str
	}
	return nil
}

func (m *RecursiveMapValue_Value) GetRec() *RecursiveMapValue {
	if x, ok := m.GetValue().(*RecursiveMapValue_Value_Rec); ok {
		return x.Rec
	}
	return nil
}

func (m *RecursiveMapValue_Value) GetArrayRec() *RecursiveMapValue_Array {
	if x, ok := m.GetValue().(*RecursiveMapValue_Value_ArrayRec); ok {
		return x.ArrayRec
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RecursiveMapValue_Value) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RecursiveMapValue_Value_OneofMarshaler, _RecursiveMapValue_Value_OneofUnmarshaler, _RecursiveMapValue_Value_OneofSizer, []interface{}{
		(*RecursiveMapValue_Value_D)(nil),
		(*RecursiveMapValue_Value_I32)(nil),
		(*RecursiveMapValue_Value_I64)(nil),
		(*RecursiveMapValue_Value_Str)(nil),
		(*RecursiveMapValue_Value_Rec)(nil),
		(*RecursiveMapValue_Value_ArrayRec)(nil),
	}
}

func _RecursiveMapValue_Value_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RecursiveMapValue_Value)
	// value
	switch x := m.Value.(type) {
	case *RecursiveMapValue_Value_D:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.D); err != nil {
			return err
		}
	case *RecursiveMapValue_Value_I32:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.I32); err != nil {
			return err
		}
	case *RecursiveMapValue_Value_I64:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.I64); err != nil {
			return err
		}
	case *RecursiveMapValue_Value_Str:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Str); err != nil {
			return err
		}
	case *RecursiveMapValue_Value_Rec:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rec); err != nil {
			return err
		}
	case *RecursiveMapValue_Value_ArrayRec:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ArrayRec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RecursiveMapValue_Value.Value has unexpected type %T", x)
	}
	return nil
}

func _RecursiveMapValue_Value_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RecursiveMapValue_Value)
	switch tag {
	case 2: // value.d
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(google_protobuf.DoubleValue)
		err := b.DecodeMessage(msg)
		m.Value = &RecursiveMapValue_Value_D{msg}
		return true, err
	case 3: // value.i32
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(google_protobuf.Int32Value)
		err := b.DecodeMessage(msg)
		m.Value = &RecursiveMapValue_Value_I32{msg}
		return true, err
	case 4: // value.i64
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(google_protobuf.Int64Value)
		err := b.DecodeMessage(msg)
		m.Value = &RecursiveMapValue_Value_I64{msg}
		return true, err
	case 5: // value.str
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(google_protobuf.StringValue)
		err := b.DecodeMessage(msg)
		m.Value = &RecursiveMapValue_Value_Str{msg}
		return true, err
	case 6: // value.rec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RecursiveMapValue)
		err := b.DecodeMessage(msg)
		m.Value = &RecursiveMapValue_Value_Rec{msg}
		return true, err
	case 7: // value.array_rec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RecursiveMapValue_Array)
		err := b.DecodeMessage(msg)
		m.Value = &RecursiveMapValue_Value_ArrayRec{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RecursiveMapValue_Value_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RecursiveMapValue_Value)
	// value
	switch x := m.Value.(type) {
	case *RecursiveMapValue_Value_D:
		s := proto.Size(x.D)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RecursiveMapValue_Value_I32:
		s := proto.Size(x.I32)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RecursiveMapValue_Value_I64:
		s := proto.Size(x.I64)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RecursiveMapValue_Value_Str:
		s := proto.Size(x.Str)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RecursiveMapValue_Value_Rec:
		s := proto.Size(x.Rec)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RecursiveMapValue_Value_ArrayRec:
		s := proto.Size(x.ArrayRec)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type RecursiveMapValue_Array struct {
	Values []*RecursiveMapValue_Value `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (m *RecursiveMapValue_Array) Reset()                    { *m = RecursiveMapValue_Array{} }
func (m *RecursiveMapValue_Array) String() string            { return proto.CompactTextString(m) }
func (*RecursiveMapValue_Array) ProtoMessage()               {}
func (*RecursiveMapValue_Array) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{14, 1} }

func (m *RecursiveMapValue_Array) GetValues() []*RecursiveMapValue_Value {
	if m != nil {
		return m.Values
	}
	return nil
}

type RecursiveMapValue_Item struct {
	Key   string                   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *RecursiveMapValue_Value `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *RecursiveMapValue_Item) Reset()                    { *m = RecursiveMapValue_Item{} }
func (m *RecursiveMapValue_Item) String() string            { return proto.CompactTextString(m) }
func (*RecursiveMapValue_Item) ProtoMessage()               {}
func (*RecursiveMapValue_Item) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{14, 2} }

func (m *RecursiveMapValue_Item) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RecursiveMapValue_Item) GetValue() *RecursiveMapValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*ResponseVoid)(nil), "dialog.ResponseVoid")
	proto.RegisterType((*ResponseSeq)(nil), "dialog.ResponseSeq")
	proto.RegisterType((*ResponseSeqDate)(nil), "dialog.ResponseSeqDate")
	proto.RegisterType((*ResponseSeqDateMid)(nil), "dialog.ResponseSeqDateMid")
	proto.RegisterType((*ResponseBool)(nil), "dialog.ResponseBool")
	proto.RegisterType((*Config)(nil), "dialog.Config")
	proto.RegisterType((*ServicePeers)(nil), "dialog.ServicePeers")
	proto.RegisterType((*ServerMetaInfo)(nil), "dialog.ServerMetaInfo")
	proto.RegisterType((*CallsConfig)(nil), "dialog.CallsConfig")
	proto.RegisterType((*InvitesConfig)(nil), "dialog.InvitesConfig")
	proto.RegisterType((*Discover)(nil), "dialog.Discover")
	proto.RegisterType((*Extension)(nil), "dialog.Extension")
	proto.RegisterType((*Any)(nil), "dialog.Any")
	proto.RegisterType((*UpdateConfig)(nil), "dialog.UpdateConfig")
	proto.RegisterType((*RecursiveMapValue)(nil), "dialog.RecursiveMapValue")
	proto.RegisterType((*RecursiveMapValue_Value)(nil), "dialog.RecursiveMapValue.Value")
	proto.RegisterType((*RecursiveMapValue_Array)(nil), "dialog.RecursiveMapValue.Array")
	proto.RegisterType((*RecursiveMapValue_Item)(nil), "dialog.RecursiveMapValue.Item")
	proto.RegisterEnum("dialog.RtcpMuxPolicy", RtcpMuxPolicy_name, RtcpMuxPolicy_value)
	proto.RegisterEnum("dialog.UpdateOptimization", UpdateOptimization_name, UpdateOptimization_value)
}

func init() { proto.RegisterFile("miscellaneous.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 1517 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x57, 0x4b, 0x6f, 0xdb, 0xc6,
	0x16, 0x36, 0x25, 0xeb, 0xe1, 0x23, 0xd9, 0x91, 0xc7, 0x8f, 0x28, 0xca, 0x4b, 0xd1, 0x4d, 0x2e,
	0x74, 0x73, 0x6f, 0x64, 0x43, 0xf6, 0xcd, 0xa2, 0x05, 0x9a, 0xca, 0x32, 0x63, 0x0b, 0x89, 0x1e,
	0x21, 0x25, 0xb7, 0xe9, 0x86, 0xa0, 0xc8, 0xb1, 0x3c, 0x2d, 0x5f, 0x19, 0x52, 0xaa, 0x9d, 0x1f,
	0xd0, 0x45, 0x80, 0xa2, 0x40, 0x81, 0xfe, 0xa0, 0xfe, 0x80, 0x02, 0xfd, 0x01, 0xdd, 0x34, 0xcb,
	0x00, 0xdd, 0x76, 0x5d, 0xcc, 0x90, 0xb4, 0x5e, 0xb4, 0x0d, 0x67, 0x51, 0xa0, 0xab, 0xc4, 0xfc,
	0xbe, 0xf3, 0xcd, 0xcc, 0x99, 0x73, 0xbe, 0x33, 0x82, 0x35, 0x93, 0xb8, 0x1a, 0x36, 0x0c, 0xd5,
	0xc2, 0xf6, 0xd0, 0xad, 0x38, 0xd4, 0xf6, 0x6c, 0x94, 0xd4, 0x89, 0x6a, 0xd8, 0x83, 0xc2, 0xbd,
	0x81, 0x6d, 0x0f, 0x0c, 0xbc, 0xc5, 0xbf, 0xf6, 0x87, 0xc7, 0x5b, 0xdf, 0x52, 0xd5, 0x71, 0x30,
	0x0d, 0x78, 0x85, 0x3b, 0x01, 0xae, 0x3a, 0x64, 0x4b, 0xb5, 0x2c, 0xdb, 0x53, 0x3d, 0x62, 0x5b,
	0x21, 0xba, 0xaa, 0xe3, 0x63, 0x62, 0x91, 0xc9, 0x4f, 0x19, 0x07, 0x8f, 0xa3, 0x37, 0x5c, 0x4d,
	0x35, 0x54, 0xa7, 0xbf, 0x15, 0xfc, 0xeb, 0x7f, 0x2e, 0x3d, 0x81, 0xac, 0x84, 0x5d, 0xc7, 0xb6,
	0x5c, 0x7c, 0x64, 0x13, 0xfd, 0x93, 0xbb, 0xef, 0x9f, 0x15, 0x20, 0x4f, 0xcc, 0x8a, 0x6e, 0x0c,
	0x2a, 0x03, 0xea, 0x68, 0x95, 0x03, 0xea, 0x68, 0x21, 0xa5, 0xf4, 0x93, 0x00, 0x99, 0xf0, 0x0f,
	0x19, 0xbf, 0x41, 0xf7, 0x21, 0xee, 0xe2, 0x37, 0x79, 0xa1, 0x28, 0x94, 0x13, 0x7b, 0xcb, 0xef,
	0x3e, 0x6c, 0x2f, 0x41, 0x6a, 0x44, 0x5c, 0xd2, 0x37, 0xb0, 0xc4, 0x10, 0xf4, 0x2f, 0x48, 0xb8,
	0x9e, 0xea, 0xe1, 0x7c, 0xac, 0x28, 0x94, 0xb3, 0xb3, 0x14, 0x1f, 0x43, 0x0f, 0x60, 0x51, 0x67,
	0x9c, 0x78, 0x51, 0x28, 0xc7, 0x67, 0x39, 0x1c, 0xba, 0x6a, 0x5f, 0xbf, 0x08, 0x70, 0x63, 0x62,
	0x5f, 0xfb, 0x4c, 0xf5, 0xef, 0xda, 0x1b, 0xaa, 0x42, 0xdc, 0x24, 0x7a, 0x7e, 0xb1, 0x28, 0x94,
	0x33, 0xd5, 0xd5, 0x8a, 0x7f, 0x9d, 0x95, 0x5e, 0xaf, 0xb1, 0x7f, 0xa4, 0x1a, 0x43, 0x3c, 0xb7,
	0xb6, 0x79, 0x75, 0x9e, 0x7f, 0x15, 0x00, 0xcd, 0x9c, 0xa7, 0x49, 0xf4, 0x7f, 0xf4, 0x91, 0xa4,
	0x71, 0xa5, 0xed, 0xd9, 0xb6, 0xc1, 0xb6, 0x3a, 0x62, 0x5a, 0xfc, 0x34, 0xe9, 0xb9, 0xad, 0x72,
	0xec, 0x2a, 0xcd, 0x3f, 0x17, 0x21, 0x59, 0xb7, 0xad, 0x63, 0x32, 0x40, 0x3b, 0xb0, 0x62, 0xaa,
	0xa7, 0xca, 0x80, 0xda, 0x43, 0x47, 0x71, 0xc9, 0x5b, 0x1c, 0x9d, 0xa5, 0xac, 0xa9, 0x9e, 0x1e,
	0x30, 0x8e, 0x4c, 0xde, 0x62, 0xf4, 0x29, 0xa4, 0x75, 0xe2, 0x6a, 0xf6, 0x08, 0x53, 0x9e, 0xb1,
	0x4c, 0x35, 0x17, 0x9e, 0x75, 0x3f, 0xf8, 0x3e, 0x2b, 0x70, 0x1e, 0x80, 0x24, 0x58, 0x71, 0x4f,
	0x54, 0x8a, 0x15, 0x6c, 0xe9, 0x8e, 0x4d, 0x2c, 0x2f, 0x48, 0xd7, 0x9d, 0x8a, 0xdf, 0xa8, 0x95,
	0xb0, 0x91, 0x2b, 0xb2, 0x47, 0x89, 0x35, 0x88, 0xcc, 0xdc, 0x32, 0x97, 0x10, 0x03, 0x05, 0x24,
	0x42, 0x56, 0x53, 0x0d, 0xc3, 0x55, 0x34, 0x7e, 0xaa, 0x7c, 0x82, 0x2b, 0xae, 0x85, 0x9b, 0xaa,
	0x33, 0xcc, 0x3f, 0xf0, 0xac, 0x50, 0x46, 0x1b, 0x63, 0xa8, 0x0b, 0x6b, 0x7e, 0x22, 0x88, 0x35,
	0x22, 0x1e, 0x0e, 0xd5, 0x92, 0x5c, 0x6d, 0x23, 0x54, 0x6b, 0x70, 0xf0, 0x02, 0xbd, 0x55, 0x2e,
	0xe0, 0x53, 0x02, 0xd5, 0x36, 0xe4, 0x5c, 0x4c, 0x47, 0x98, 0x2a, 0x26, 0xf6, 0x54, 0x85, 0x58,
	0xc7, 0x76, 0x3e, 0xc5, 0x25, 0x37, 0x43, 0x49, 0x99, 0xe3, 0x4d, 0xec, 0xa9, 0x0d, 0xeb, 0xd8,
	0x9e, 0xd5, 0x5c, 0x71, 0xa7, 0x60, 0x54, 0x83, 0x0d, 0x6d, 0xe8, 0x7a, 0xb6, 0xa9, 0x38, 0xd4,
	0x3e, 0x26, 0x06, 0x56, 0x5c, 0xed, 0x04, 0x9b, 0x6a, 0x3e, 0x5d, 0x14, 0xca, 0x4b, 0xb3, 0xd1,
	0x6b, 0x3e, 0xb7, 0xe3, 0x53, 0x65, 0xce, 0x44, 0x87, 0xb0, 0xcc, 0x44, 0x89, 0x86, 0x15, 0xee,
	0x76, 0xf9, 0x25, 0xbe, 0xa1, 0xf5, 0xc9, 0x0d, 0x11, 0x0d, 0x77, 0x18, 0x36, 0x57, 0x0b, 0xee,
	0x04, 0x88, 0xfe, 0x0b, 0x80, 0x4f, 0x3d, 0x6c, 0xb9, 0xcc, 0x41, 0xf3, 0xf1, 0x62, 0xbc, 0x9c,
	0xa9, 0x66, 0x42, 0x99, 0x9a, 0x75, 0x26, 0x4d, 0xc0, 0xa5, 0xef, 0x05, 0xc8, 0xca, 0xd3, 0xd1,
	0x69, 0x17, 0x6b, 0x43, 0x4a, 0xbc, 0x33, 0x5e, 0x78, 0x99, 0xea, 0x8d, 0x30, 0xb6, 0x3d, 0xf4,
	0x18, 0x47, 0x3a, 0x27, 0xa0, 0xff, 0x40, 0xca, 0x1d, 0x3a, 0x8e, 0x4d, 0xbd, 0xa0, 0xea, 0xe6,
	0xb8, 0x21, 0x8e, 0x1e, 0xf1, 0x86, 0x76, 0x4f, 0x78, 0xb3, 0x46, 0x10, 0x7d, 0xb4, 0xf4, 0x83,
	0x00, 0x2b, 0xd3, 0xb9, 0x47, 0xdb, 0x90, 0xa5, 0xd8, 0xc0, 0xaa, 0x8b, 0x15, 0xde, 0xed, 0x42,
	0x54, 0xb7, 0x67, 0x02, 0x0a, 0x37, 0xcc, 0x17, 0x90, 0x51, 0x1d, 0xa2, 0x8c, 0x30, 0x65, 0x87,
	0x0c, 0xb6, 0x76, 0x7b, 0xae, 0x9a, 0x1b, 0x96, 0xf7, 0x74, 0x37, 0xb2, 0x98, 0x41, 0x75, 0xc8,
	0x91, 0x1f, 0x5d, 0xfa, 0x2e, 0x01, 0x99, 0x89, 0x72, 0x45, 0x2d, 0x58, 0xf6, 0x2b, 0x1b, 0x5b,
	0x6a, 0xdf, 0xc0, 0x7a, 0x90, 0xa5, 0xc2, 0x9c, 0x3c, 0x33, 0x87, 0x48, 0x75, 0xbf, 0x33, 0x44,
	0x3f, 0x1c, 0xbd, 0x86, 0xb5, 0x11, 0xd1, 0xb1, 0xad, 0x4c, 0xab, 0xc6, 0xae, 0xab, 0xba, 0xca,
	0x55, 0xea, 0x33, 0xd2, 0x7e, 0xf7, 0x4c, 0x4b, 0xc7, 0xaf, 0x2d, 0xcd, 0x55, 0xa6, 0xa4, 0x55,
	0xb8, 0x39, 0x29, 0xcd, 0x1c, 0xcb, 0xc4, 0x66, 0x9f, 0x15, 0xee, 0xe2, 0xc5, 0xe9, 0xde, 0xa9,
	0x46, 0xea, 0xaf, 0x8f, 0xf5, 0x9b, 0xea, 0x69, 0xd3, 0xd7, 0x41, 0x2f, 0xe1, 0x06, 0xf5, 0x34,
	0x47, 0x31, 0x87, 0xa7, 0x8a, 0x63, 0x1b, 0x44, 0x3b, 0xe3, 0x2e, 0xb2, 0x32, 0xee, 0x7b, 0xc9,
	0xd3, 0x9c, 0xe6, 0xf0, 0xb4, 0xc3, 0xc1, 0x39, 0x43, 0xa2, 0x93, 0x28, 0x52, 0x60, 0x13, 0x9b,
	0xf6, 0xd7, 0x44, 0x09, 0x8b, 0xf7, 0x3c, 0x1d, 0xc9, 0xeb, 0xa6, 0x63, 0x9d, 0x0b, 0xc9, 0x81,
	0x4e, 0x98, 0x11, 0x05, 0x36, 0x5d, 0x8d, 0x62, 0x6c, 0x29, 0xcc, 0x09, 0x89, 0x35, 0x38, 0x5f,
	0x20, 0x75, 0xed, 0x05, 0x7c, 0x21, 0xd9, 0xd7, 0x09, 0x16, 0x28, 0xfd, 0x11, 0x83, 0xe5, 0x29,
	0xa7, 0x43, 0xcf, 0x21, 0xdd, 0x67, 0x6d, 0x31, 0xa4, 0x46, 0x50, 0x85, 0xd7, 0xb2, 0xec, 0x14,
	0x0b, 0xee, 0x51, 0x03, 0xf5, 0xc3, 0xcb, 0x0c, 0x5c, 0x76, 0x48, 0x0d, 0xc5, 0xa1, 0xf8, 0x98,
	0x9c, 0x06, 0x65, 0x78, 0x2d, 0xd9, 0xf5, 0x09, 0xc3, 0xed, 0x51, 0xa3, 0xc3, 0x85, 0xd0, 0x6b,
	0x40, 0x14, 0xbb, 0xb6, 0x31, 0x9a, 0x92, 0x8f, 0x5f, 0x5f, 0x3e, 0x17, 0xc8, 0x8c, 0xa5, 0x7b,
	0x90, 0xf3, 0xe7, 0xd7, 0x78, 0xfb, 0x1f, 0x33, 0xc1, 0xfc, 0x21, 0x78, 0xbe, 0xef, 0xd2, 0xe7,
	0x90, 0x0e, 0x67, 0x27, 0xda, 0x85, 0x84, 0xef, 0xca, 0x02, 0xb7, 0xd3, 0x59, 0xf7, 0x9a, 0x1b,
	0xfa, 0x9c, 0x5c, 0x6a, 0xc2, 0x92, 0x18, 0x5a, 0x2d, 0xba, 0x0b, 0x31, 0xa2, 0x47, 0xcf, 0xf2,
	0x18, 0xd1, 0x83, 0xb7, 0x8c, 0x1a, 0xfd, 0xde, 0xe1, 0x50, 0xe9, 0x15, 0xc4, 0x6b, 0xd6, 0x19,
	0x2a, 0x43, 0xda, 0x3b, 0x73, 0xc6, 0xb7, 0x3e, 0x37, 0x5f, 0x52, 0x0c, 0x66, 0xf7, 0x5a, 0x9c,
	0xd2, 0xcc, 0xbe, 0xfb, 0xb0, 0x9d, 0x86, 0xe4, 0x09, 0xd1, 0x75, 0x6c, 0x05, 0x92, 0x3f, 0x0a,
	0x90, 0xed, 0x39, 0xcc, 0x56, 0x83, 0x92, 0xfa, 0x3f, 0x24, 0x83, 0x19, 0xeb, 0x17, 0xd4, 0xca,
	0xf9, 0xc4, 0x8e, 0x1c, 0xae, 0x01, 0x99, 0x39, 0xae, 0xff, 0x3f, 0xe5, 0x84, 0x79, 0xfc, 0x47,
	0x38, 0xae, 0x1f, 0x7e, 0xc8, 0x66, 0xc0, 0x6f, 0x8b, 0xb0, 0x2a, 0xb1, 0xee, 0x72, 0xc9, 0x08,
	0x37, 0x55, 0x87, 0x07, 0xa0, 0x3a, 0x24, 0x88, 0x87, 0xcd, 0xf0, 0x0a, 0xee, 0x9d, 0x9b, 0xc0,
	0x2c, 0xb3, 0xd2, 0xf0, 0xb0, 0x39, 0x77, 0x23, 0x3c, 0xb6, 0xf0, 0x73, 0x0c, 0x12, 0xbe, 0xdc,
	0xff, 0x40, 0xd0, 0x2f, 0xac, 0xee, 0x7d, 0x7b, 0xd8, 0x37, 0x30, 0x27, 0x1e, 0x2e, 0x48, 0x82,
	0x8e, 0xb6, 0x20, 0x4e, 0x76, 0xaa, 0x41, 0xb9, 0x5e, 0x66, 0x6d, 0x87, 0x0b, 0x12, 0x63, 0xf2,
	0x80, 0xa7, 0xbb, 0x97, 0x79, 0x61, 0x90, 0x08, 0x1e, 0xf0, 0x74, 0x17, 0x6d, 0x43, 0xdc, 0xf5,
	0x68, 0xf0, 0x4e, 0xba, 0xb4, 0x6e, 0x59, 0x84, 0xeb, 0x51, 0xf4, 0x04, 0xe2, 0x14, 0x6b, 0x81,
	0x7d, 0xdd, 0xba, 0x30, 0x1d, 0x8c, 0x4e, 0xb1, 0x86, 0x3e, 0x83, 0x25, 0x95, 0x52, 0xf5, 0x4c,
	0x61, 0x41, 0xbe, 0x25, 0xdd, 0xbf, 0x38, 0x87, 0x35, 0x46, 0x3d, 0x5c, 0x90, 0xd2, 0x3c, 0x46,
	0xc2, 0xda, 0x5e, 0x2a, 0x78, 0xe6, 0x16, 0xda, 0x90, 0xe0, 0x28, 0x7a, 0x0e, 0x49, 0xfe, 0x25,
	0xbc, 0x92, 0x4b, 0xe4, 0x22, 0xef, 0x3c, 0x88, 0x2e, 0x98, 0xb0, 0xc8, 0xae, 0x8c, 0xfd, 0x28,
	0xf8, 0x06, 0x9f, 0x45, 0xd7, 0x34, 0x43, 0xd0, 0x7e, 0xf8, 0xd2, 0x8e, 0x5d, 0xb5, 0xfd, 0xc8,
	0xf5, 0xfc, 0xe0, 0xc7, 0x7d, 0x58, 0x9e, 0x1a, 0x1c, 0xe8, 0x16, 0x6c, 0x48, 0xdd, 0x7a, 0xa7,
	0xd9, 0xfb, 0xb2, 0xd3, 0x7e, 0xd9, 0xa8, 0xbf, 0x56, 0x7a, 0xad, 0x17, 0xad, 0xf6, 0x17, 0xad,
	0xdc, 0x02, 0xba, 0x0d, 0x37, 0xa7, 0xa1, 0x96, 0x78, 0xd0, 0xee, 0x36, 0x6a, 0x5d, 0x31, 0x27,
	0xcc, 0xc7, 0x49, 0xe2, 0xab, 0x5e, 0x43, 0x12, 0x73, 0xb1, 0xc7, 0xbf, 0xc7, 0x00, 0xf9, 0x7d,
	0xd5, 0x76, 0x3c, 0x62, 0x92, 0xb7, 0xfc, 0x27, 0x2e, 0xba, 0x07, 0x85, 0x5e, 0x67, 0xbf, 0xd6,
	0x15, 0xdb, 0x9d, 0x6e, 0xa3, 0xd9, 0xf8, 0xaa, 0xd6, 0x6d, 0xb4, 0x5b, 0xd3, 0xcb, 0x45, 0xe0,
	0xad, 0x76, 0x8b, 0x2d, 0xf7, 0x08, 0x1e, 0x44, 0x80, 0x72, 0x57, 0x6a, 0x74, 0x14, 0xb1, 0xd5,
	0x6d, 0x74, 0x1b, 0xa2, 0x9c, 0x8b, 0xa1, 0x7f, 0x43, 0x29, 0x82, 0x26, 0xb6, 0x6a, 0x7b, 0x2f,
	0x45, 0xa5, 0xde, 0x6e, 0xee, 0x35, 0x5a, 0xe2, 0x7e, 0x2e, 0x7e, 0x01, 0xef, 0x79, 0x4d, 0xee,
	0x8a, 0x92, 0xd2, 0x14, 0x65, 0xb9, 0x76, 0x20, 0xca, 0xb9, 0xc5, 0x4b, 0x97, 0xad, 0xb7, 0x7b,
	0xad, 0xae, 0x28, 0xc9, 0xb9, 0x04, 0x7a, 0x08, 0xc5, 0x08, 0x5a, 0xbd, 0xdd, 0xec, 0xd4, 0xea,
	0x5d, 0xa5, 0x27, 0x33, 0x56, 0x12, 0x15, 0xe1, 0x4e, 0x04, 0xeb, 0x40, 0x6a, 0xf7, 0x3a, 0xb2,
	0x72, 0x54, 0xcd, 0xa5, 0x50, 0x19, 0x1e, 0x5e, 0x79, 0x4a, 0xc6, 0x4c, 0xef, 0xdd, 0x7a, 0xff,
	0x6c, 0x13, 0xd6, 0x27, 0x7f, 0x52, 0x05, 0xcf, 0x60, 0xb7, 0x9f, 0xe4, 0x7d, 0xb3, 0xf3, 0x57,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xa8, 0xb1, 0xd0, 0x99, 0xa7, 0x10, 0x00, 0x00,
}
