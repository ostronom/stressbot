// Code generated by protoc-gen-go. DO NOT EDIT.
// source: privacy.proto

package dialog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/types"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Block User
type RequestBlockUser struct {
	Peer                 *UserOutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RequestBlockUser) Reset()         { *m = RequestBlockUser{} }
func (m *RequestBlockUser) String() string { return proto.CompactTextString(m) }
func (*RequestBlockUser) ProtoMessage()    {}
func (*RequestBlockUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_privacy_7682d078fa2ea2a1, []int{0}
}
func (m *RequestBlockUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestBlockUser.Unmarshal(m, b)
}
func (m *RequestBlockUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestBlockUser.Marshal(b, m, deterministic)
}
func (dst *RequestBlockUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestBlockUser.Merge(dst, src)
}
func (m *RequestBlockUser) XXX_Size() int {
	return xxx_messageInfo_RequestBlockUser.Size(m)
}
func (m *RequestBlockUser) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestBlockUser.DiscardUnknown(m)
}

var xxx_messageInfo_RequestBlockUser proto.InternalMessageInfo

func (m *RequestBlockUser) GetPeer() *UserOutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// Unblock User
type RequestUnblockUser struct {
	Peer                 *UserOutPeer `protobuf:"bytes,1,opt,name=peer" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RequestUnblockUser) Reset()         { *m = RequestUnblockUser{} }
func (m *RequestUnblockUser) String() string { return proto.CompactTextString(m) }
func (*RequestUnblockUser) ProtoMessage()    {}
func (*RequestUnblockUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_privacy_7682d078fa2ea2a1, []int{1}
}
func (m *RequestUnblockUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestUnblockUser.Unmarshal(m, b)
}
func (m *RequestUnblockUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestUnblockUser.Marshal(b, m, deterministic)
}
func (dst *RequestUnblockUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestUnblockUser.Merge(dst, src)
}
func (m *RequestUnblockUser) XXX_Size() int {
	return xxx_messageInfo_RequestUnblockUser.Size(m)
}
func (m *RequestUnblockUser) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestUnblockUser.DiscardUnknown(m)
}

var xxx_messageInfo_RequestUnblockUser proto.InternalMessageInfo

func (m *RequestUnblockUser) GetPeer() *UserOutPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// Load Blocked Users
type RequestLoadBlockedUsers struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestLoadBlockedUsers) Reset()         { *m = RequestLoadBlockedUsers{} }
func (m *RequestLoadBlockedUsers) String() string { return proto.CompactTextString(m) }
func (*RequestLoadBlockedUsers) ProtoMessage()    {}
func (*RequestLoadBlockedUsers) Descriptor() ([]byte, []int) {
	return fileDescriptor_privacy_7682d078fa2ea2a1, []int{2}
}
func (m *RequestLoadBlockedUsers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestLoadBlockedUsers.Unmarshal(m, b)
}
func (m *RequestLoadBlockedUsers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestLoadBlockedUsers.Marshal(b, m, deterministic)
}
func (dst *RequestLoadBlockedUsers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestLoadBlockedUsers.Merge(dst, src)
}
func (m *RequestLoadBlockedUsers) XXX_Size() int {
	return xxx_messageInfo_RequestLoadBlockedUsers.Size(m)
}
func (m *RequestLoadBlockedUsers) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestLoadBlockedUsers.DiscardUnknown(m)
}

var xxx_messageInfo_RequestLoadBlockedUsers proto.InternalMessageInfo

type ResponseLoadBlockedUsers struct {
	UserPeers            []*UserOutPeer `protobuf:"bytes,1,rep,name=user_peers,json=userPeers" json:"user_peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ResponseLoadBlockedUsers) Reset()         { *m = ResponseLoadBlockedUsers{} }
func (m *ResponseLoadBlockedUsers) String() string { return proto.CompactTextString(m) }
func (*ResponseLoadBlockedUsers) ProtoMessage()    {}
func (*ResponseLoadBlockedUsers) Descriptor() ([]byte, []int) {
	return fileDescriptor_privacy_7682d078fa2ea2a1, []int{3}
}
func (m *ResponseLoadBlockedUsers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseLoadBlockedUsers.Unmarshal(m, b)
}
func (m *ResponseLoadBlockedUsers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseLoadBlockedUsers.Marshal(b, m, deterministic)
}
func (dst *ResponseLoadBlockedUsers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseLoadBlockedUsers.Merge(dst, src)
}
func (m *ResponseLoadBlockedUsers) XXX_Size() int {
	return xxx_messageInfo_ResponseLoadBlockedUsers.Size(m)
}
func (m *ResponseLoadBlockedUsers) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseLoadBlockedUsers.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseLoadBlockedUsers proto.InternalMessageInfo

func (m *ResponseLoadBlockedUsers) GetUserPeers() []*UserOutPeer {
	if m != nil {
		return m.UserPeers
	}
	return nil
}

// Update about User Blocked
type UpdateUserBlocked struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserBlocked) Reset()         { *m = UpdateUserBlocked{} }
func (m *UpdateUserBlocked) String() string { return proto.CompactTextString(m) }
func (*UpdateUserBlocked) ProtoMessage()    {}
func (*UpdateUserBlocked) Descriptor() ([]byte, []int) {
	return fileDescriptor_privacy_7682d078fa2ea2a1, []int{4}
}
func (m *UpdateUserBlocked) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserBlocked.Unmarshal(m, b)
}
func (m *UpdateUserBlocked) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserBlocked.Marshal(b, m, deterministic)
}
func (dst *UpdateUserBlocked) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserBlocked.Merge(dst, src)
}
func (m *UpdateUserBlocked) XXX_Size() int {
	return xxx_messageInfo_UpdateUserBlocked.Size(m)
}
func (m *UpdateUserBlocked) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserBlocked.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserBlocked proto.InternalMessageInfo

func (m *UpdateUserBlocked) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// Update about User Unblocked
type UpdateUserUnblocked struct {
	Uid                  int32    `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserUnblocked) Reset()         { *m = UpdateUserUnblocked{} }
func (m *UpdateUserUnblocked) String() string { return proto.CompactTextString(m) }
func (*UpdateUserUnblocked) ProtoMessage()    {}
func (*UpdateUserUnblocked) Descriptor() ([]byte, []int) {
	return fileDescriptor_privacy_7682d078fa2ea2a1, []int{5}
}
func (m *UpdateUserUnblocked) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserUnblocked.Unmarshal(m, b)
}
func (m *UpdateUserUnblocked) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserUnblocked.Marshal(b, m, deterministic)
}
func (dst *UpdateUserUnblocked) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserUnblocked.Merge(dst, src)
}
func (m *UpdateUserUnblocked) XXX_Size() int {
	return xxx_messageInfo_UpdateUserUnblocked.Size(m)
}
func (m *UpdateUserUnblocked) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserUnblocked.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserUnblocked proto.InternalMessageInfo

func (m *UpdateUserUnblocked) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func init() {
	proto.RegisterType((*RequestBlockUser)(nil), "dialog.RequestBlockUser")
	proto.RegisterType((*RequestUnblockUser)(nil), "dialog.RequestUnblockUser")
	proto.RegisterType((*RequestLoadBlockedUsers)(nil), "dialog.RequestLoadBlockedUsers")
	proto.RegisterType((*ResponseLoadBlockedUsers)(nil), "dialog.ResponseLoadBlockedUsers")
	proto.RegisterType((*UpdateUserBlocked)(nil), "dialog.UpdateUserBlocked")
	proto.RegisterType((*UpdateUserUnblocked)(nil), "dialog.UpdateUserUnblocked")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PrivacyClient is the client API for Privacy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PrivacyClient interface {
	BlockUser(ctx context.Context, in *RequestBlockUser, opts ...grpc.CallOption) (*ResponseSeq, error)
	UnblockUser(ctx context.Context, in *RequestUnblockUser, opts ...grpc.CallOption) (*ResponseSeq, error)
	LoadBlockedUsers(ctx context.Context, in *RequestLoadBlockedUsers, opts ...grpc.CallOption) (*ResponseLoadBlockedUsers, error)
}

type privacyClient struct {
	cc *grpc.ClientConn
}

func NewPrivacyClient(cc *grpc.ClientConn) PrivacyClient {
	return &privacyClient{cc}
}

func (c *privacyClient) BlockUser(ctx context.Context, in *RequestBlockUser, opts ...grpc.CallOption) (*ResponseSeq, error) {
	out := new(ResponseSeq)
	err := c.cc.Invoke(ctx, "/dialog.Privacy/BlockUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *privacyClient) UnblockUser(ctx context.Context, in *RequestUnblockUser, opts ...grpc.CallOption) (*ResponseSeq, error) {
	out := new(ResponseSeq)
	err := c.cc.Invoke(ctx, "/dialog.Privacy/UnblockUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *privacyClient) LoadBlockedUsers(ctx context.Context, in *RequestLoadBlockedUsers, opts ...grpc.CallOption) (*ResponseLoadBlockedUsers, error) {
	out := new(ResponseLoadBlockedUsers)
	err := c.cc.Invoke(ctx, "/dialog.Privacy/LoadBlockedUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PrivacyServer is the server API for Privacy service.
type PrivacyServer interface {
	BlockUser(context.Context, *RequestBlockUser) (*ResponseSeq, error)
	UnblockUser(context.Context, *RequestUnblockUser) (*ResponseSeq, error)
	LoadBlockedUsers(context.Context, *RequestLoadBlockedUsers) (*ResponseLoadBlockedUsers, error)
}

func RegisterPrivacyServer(s *grpc.Server, srv PrivacyServer) {
	s.RegisterService(&_Privacy_serviceDesc, srv)
}

func _Privacy_BlockUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestBlockUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivacyServer).BlockUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Privacy/BlockUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivacyServer).BlockUser(ctx, req.(*RequestBlockUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Privacy_UnblockUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUnblockUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivacyServer).UnblockUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Privacy/UnblockUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivacyServer).UnblockUser(ctx, req.(*RequestUnblockUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Privacy_LoadBlockedUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestLoadBlockedUsers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivacyServer).LoadBlockedUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dialog.Privacy/LoadBlockedUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivacyServer).LoadBlockedUsers(ctx, req.(*RequestLoadBlockedUsers))
	}
	return interceptor(ctx, in, info, handler)
}

var _Privacy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dialog.Privacy",
	HandlerType: (*PrivacyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BlockUser",
			Handler:    _Privacy_BlockUser_Handler,
		},
		{
			MethodName: "UnblockUser",
			Handler:    _Privacy_UnblockUser_Handler,
		},
		{
			MethodName: "LoadBlockedUsers",
			Handler:    _Privacy_LoadBlockedUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "privacy.proto",
}

func init() { proto.RegisterFile("privacy.proto", fileDescriptor_privacy_7682d078fa2ea2a1) }

var fileDescriptor_privacy_7682d078fa2ea2a1 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xe5, 0x16, 0x5a, 0x65, 0xa2, 0x4a, 0xad, 0x03, 0xd4, 0xb5, 0x82, 0x92, 0xae, 0xc4,
	0x87, 0x2a, 0x64, 0x43, 0x40, 0x95, 0xc8, 0x25, 0x52, 0x2e, 0x5c, 0x90, 0xa8, 0x02, 0x39, 0xa3,
	0x8d, 0x3d, 0x98, 0x85, 0x8d, 0x77, 0xbb, 0x6b, 0x5b, 0xe2, 0x0a, 0x37, 0xae, 0x3c, 0x1a, 0x47,
	0x6e, 0x11, 0x27, 0x9e, 0x02, 0xad, 0x3f, 0x88, 0xb5, 0x86, 0x8a, 0x4b, 0x4f, 0x99, 0xcc, 0xcc,
	0x7f, 0x7e, 0x33, 0xb3, 0x63, 0x38, 0x90, 0x8a, 0x15, 0x34, 0xfa, 0x14, 0x48, 0x25, 0x32, 0xe1,
	0xee, 0xc5, 0x8c, 0x72, 0x91, 0xf8, 0xc3, 0x44, 0x88, 0x84, 0x63, 0x48, 0x25, 0x0b, 0x69, 0x9a,
	0x8a, 0x8c, 0x66, 0x4c, 0xa4, 0xba, 0xca, 0xf2, 0x8f, 0x62, 0x7c, 0xc7, 0x52, 0xd6, 0x76, 0x0d,
	0xd6, 0x4c, 0x47, 0xc8, 0x39, 0x4d, 0x51, 0xe4, 0x8d, 0xb3, 0x2f, 0x11, 0x55, 0xf3, 0xe7, 0xb6,
	0x8e, 0x28, 0xa7, 0x72, 0x15, 0xd6, 0xbf, 0x95, 0x9b, 0xbc, 0x87, 0xc3, 0x05, 0x5e, 0xe6, 0xa8,
	0xb3, 0x39, 0x17, 0xd1, 0xc7, 0xa5, 0x46, 0xe5, 0x9e, 0xc3, 0x0d, 0xa3, 0xf4, 0x9c, 0xb1, 0xf3,
	0xb0, 0x3f, 0x19, 0x04, 0x55, 0x53, 0x81, 0x89, 0xbd, 0xca, 0xb3, 0x0b, 0x44, 0x35, 0x3f, 0xf8,
	0xfa, 0xeb, 0x71, 0x0f, 0xf6, 0x0b, 0xa6, 0xd9, 0x8a, 0xe3, 0xa2, 0xcc, 0x9f, 0x0e, 0x37, 0xb3,
	0x13, 0x38, 0x66, 0xeb, 0x20, 0xe6, 0x49, 0x90, 0x28, 0x19, 0x05, 0x2f, 0x94, 0x8c, 0xea, 0xf2,
	0xe4, 0x03, 0xb8, 0xb5, 0xb9, 0x4c, 0x57, 0xd7, 0xcc, 0x7a, 0x03, 0xc7, 0xb5, 0xf9, 0x52, 0xd0,
	0xb8, 0x9c, 0x0c, 0x63, 0x53, 0x53, 0x4f, 0x9f, 0x5f, 0x25, 0xdc, 0xcc, 0x7c, 0xf0, 0xba, 0x31,
	0x2d, 0x45, 0xaa, 0x91, 0xac, 0xc1, 0x6b, 0x6c, 0xbb, 0xac, 0x3b, 0x01, 0xc8, 0x35, 0xaa, 0xb7,
	0xe5, 0xca, 0x3d, 0x67, 0xbc, 0xfb, 0x8f, 0x69, 0x16, 0x3d, 0x93, 0x66, 0x2c, 0x3d, 0xbd, 0x7b,
	0x35, 0xee, 0x19, 0x1c, 0x2d, 0x65, 0x4c, 0x33, 0x34, 0xf2, 0x1a, 0xe6, 0x8e, 0x60, 0x37, 0x67,
	0x71, 0xb9, 0xae, 0x9b, 0xf6, 0x66, 0x4c, 0x84, 0x9c, 0xc3, 0x60, 0xab, 0xaa, 0x37, 0xfd, 0x1f,
	0xba, 0xc9, 0x8f, 0x1d, 0xd8, 0xbf, 0xa8, 0x8e, 0xd1, 0xa5, 0xd0, 0xdb, 0x5e, 0x83, 0xd7, 0x4c,
	0x61, 0xdf, 0x89, 0x3f, 0xd8, 0x46, 0xaa, 0x96, 0x5f, 0xe3, 0x25, 0xb9, 0xf7, 0xf9, 0xfb, 0xcf,
	0x6f, 0x3b, 0x23, 0xe2, 0x87, 0xc5, 0x93, 0xd0, 0x0c, 0x15, 0xd6, 0x55, 0xc3, 0x3f, 0xc2, 0xa9,
	0x73, 0xe6, 0x26, 0xd0, 0x6f, 0x9f, 0x81, 0x6f, 0x41, 0x5a, 0xb1, 0xbf, 0x63, 0x1e, 0x94, 0x98,
	0x53, 0x32, 0xec, 0x60, 0x5a, 0x52, 0x03, 0xfa, 0xe2, 0xc0, 0x61, 0xe7, 0xb5, 0x46, 0x16, 0xce,
	0x4e, 0xf0, 0xc7, 0x36, 0xd3, 0xce, 0x20, 0x8f, 0xca, 0x06, 0xee, 0x93, 0xd3, 0x4e, 0x03, 0x9d,
	0x93, 0x73, 0xce, 0xe6, 0x27, 0x9b, 0xd9, 0x1d, 0xb8, 0xd5, 0x7e, 0x6a, 0x8d, 0xaa, 0x60, 0x11,
	0xea, 0xd5, 0x5e, 0xf9, 0x21, 0x3e, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x77, 0xff, 0x12, 0xff,
	0x0b, 0x04, 0x00, 0x00,
}
